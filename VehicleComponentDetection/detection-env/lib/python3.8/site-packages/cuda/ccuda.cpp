/* Generated by Cython 0.29.24 */

/* BEGIN: Cython Metadata
{
    "distutils": {
        "depends": [
            "cuda"
        ],
        "extra_compile_args": [
            "-std=c++14",
            "-fpermissive",
            "-Wno-deprecated-declarations",
            "-D _GLIBCXX_ASSERTIONS",
            "-fno-var-tracking-assignments",
            "-O3"
        ],
        "include_dirs": [
            "./cuda",
            "cuda",
            "/opt/python/cp37-cp37m/include"
        ],
        "language": "c++",
        "library_dirs": [
            "/opt/python/cp37-cp37m/lib/python3.7/site-packages",
            "/opt/python/cp37-cp37m/lib"
        ],
        "name": "cuda.ccuda",
        "sources": [
            "cuda/ccuda.pyx"
        ]
    },
    "module_name": "cuda.ccuda"
}
END: Cython Metadata */

#ifndef PY_SSIZE_T_CLEAN
#define PY_SSIZE_T_CLEAN
#endif /* PY_SSIZE_T_CLEAN */
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.6+ or Python 3.3+.
#else
#define CYTHON_ABI "0_29_24"
#define CYTHON_HEX_VERSION 0x001D18F0
#define CYTHON_FUTURE_DIVISION 1
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #if PY_VERSION_HEX >= 0x02070000
    #define HAVE_LONG_LONG
  #endif
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#elif defined(PYSTON_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 0
  #elif !defined(CYTHON_USE_PYTYPE_LOOKUP)
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 0
  #elif !defined(CYTHON_USE_PYLONG_INTERNALS)
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT (PY_VERSION_HEX >= 0x03050000)
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1)
  #endif
  #ifndef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS (PY_VERSION_HEX >= 0x030600B1)
  #endif
  #ifndef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK (PY_VERSION_HEX >= 0x030700A3)
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_MAYBE_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_MAYBE_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
           typedef unsigned char     uint8_t;
           typedef unsigned int      uint32_t;
        #else
           typedef unsigned __int8   uint8_t;
           typedef unsigned __int32  uint32_t;
        #endif
    #endif
#else
   #include <stdint.h>
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus) && __cplusplus >= 201103L
    #if __has_cpp_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH [[fallthrough]]
    #elif __has_cpp_attribute(clang::fallthrough)
      #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
    #elif __has_cpp_attribute(gnu::fallthrough)
      #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__ ) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(U other) { return *ptr == other; }
    template<typename U> bool operator !=(U other) { return *ptr != other; }
  private:
    T *ptr;
};

#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
#if PY_VERSION_HEX >= 0x030800A4 && PY_VERSION_HEX < 0x030800B2
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, 0, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
#endif
#if CYTHON_FAST_PYCCALL
#define __Pyx_PyFastCFunction_Check(func)\
    ((PyCFunction_Check(func) && (METH_FASTCALL == (PyCFunction_GET_FLAGS(func) & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)))))
#else
#define __Pyx_PyFastCFunction_Check(func) 0
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030400A1
  #define PyMem_RawMalloc(n)           PyMem_Malloc(n)
  #define PyMem_RawRealloc(p, n)       PyMem_Realloc(p, n)
  #define PyMem_RawFree(p)             PyMem_Free(p)
#endif
#if CYTHON_COMPILING_IN_PYSTON
  #define __Pyx_PyCode_HasFreeVars(co)  PyCode_HasFreeVars(co)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if !CYTHON_FAST_THREAD_STATE || PY_VERSION_HEX < 0x02070000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0;
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif
#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStr(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
#else
#define __Pyx_PyDict_GetItemStr(dict, name)  PyDict_GetItem(dict, name)
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #if defined(PyUnicode_IS_READY)
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #else
  #define __Pyx_PyUnicode_READY(op)       (0)
  #endif
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)
  #if defined(PyUnicode_IS_READY) && defined(PyUnicode_GET_SIZE)
  #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03090000
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : ((PyCompactUnicodeObject *)(u))->wstr_length))
  #else
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
  #endif
  #else
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))
  #endif
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535 : 1114111)
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyByteArray_Check)
  #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)
  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None || (PyString_Check(b) && !PyString_CheckExact(b)))) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#ifndef PyObject_Unicode
  #define PyObject_Unicode             PyObject_Str
#endif
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#if PY_VERSION_HEX >= 0x030900A4
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_SET_REFCNT(obj, refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SET_SIZE(obj, size)
#else
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_REFCNT(obj) = (refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SIZE(obj) = (size)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
#else
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? ((void)(klass), PyMethod_New(func, self)) : __Pyx_NewRef(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif

#define __PYX_MARK_ERR_POS(f_index, lineno) \
    { __pyx_filename = __pyx_f[f_index]; (void)__pyx_filename; __pyx_lineno = lineno; (void)__pyx_lineno; __pyx_clineno = __LINE__; (void)__pyx_clineno; }
#define __PYX_ERR(f_index, lineno, Ln_error) \
    { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__cuda__ccuda
#define __PYX_HAVE_API__cuda__ccuda
/* Early includes */
#include <stdint.h>
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT (PY_MAJOR_VERSION >= 3 && __PYX_DEFAULT_STRING_ENCODING_IS_UTF8)
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u) {
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c) + 1);
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

static PyObject *__pyx_m = NULL;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_cython_runtime = NULL;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "cuda/ccuda.pyx",
};
/* ForceInitThreads.proto */
#ifndef __PYX_FORCE_INIT_THREADS
  #define __PYX_FORCE_INIT_THREADS 0
#endif

/* NoFastGil.proto */
#define __Pyx_PyGILState_Ensure PyGILState_Ensure
#define __Pyx_PyGILState_Release PyGILState_Release
#define __Pyx_FastGIL_Remember()
#define __Pyx_FastGIL_Forget()
#define __Pyx_FastGilFuncInit()


/* "cuda/ccuda.pxd":11
 * 
 * 
 * ctypedef uint32_t cuuint32_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef uint64_t cuuint64_t
 */
typedef uint32_t __pyx_t_4cuda_5ccuda_cuuint32_t;

/* "cuda/ccuda.pxd":13
 * ctypedef uint32_t cuuint32_t
 * 
 * ctypedef uint64_t cuuint64_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef unsigned long long CUdeviceptr_v2
 */
typedef uint64_t __pyx_t_4cuda_5ccuda_cuuint64_t;

/* "cuda/ccuda.pxd":15
 * ctypedef uint64_t cuuint64_t
 * 
 * ctypedef unsigned long long CUdeviceptr_v2             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUdeviceptr_v2 CUdeviceptr
 */
typedef unsigned PY_LONG_LONG __pyx_t_4cuda_5ccuda_CUdeviceptr_v2;

/* "cuda/ccuda.pxd":17
 * ctypedef unsigned long long CUdeviceptr_v2
 * 
 * ctypedef CUdeviceptr_v2 CUdeviceptr             # <<<<<<<<<<<<<<
 * 
 * ctypedef int CUdevice_v1
 */
typedef __pyx_t_4cuda_5ccuda_CUdeviceptr_v2 __pyx_t_4cuda_5ccuda_CUdeviceptr;

/* "cuda/ccuda.pxd":19
 * ctypedef CUdeviceptr_v2 CUdeviceptr
 * 
 * ctypedef int CUdevice_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUdevice_v1 CUdevice
 */
typedef int __pyx_t_4cuda_5ccuda_CUdevice_v1;

/* "cuda/ccuda.pxd":21
 * ctypedef int CUdevice_v1
 * 
 * ctypedef CUdevice_v1 CUdevice             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "":
 */
typedef __pyx_t_4cuda_5ccuda_CUdevice_v1 __pyx_t_4cuda_5ccuda_CUdevice;

/* "cuda/ccuda.pxd":73
 * ctypedef CUgraphicsResource_st* CUgraphicsResource
 * 
 * ctypedef unsigned long long CUtexObject_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUtexObject_v1 CUtexObject
 */
typedef unsigned PY_LONG_LONG __pyx_t_4cuda_5ccuda_CUtexObject_v1;

/* "cuda/ccuda.pxd":75
 * ctypedef unsigned long long CUtexObject_v1
 * 
 * ctypedef CUtexObject_v1 CUtexObject             # <<<<<<<<<<<<<<
 * 
 * ctypedef unsigned long long CUsurfObject_v1
 */
typedef __pyx_t_4cuda_5ccuda_CUtexObject_v1 __pyx_t_4cuda_5ccuda_CUtexObject;

/* "cuda/ccuda.pxd":77
 * ctypedef CUtexObject_v1 CUtexObject
 * 
 * ctypedef unsigned long long CUsurfObject_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUsurfObject_v1 CUsurfObject
 */
typedef unsigned PY_LONG_LONG __pyx_t_4cuda_5ccuda_CUsurfObject_v1;

/* "cuda/ccuda.pxd":79
 * ctypedef unsigned long long CUsurfObject_v1
 * 
 * ctypedef CUsurfObject_v1 CUsurfObject             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "":
 */
typedef __pyx_t_4cuda_5ccuda_CUsurfObject_v1 __pyx_t_4cuda_5ccuda_CUsurfObject;

/* "cuda/ccuda.pxd":1340
 * ctypedef CUDA_EXT_SEM_WAIT_NODE_PARAMS_v1 CUDA_EXT_SEM_WAIT_NODE_PARAMS
 * 
 * ctypedef unsigned long long CUmemGenericAllocationHandle_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUmemGenericAllocationHandle_v1 CUmemGenericAllocationHandle
 */
typedef unsigned PY_LONG_LONG __pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle_v1;

/* "cuda/ccuda.pxd":1342
 * ctypedef unsigned long long CUmemGenericAllocationHandle_v1
 * 
 * ctypedef CUmemGenericAllocationHandle_v1 CUmemGenericAllocationHandle             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUmemAllocationHandleType_enum:
 */
typedef __pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle_v1 __pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle;

/*--- Type declarations ---*/
struct __pyx_t_4cuda_5ccuda_CUuuid_st;
struct __pyx_t_4cuda_5ccuda_CUipcEventHandle_st;
struct __pyx_t_4cuda_5ccuda_CUipcMemHandle_st;
struct __pyx_t_4cuda_5ccuda_CUstreamMemOpWaitValueParams_st;
struct __pyx_t_4cuda_5ccuda_CUstreamMemOpWriteValueParams_st;
struct __pyx_t_4cuda_5ccuda_CUstreamMemOpFlushRemoteWritesParams_st;
union __pyx_t_4cuda_5ccuda_CUstreamBatchMemOpParams_union;
struct __pyx_t_4cuda_5ccuda_CUdevprop_st;
struct __pyx_t_4cuda_5ccuda_CUaccessPolicyWindow_st;
struct __pyx_t_4cuda_5ccuda_CUDA_KERNEL_NODE_PARAMS_st;
struct __pyx_t_4cuda_5ccuda_CUDA_MEMSET_NODE_PARAMS_st;
struct __pyx_t_4cuda_5ccuda_CUDA_HOST_NODE_PARAMS_st;
union __pyx_t_4cuda_5ccuda_CUkernelNodeAttrValue_union;
union __pyx_t_4cuda_5ccuda_CUstreamAttrValue_union;
struct __pyx_t_4cuda_5ccuda_CUexecAffinitySmCount_st;
union __pyx_t_4cuda_5ccuda__CUexecAffinityParam_v1_CUexecAffinityParam_v1_CUexecAffinityParam_st_param_u;
struct __pyx_t_4cuda_5ccuda_CUexecAffinityParam_st;
struct __pyx_t_4cuda_5ccuda_CUDA_MEMCPY2D_st;
struct __pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D_st;
struct __pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D_PEER_st;
struct __pyx_t_4cuda_5ccuda_CUDA_ARRAY_DESCRIPTOR_st;
struct __pyx_t_4cuda_5ccuda_CUDA_ARRAY3D_DESCRIPTOR_st;
struct __pyx_t_4cuda_5ccuda__CUDA_ARRAY_SPARSE_PROPERTIES_v1_CUDA_ARRAY_SPARSE_PROPERTIES_v1_CUDA_ARRAY_SPARSE_PROPERTIES_st_tileExtent_s;
struct __pyx_t_4cuda_5ccuda_CUDA_ARRAY_SPARSE_PROPERTIES_st;
struct __pyx_t_4cuda_5ccuda__CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_st_res_res_array_s;
struct __pyx_t_4cuda_5ccuda__CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_st_res_res_mipmap_s;
struct __pyx_t_4cuda_5ccuda__CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_st_res_res_linear_s;
struct __pyx_t_4cuda_5ccuda__CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_st_res_res_pitch2D_s;
struct __pyx_t_4cuda_5ccuda__CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_st_res_res_reserved_s;
union __pyx_t_4cuda_5ccuda__CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_st_res_u;
struct __pyx_t_4cuda_5ccuda_CUDA_RESOURCE_DESC_st;
struct __pyx_t_4cuda_5ccuda_CUDA_TEXTURE_DESC_st;
struct __pyx_t_4cuda_5ccuda_CUDA_RESOURCE_VIEW_DESC_st;
struct __pyx_t_4cuda_5ccuda_CUDA_POINTER_ATTRIBUTE_P2P_TOKENS_st;
struct __pyx_t_4cuda_5ccuda_CUDA_LAUNCH_PARAMS_st;
struct __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1_CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1_CUDA_EXTERNAL_MEMORY_HANDLE_DESC_st_handle_handle_win32_s;
union __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1_CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1_CUDA_EXTERNAL_MEMORY_HANDLE_DESC_st_handle_u;
struct __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_HANDLE_DESC_st;
struct __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_BUFFER_DESC_st;
struct __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC_st;
struct __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_st_handle_handle_win32_s;
union __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_st_handle_u;
struct __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_st;
struct __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_st_params_params_fence_s;
union __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_st_params_params_nvSciSync_u;
struct __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_st_params_params_keyedMutex_s;
struct __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_st_params_s;
struct __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_st;
struct __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_st_params_params_fence_s;
union __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_st_params_params_nvSciSync_u;
struct __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_st_params_params_keyedMutex_s;
struct __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_st_params_s;
struct __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_st;
struct __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_SIGNAL_NODE_PARAMS_st;
struct __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_WAIT_NODE_PARAMS_st;
union __pyx_t_4cuda_5ccuda__CUarrayMapInfo_v1_CUarrayMapInfo_v1_CUarrayMapInfo_st_resource_u;
struct __pyx_t_4cuda_5ccuda__CUarrayMapInfo_v1_CUarrayMapInfo_v1_CUarrayMapInfo_st_subresource_subresource_sparseLevel_s;
struct __pyx_t_4cuda_5ccuda__CUarrayMapInfo_v1_CUarrayMapInfo_v1_CUarrayMapInfo_st_subresource_subresource_miptail_s;
union __pyx_t_4cuda_5ccuda__CUarrayMapInfo_v1_CUarrayMapInfo_v1_CUarrayMapInfo_st_subresource_u;
union __pyx_t_4cuda_5ccuda__CUarrayMapInfo_v1_CUarrayMapInfo_v1_CUarrayMapInfo_st_memHandle_u;
struct __pyx_t_4cuda_5ccuda_CUarrayMapInfo_st;
struct __pyx_t_4cuda_5ccuda_CUmemLocation_st;
struct __pyx_t_4cuda_5ccuda__CUmemAllocationProp_v1_CUmemAllocationProp_v1_CUmemAllocationProp_st_allocFlags_s;
struct __pyx_t_4cuda_5ccuda_CUmemAllocationProp_st;
struct __pyx_t_4cuda_5ccuda_CUmemAccessDesc_st;
struct __pyx_t_4cuda_5ccuda_CUmemPoolProps_st;
struct __pyx_t_4cuda_5ccuda_CUmemPoolPtrExportData_st;
struct __pyx_t_4cuda_5ccuda_CUDA_MEM_ALLOC_NODE_PARAMS_st;

/* "cuda/ccuda.pxd":135
 * ctypedef CUipcMemHandle_v1 CUipcMemHandle
 * 
 * cdef enum CUipcMem_flags_enum:             # <<<<<<<<<<<<<<
 *     CU_IPC_MEM_LAZY_ENABLE_PEER_ACCESS = 0x1
 * 
 */
enum __pyx_t_4cuda_5ccuda_CUipcMem_flags_enum {
  __pyx_e_4cuda_5ccuda_CU_IPC_MEM_LAZY_ENABLE_PEER_ACCESS = 0x1
};

/* "cuda/ccuda.pxd":140
 * ctypedef CUipcMem_flags_enum CUipcMem_flags
 * 
 * cdef enum CUmemAttach_flags_enum:             # <<<<<<<<<<<<<<
 *     CU_MEM_ATTACH_GLOBAL = 0x1
 *     CU_MEM_ATTACH_HOST = 0x2
 */
enum __pyx_t_4cuda_5ccuda_CUmemAttach_flags_enum {
  __pyx_e_4cuda_5ccuda_CU_MEM_ATTACH_GLOBAL = 0x1,
  __pyx_e_4cuda_5ccuda_CU_MEM_ATTACH_HOST = 0x2,
  __pyx_e_4cuda_5ccuda_CU_MEM_ATTACH_SINGLE = 0x4
};

/* "cuda/ccuda.pxd":147
 * ctypedef CUmemAttach_flags_enum CUmemAttach_flags
 * 
 * cdef enum CUctx_flags_enum:             # <<<<<<<<<<<<<<
 *     CU_CTX_SCHED_AUTO = 0x00
 *     CU_CTX_SCHED_SPIN = 0x01
 */
enum __pyx_t_4cuda_5ccuda_CUctx_flags_enum {
  __pyx_e_4cuda_5ccuda_CU_CTX_SCHED_AUTO = 0x00,
  __pyx_e_4cuda_5ccuda_CU_CTX_SCHED_SPIN = 0x01,
  __pyx_e_4cuda_5ccuda_CU_CTX_SCHED_YIELD = 0x02,
  __pyx_e_4cuda_5ccuda_CU_CTX_SCHED_BLOCKING_SYNC = 0x04,
  __pyx_e_4cuda_5ccuda_CU_CTX_BLOCKING_SYNC = 0x04,
  __pyx_e_4cuda_5ccuda_CU_CTX_SCHED_MASK = 0x07,
  __pyx_e_4cuda_5ccuda_CU_CTX_MAP_HOST = 0x08,
  __pyx_e_4cuda_5ccuda_CU_CTX_LMEM_RESIZE_TO_MAX = 0x10,
  __pyx_e_4cuda_5ccuda_CU_CTX_FLAGS_MASK = 0x1f
};

/* "cuda/ccuda.pxd":160
 * ctypedef CUctx_flags_enum CUctx_flags
 * 
 * cdef enum CUstream_flags_enum:             # <<<<<<<<<<<<<<
 *     CU_STREAM_DEFAULT = 0x0
 *     CU_STREAM_NON_BLOCKING = 0x1
 */
enum __pyx_t_4cuda_5ccuda_CUstream_flags_enum {
  __pyx_e_4cuda_5ccuda_CU_STREAM_DEFAULT = 0x0,
  __pyx_e_4cuda_5ccuda_CU_STREAM_NON_BLOCKING = 0x1
};

/* "cuda/ccuda.pxd":166
 * ctypedef CUstream_flags_enum CUstream_flags
 * 
 * cdef enum CUevent_flags_enum:             # <<<<<<<<<<<<<<
 *     CU_EVENT_DEFAULT = 0x0
 *     CU_EVENT_BLOCKING_SYNC = 0x1
 */
enum __pyx_t_4cuda_5ccuda_CUevent_flags_enum {
  __pyx_e_4cuda_5ccuda_CU_EVENT_DEFAULT = 0x0,
  __pyx_e_4cuda_5ccuda_CU_EVENT_BLOCKING_SYNC = 0x1,
  __pyx_e_4cuda_5ccuda_CU_EVENT_DISABLE_TIMING = 0x2,
  __pyx_e_4cuda_5ccuda_CU_EVENT_INTERPROCESS = 0x4
};

/* "cuda/ccuda.pxd":174
 * ctypedef CUevent_flags_enum CUevent_flags
 * 
 * cdef enum CUevent_record_flags_enum:             # <<<<<<<<<<<<<<
 *     CU_EVENT_RECORD_DEFAULT = 0x0
 *     CU_EVENT_RECORD_EXTERNAL = 0x1
 */
enum __pyx_t_4cuda_5ccuda_CUevent_record_flags_enum {
  __pyx_e_4cuda_5ccuda_CU_EVENT_RECORD_DEFAULT = 0x0,
  __pyx_e_4cuda_5ccuda_CU_EVENT_RECORD_EXTERNAL = 0x1
};

/* "cuda/ccuda.pxd":180
 * ctypedef CUevent_record_flags_enum CUevent_record_flags
 * 
 * cdef enum CUevent_wait_flags_enum:             # <<<<<<<<<<<<<<
 *     CU_EVENT_WAIT_DEFAULT = 0x0
 *     CU_EVENT_WAIT_EXTERNAL = 0x1
 */
enum __pyx_t_4cuda_5ccuda_CUevent_wait_flags_enum {
  __pyx_e_4cuda_5ccuda_CU_EVENT_WAIT_DEFAULT = 0x0,
  __pyx_e_4cuda_5ccuda_CU_EVENT_WAIT_EXTERNAL = 0x1
};

/* "cuda/ccuda.pxd":186
 * ctypedef CUevent_wait_flags_enum CUevent_wait_flags
 * 
 * cdef enum CUstreamWaitValue_flags_enum:             # <<<<<<<<<<<<<<
 *     CU_STREAM_WAIT_VALUE_GEQ = 0x0
 *     CU_STREAM_WAIT_VALUE_EQ = 0x1
 */
enum __pyx_t_4cuda_5ccuda_CUstreamWaitValue_flags_enum {

  /* "cuda/ccuda.pxd":191
 *     CU_STREAM_WAIT_VALUE_AND = 0x2
 *     CU_STREAM_WAIT_VALUE_NOR = 0x3
 *     CU_STREAM_WAIT_VALUE_FLUSH = 1<<30             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUstreamWaitValue_flags_enum CUstreamWaitValue_flags
 */
  __pyx_e_4cuda_5ccuda_CU_STREAM_WAIT_VALUE_GEQ = 0x0,
  __pyx_e_4cuda_5ccuda_CU_STREAM_WAIT_VALUE_EQ = 0x1,
  __pyx_e_4cuda_5ccuda_CU_STREAM_WAIT_VALUE_AND = 0x2,
  __pyx_e_4cuda_5ccuda_CU_STREAM_WAIT_VALUE_NOR = 0x3,
  __pyx_e_4cuda_5ccuda_CU_STREAM_WAIT_VALUE_FLUSH = (1 << 30)
};

/* "cuda/ccuda.pxd":195
 * ctypedef CUstreamWaitValue_flags_enum CUstreamWaitValue_flags
 * 
 * cdef enum CUstreamWriteValue_flags_enum:             # <<<<<<<<<<<<<<
 *     CU_STREAM_WRITE_VALUE_DEFAULT = 0x0
 *     CU_STREAM_WRITE_VALUE_NO_MEMORY_BARRIER = 0x1
 */
enum __pyx_t_4cuda_5ccuda_CUstreamWriteValue_flags_enum {
  __pyx_e_4cuda_5ccuda_CU_STREAM_WRITE_VALUE_DEFAULT = 0x0,
  __pyx_e_4cuda_5ccuda_CU_STREAM_WRITE_VALUE_NO_MEMORY_BARRIER = 0x1
};

/* "cuda/ccuda.pxd":201
 * ctypedef CUstreamWriteValue_flags_enum CUstreamWriteValue_flags
 * 
 * cdef enum CUstreamBatchMemOpType_enum:             # <<<<<<<<<<<<<<
 *     CU_STREAM_MEM_OP_WAIT_VALUE_32 = 1
 *     CU_STREAM_MEM_OP_WRITE_VALUE_32 = 2
 */
enum __pyx_t_4cuda_5ccuda_CUstreamBatchMemOpType_enum {
  __pyx_e_4cuda_5ccuda_CU_STREAM_MEM_OP_WAIT_VALUE_32 = 1,
  __pyx_e_4cuda_5ccuda_CU_STREAM_MEM_OP_WRITE_VALUE_32 = 2,
  __pyx_e_4cuda_5ccuda_CU_STREAM_MEM_OP_WAIT_VALUE_64 = 4,
  __pyx_e_4cuda_5ccuda_CU_STREAM_MEM_OP_WRITE_VALUE_64 = 5,
  __pyx_e_4cuda_5ccuda_CU_STREAM_MEM_OP_FLUSH_REMOTE_WRITES = 3
};

/* "cuda/ccuda.pxd":239
 * ctypedef CUstreamBatchMemOpParams_v1 CUstreamBatchMemOpParams
 * 
 * cdef enum CUoccupancy_flags_enum:             # <<<<<<<<<<<<<<
 *     CU_OCCUPANCY_DEFAULT = 0x0
 *     CU_OCCUPANCY_DISABLE_CACHING_OVERRIDE = 0x1
 */
enum __pyx_t_4cuda_5ccuda_CUoccupancy_flags_enum {
  __pyx_e_4cuda_5ccuda_CU_OCCUPANCY_DEFAULT = 0x0,
  __pyx_e_4cuda_5ccuda_CU_OCCUPANCY_DISABLE_CACHING_OVERRIDE = 0x1
};

/* "cuda/ccuda.pxd":245
 * ctypedef CUoccupancy_flags_enum CUoccupancy_flags
 * 
 * cdef enum CUstreamUpdateCaptureDependencies_flags_enum:             # <<<<<<<<<<<<<<
 *     CU_STREAM_ADD_CAPTURE_DEPENDENCIES = 0x0
 *     CU_STREAM_SET_CAPTURE_DEPENDENCIES = 0x1
 */
enum __pyx_t_4cuda_5ccuda_CUstreamUpdateCaptureDependencies_flags_enum {
  __pyx_e_4cuda_5ccuda_CU_STREAM_ADD_CAPTURE_DEPENDENCIES = 0x0,
  __pyx_e_4cuda_5ccuda_CU_STREAM_SET_CAPTURE_DEPENDENCIES = 0x1
};

/* "cuda/ccuda.pxd":251
 * ctypedef CUstreamUpdateCaptureDependencies_flags_enum CUstreamUpdateCaptureDependencies_flags
 * 
 * cdef enum CUarray_format_enum:             # <<<<<<<<<<<<<<
 *     CU_AD_FORMAT_UNSIGNED_INT8 = 0x01
 *     CU_AD_FORMAT_UNSIGNED_INT16 = 0x02
 */
enum __pyx_t_4cuda_5ccuda_CUarray_format_enum {
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_UNSIGNED_INT8 = 0x01,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_UNSIGNED_INT16 = 0x02,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_UNSIGNED_INT32 = 0x03,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_SIGNED_INT8 = 0x08,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_SIGNED_INT16 = 0x09,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_SIGNED_INT32 = 0x0a,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_HALF = 0x10,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_FLOAT = 0x20,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_NV12 = 0xb0,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_UNORM_INT8X1 = 0xc0,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_UNORM_INT8X2 = 0xc1,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_UNORM_INT8X4 = 0xc2,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_UNORM_INT16X1 = 0xc3,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_UNORM_INT16X2 = 0xc4,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_UNORM_INT16X4 = 0xc5,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_SNORM_INT8X1 = 0xc6,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_SNORM_INT8X2 = 0xc7,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_SNORM_INT8X4 = 0xc8,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_SNORM_INT16X1 = 0xc9,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_SNORM_INT16X2 = 0xca,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_SNORM_INT16X4 = 0xcb,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_BC1_UNORM = 0x91,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_BC1_UNORM_SRGB = 0x92,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_BC2_UNORM = 0x93,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_BC2_UNORM_SRGB = 0x94,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_BC3_UNORM = 0x95,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_BC3_UNORM_SRGB = 0x96,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_BC4_UNORM = 0x97,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_BC4_SNORM = 0x98,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_BC5_UNORM = 0x99,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_BC5_SNORM = 0x9a,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_BC6H_UF16 = 0x9b,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_BC6H_SF16 = 0x9c,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_BC7_UNORM = 0x9d,
  __pyx_e_4cuda_5ccuda_CU_AD_FORMAT_BC7_UNORM_SRGB = 0x9e
};

/* "cuda/ccuda.pxd":290
 * ctypedef CUarray_format_enum CUarray_format
 * 
 * cdef enum CUaddress_mode_enum:             # <<<<<<<<<<<<<<
 *     CU_TR_ADDRESS_MODE_WRAP = 0
 *     CU_TR_ADDRESS_MODE_CLAMP = 1
 */
enum __pyx_t_4cuda_5ccuda_CUaddress_mode_enum {
  __pyx_e_4cuda_5ccuda_CU_TR_ADDRESS_MODE_WRAP = 0,
  __pyx_e_4cuda_5ccuda_CU_TR_ADDRESS_MODE_CLAMP = 1,
  __pyx_e_4cuda_5ccuda_CU_TR_ADDRESS_MODE_MIRROR = 2,
  __pyx_e_4cuda_5ccuda_CU_TR_ADDRESS_MODE_BORDER = 3
};

/* "cuda/ccuda.pxd":298
 * ctypedef CUaddress_mode_enum CUaddress_mode
 * 
 * cdef enum CUfilter_mode_enum:             # <<<<<<<<<<<<<<
 *     CU_TR_FILTER_MODE_POINT = 0
 *     CU_TR_FILTER_MODE_LINEAR = 1
 */
enum __pyx_t_4cuda_5ccuda_CUfilter_mode_enum {
  __pyx_e_4cuda_5ccuda_CU_TR_FILTER_MODE_POINT = 0,
  __pyx_e_4cuda_5ccuda_CU_TR_FILTER_MODE_LINEAR = 1
};

/* "cuda/ccuda.pxd":304
 * ctypedef CUfilter_mode_enum CUfilter_mode
 * 
 * cdef enum CUdevice_attribute_enum:             # <<<<<<<<<<<<<<
 *     CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_BLOCK = 1
 *     CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_X = 2
 */
enum __pyx_t_4cuda_5ccuda_CUdevice_attribute_enum {
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_BLOCK = 1,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_X = 2,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Y = 3,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Z = 4,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_X = 5,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Y = 6,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Z = 7,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_BLOCK = 8,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_SHARED_MEMORY_PER_BLOCK = 8,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_TOTAL_CONSTANT_MEMORY = 9,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_WARP_SIZE = 10,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAX_PITCH = 11,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAX_REGISTERS_PER_BLOCK = 12,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_REGISTERS_PER_BLOCK = 12,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_CLOCK_RATE = 13,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_TEXTURE_ALIGNMENT = 14,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_GPU_OVERLAP = 15,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MULTIPROCESSOR_COUNT = 16,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_KERNEL_EXEC_TIMEOUT = 17,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_INTEGRATED = 18,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_CAN_MAP_HOST_MEMORY = 19,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_COMPUTE_MODE = 20,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_WIDTH = 21,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_WIDTH = 22,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_HEIGHT = 23,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_WIDTH = 24,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_HEIGHT = 25,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_DEPTH = 26,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_WIDTH = 27,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_HEIGHT = 28,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_LAYERS = 29,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_WIDTH = 27,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_HEIGHT = 28,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_NUMSLICES = 29,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_SURFACE_ALIGNMENT = 30,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_CONCURRENT_KERNELS = 31,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_ECC_ENABLED = 32,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_PCI_BUS_ID = 33,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_PCI_DEVICE_ID = 34,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_TCC_DRIVER = 35,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MEMORY_CLOCK_RATE = 36,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_GLOBAL_MEMORY_BUS_WIDTH = 37,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_L2_CACHE_SIZE = 38,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_MULTIPROCESSOR = 39,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_ASYNC_ENGINE_COUNT = 40,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_UNIFIED_ADDRESSING = 41,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LAYERED_WIDTH = 42,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LAYERED_LAYERS = 43,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_CAN_TEX2D_GATHER = 44,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_GATHER_WIDTH = 45,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_GATHER_HEIGHT = 46,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_WIDTH_ALTERNATE = 47,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_HEIGHT_ALTERNATE = 48,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_DEPTH_ALTERNATE = 49,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_PCI_DOMAIN_ID = 50,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_TEXTURE_PITCH_ALIGNMENT = 51,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_WIDTH = 52,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_LAYERED_WIDTH = 53,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_LAYERED_LAYERS = 54,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_WIDTH = 55,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_WIDTH = 56,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_HEIGHT = 57,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_WIDTH = 58,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_HEIGHT = 59,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_DEPTH = 60,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_LAYERED_WIDTH = 61,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_LAYERED_LAYERS = 62,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_WIDTH = 63,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_HEIGHT = 64,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_LAYERS = 65,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_WIDTH = 66,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_LAYERED_WIDTH = 67,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_LAYERED_LAYERS = 68,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LINEAR_WIDTH = 69,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_WIDTH = 70,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_HEIGHT = 71,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_PITCH = 72,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_MIPMAPPED_WIDTH = 73,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_MIPMAPPED_HEIGHT = 74,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_COMPUTE_CAPABILITY_MAJOR = 75,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_COMPUTE_CAPABILITY_MINOR = 76,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_MIPMAPPED_WIDTH = 77,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_STREAM_PRIORITIES_SUPPORTED = 78,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_GLOBAL_L1_CACHE_SUPPORTED = 79,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_LOCAL_L1_CACHE_SUPPORTED = 80,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_MULTIPROCESSOR = 81,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAX_REGISTERS_PER_MULTIPROCESSOR = 82,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MANAGED_MEMORY = 83,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MULTI_GPU_BOARD = 84,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MULTI_GPU_BOARD_GROUP_ID = 85,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_HOST_NATIVE_ATOMIC_SUPPORTED = 86,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_SINGLE_TO_DOUBLE_PRECISION_PERF_RATIO = 87,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_PAGEABLE_MEMORY_ACCESS = 88,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_CONCURRENT_MANAGED_ACCESS = 89,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_COMPUTE_PREEMPTION_SUPPORTED = 90,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_CAN_USE_HOST_POINTER_FOR_REGISTERED_MEM = 91,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_CAN_USE_STREAM_MEM_OPS = 92,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_CAN_USE_64_BIT_STREAM_MEM_OPS = 93,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_CAN_USE_STREAM_WAIT_VALUE_NOR = 94,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_COOPERATIVE_LAUNCH = 95,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_COOPERATIVE_MULTI_DEVICE_LAUNCH = 96,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_BLOCK_OPTIN = 97,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_CAN_FLUSH_REMOTE_WRITES = 98,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_HOST_REGISTER_SUPPORTED = 99,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_PAGEABLE_MEMORY_ACCESS_USES_HOST_PAGE_TABLES = 0x64,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_DIRECT_MANAGED_MEM_ACCESS_FROM_HOST = 0x65,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_VIRTUAL_ADDRESS_MANAGEMENT_SUPPORTED = 0x66,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_VIRTUAL_MEMORY_MANAGEMENT_SUPPORTED = 0x66,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_HANDLE_TYPE_POSIX_FILE_DESCRIPTOR_SUPPORTED = 0x67,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_HANDLE_TYPE_WIN32_HANDLE_SUPPORTED = 0x68,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_HANDLE_TYPE_WIN32_KMT_HANDLE_SUPPORTED = 0x69,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAX_BLOCKS_PER_MULTIPROCESSOR = 0x6A,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_GENERIC_COMPRESSION_SUPPORTED = 0x6B,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAX_PERSISTING_L2_CACHE_SIZE = 0x6C,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAX_ACCESS_POLICY_WINDOW_SIZE = 0x6D,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_GPU_DIRECT_RDMA_WITH_CUDA_VMM_SUPPORTED = 0x6E,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_RESERVED_SHARED_MEMORY_PER_BLOCK = 0x6F,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_SPARSE_CUDA_ARRAY_SUPPORTED = 0x70,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_READ_ONLY_HOST_REGISTER_SUPPORTED = 0x71,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_TIMELINE_SEMAPHORE_INTEROP_SUPPORTED = 0x72,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MEMORY_POOLS_SUPPORTED = 0x73,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_GPU_DIRECT_RDMA_SUPPORTED = 0x74,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_GPU_DIRECT_RDMA_FLUSH_WRITES_OPTIONS = 0x75,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_GPU_DIRECT_RDMA_WRITES_ORDERING = 0x76,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MEMPOOL_SUPPORTED_HANDLE_TYPES = 0x77,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_ATTRIBUTE_MAX
};

/* "cuda/ccuda.pxd":450
 * ctypedef CUdevprop_v1 CUdevprop
 * 
 * cdef enum CUpointer_attribute_enum:             # <<<<<<<<<<<<<<
 *     CU_POINTER_ATTRIBUTE_CONTEXT = 1
 *     CU_POINTER_ATTRIBUTE_MEMORY_TYPE = 2
 */
enum __pyx_t_4cuda_5ccuda_CUpointer_attribute_enum {
  __pyx_e_4cuda_5ccuda_CU_POINTER_ATTRIBUTE_CONTEXT = 1,
  __pyx_e_4cuda_5ccuda_CU_POINTER_ATTRIBUTE_MEMORY_TYPE = 2,
  __pyx_e_4cuda_5ccuda_CU_POINTER_ATTRIBUTE_DEVICE_POINTER = 3,
  __pyx_e_4cuda_5ccuda_CU_POINTER_ATTRIBUTE_HOST_POINTER = 4,
  __pyx_e_4cuda_5ccuda_CU_POINTER_ATTRIBUTE_P2P_TOKENS = 5,
  __pyx_e_4cuda_5ccuda_CU_POINTER_ATTRIBUTE_SYNC_MEMOPS = 6,
  __pyx_e_4cuda_5ccuda_CU_POINTER_ATTRIBUTE_BUFFER_ID = 7,
  __pyx_e_4cuda_5ccuda_CU_POINTER_ATTRIBUTE_IS_MANAGED = 8,
  __pyx_e_4cuda_5ccuda_CU_POINTER_ATTRIBUTE_DEVICE_ORDINAL = 9,
  __pyx_e_4cuda_5ccuda_CU_POINTER_ATTRIBUTE_IS_LEGACY_CUDA_IPC_CAPABLE = 10,
  __pyx_e_4cuda_5ccuda_CU_POINTER_ATTRIBUTE_RANGE_START_ADDR = 11,
  __pyx_e_4cuda_5ccuda_CU_POINTER_ATTRIBUTE_RANGE_SIZE = 12,
  __pyx_e_4cuda_5ccuda_CU_POINTER_ATTRIBUTE_MAPPED = 13,
  __pyx_e_4cuda_5ccuda_CU_POINTER_ATTRIBUTE_ALLOWED_HANDLE_TYPES = 14,
  __pyx_e_4cuda_5ccuda_CU_POINTER_ATTRIBUTE_IS_GPU_DIRECT_RDMA_CAPABLE = 15,
  __pyx_e_4cuda_5ccuda_CU_POINTER_ATTRIBUTE_ACCESS_FLAGS = 16,
  __pyx_e_4cuda_5ccuda_CU_POINTER_ATTRIBUTE_MEMPOOL_HANDLE = 17
};

/* "cuda/ccuda.pxd":471
 * ctypedef CUpointer_attribute_enum CUpointer_attribute
 * 
 * cdef enum CUfunction_attribute_enum:             # <<<<<<<<<<<<<<
 *     CU_FUNC_ATTRIBUTE_MAX_THREADS_PER_BLOCK = 0
 *     CU_FUNC_ATTRIBUTE_SHARED_SIZE_BYTES = 1
 */
enum __pyx_t_4cuda_5ccuda_CUfunction_attribute_enum {
  __pyx_e_4cuda_5ccuda_CU_FUNC_ATTRIBUTE_MAX_THREADS_PER_BLOCK = 0,
  __pyx_e_4cuda_5ccuda_CU_FUNC_ATTRIBUTE_SHARED_SIZE_BYTES = 1,
  __pyx_e_4cuda_5ccuda_CU_FUNC_ATTRIBUTE_CONST_SIZE_BYTES = 2,
  __pyx_e_4cuda_5ccuda_CU_FUNC_ATTRIBUTE_LOCAL_SIZE_BYTES = 3,
  __pyx_e_4cuda_5ccuda_CU_FUNC_ATTRIBUTE_NUM_REGS = 4,
  __pyx_e_4cuda_5ccuda_CU_FUNC_ATTRIBUTE_PTX_VERSION = 5,
  __pyx_e_4cuda_5ccuda_CU_FUNC_ATTRIBUTE_BINARY_VERSION = 6,
  __pyx_e_4cuda_5ccuda_CU_FUNC_ATTRIBUTE_CACHE_MODE_CA = 7,
  __pyx_e_4cuda_5ccuda_CU_FUNC_ATTRIBUTE_MAX_DYNAMIC_SHARED_SIZE_BYTES = 8,
  __pyx_e_4cuda_5ccuda_CU_FUNC_ATTRIBUTE_PREFERRED_SHARED_MEMORY_CARVEOUT = 9,
  __pyx_e_4cuda_5ccuda_CU_FUNC_ATTRIBUTE_MAX
};

/* "cuda/ccuda.pxd":486
 * ctypedef CUfunction_attribute_enum CUfunction_attribute
 * 
 * cdef enum CUfunc_cache_enum:             # <<<<<<<<<<<<<<
 *     CU_FUNC_CACHE_PREFER_NONE = 0x00
 *     CU_FUNC_CACHE_PREFER_SHARED = 0x01
 */
enum __pyx_t_4cuda_5ccuda_CUfunc_cache_enum {
  __pyx_e_4cuda_5ccuda_CU_FUNC_CACHE_PREFER_NONE = 0x00,
  __pyx_e_4cuda_5ccuda_CU_FUNC_CACHE_PREFER_SHARED = 0x01,
  __pyx_e_4cuda_5ccuda_CU_FUNC_CACHE_PREFER_L1 = 0x02,
  __pyx_e_4cuda_5ccuda_CU_FUNC_CACHE_PREFER_EQUAL = 0x03
};

/* "cuda/ccuda.pxd":494
 * ctypedef CUfunc_cache_enum CUfunc_cache
 * 
 * cdef enum CUsharedconfig_enum:             # <<<<<<<<<<<<<<
 *     CU_SHARED_MEM_CONFIG_DEFAULT_BANK_SIZE = 0x00
 *     CU_SHARED_MEM_CONFIG_FOUR_BYTE_BANK_SIZE = 0x01
 */
enum __pyx_t_4cuda_5ccuda_CUsharedconfig_enum {
  __pyx_e_4cuda_5ccuda_CU_SHARED_MEM_CONFIG_DEFAULT_BANK_SIZE = 0x00,
  __pyx_e_4cuda_5ccuda_CU_SHARED_MEM_CONFIG_FOUR_BYTE_BANK_SIZE = 0x01,
  __pyx_e_4cuda_5ccuda_CU_SHARED_MEM_CONFIG_EIGHT_BYTE_BANK_SIZE = 0x02
};

/* "cuda/ccuda.pxd":501
 * ctypedef CUsharedconfig_enum CUsharedconfig
 * 
 * cdef enum CUshared_carveout_enum:             # <<<<<<<<<<<<<<
 *     CU_SHAREDMEM_CARVEOUT_DEFAULT = -1
 *     CU_SHAREDMEM_CARVEOUT_MAX_SHARED = 100
 */
enum __pyx_t_4cuda_5ccuda_CUshared_carveout_enum {
  __pyx_e_4cuda_5ccuda_CU_SHAREDMEM_CARVEOUT_DEFAULT = -1L,
  __pyx_e_4cuda_5ccuda_CU_SHAREDMEM_CARVEOUT_MAX_SHARED = 0x64,
  __pyx_e_4cuda_5ccuda_CU_SHAREDMEM_CARVEOUT_MAX_L1 = 0
};

/* "cuda/ccuda.pxd":508
 * ctypedef CUshared_carveout_enum CUshared_carveout
 * 
 * cdef enum CUmemorytype_enum:             # <<<<<<<<<<<<<<
 *     CU_MEMORYTYPE_HOST = 0x01
 *     CU_MEMORYTYPE_DEVICE = 0x02
 */
enum __pyx_t_4cuda_5ccuda_CUmemorytype_enum {
  __pyx_e_4cuda_5ccuda_CU_MEMORYTYPE_HOST = 0x01,
  __pyx_e_4cuda_5ccuda_CU_MEMORYTYPE_DEVICE = 0x02,
  __pyx_e_4cuda_5ccuda_CU_MEMORYTYPE_ARRAY = 0x03,
  __pyx_e_4cuda_5ccuda_CU_MEMORYTYPE_UNIFIED = 0x04
};

/* "cuda/ccuda.pxd":516
 * ctypedef CUmemorytype_enum CUmemorytype
 * 
 * cdef enum CUcomputemode_enum:             # <<<<<<<<<<<<<<
 *     CU_COMPUTEMODE_DEFAULT = 0
 *     CU_COMPUTEMODE_PROHIBITED = 2
 */
enum __pyx_t_4cuda_5ccuda_CUcomputemode_enum {
  __pyx_e_4cuda_5ccuda_CU_COMPUTEMODE_DEFAULT = 0,
  __pyx_e_4cuda_5ccuda_CU_COMPUTEMODE_PROHIBITED = 2,
  __pyx_e_4cuda_5ccuda_CU_COMPUTEMODE_EXCLUSIVE_PROCESS = 3
};

/* "cuda/ccuda.pxd":523
 * ctypedef CUcomputemode_enum CUcomputemode
 * 
 * cdef enum CUmem_advise_enum:             # <<<<<<<<<<<<<<
 *     CU_MEM_ADVISE_SET_READ_MOSTLY = 1
 *     CU_MEM_ADVISE_UNSET_READ_MOSTLY = 2
 */
enum __pyx_t_4cuda_5ccuda_CUmem_advise_enum {
  __pyx_e_4cuda_5ccuda_CU_MEM_ADVISE_SET_READ_MOSTLY = 1,
  __pyx_e_4cuda_5ccuda_CU_MEM_ADVISE_UNSET_READ_MOSTLY = 2,
  __pyx_e_4cuda_5ccuda_CU_MEM_ADVISE_SET_PREFERRED_LOCATION = 3,
  __pyx_e_4cuda_5ccuda_CU_MEM_ADVISE_UNSET_PREFERRED_LOCATION = 4,
  __pyx_e_4cuda_5ccuda_CU_MEM_ADVISE_SET_ACCESSED_BY = 5,
  __pyx_e_4cuda_5ccuda_CU_MEM_ADVISE_UNSET_ACCESSED_BY = 6
};

/* "cuda/ccuda.pxd":533
 * ctypedef CUmem_advise_enum CUmem_advise
 * 
 * cdef enum CUmem_range_attribute_enum:             # <<<<<<<<<<<<<<
 *     CU_MEM_RANGE_ATTRIBUTE_READ_MOSTLY = 1
 *     CU_MEM_RANGE_ATTRIBUTE_PREFERRED_LOCATION = 2
 */
enum __pyx_t_4cuda_5ccuda_CUmem_range_attribute_enum {
  __pyx_e_4cuda_5ccuda_CU_MEM_RANGE_ATTRIBUTE_READ_MOSTLY = 1,
  __pyx_e_4cuda_5ccuda_CU_MEM_RANGE_ATTRIBUTE_PREFERRED_LOCATION = 2,
  __pyx_e_4cuda_5ccuda_CU_MEM_RANGE_ATTRIBUTE_ACCESSED_BY = 3,
  __pyx_e_4cuda_5ccuda_CU_MEM_RANGE_ATTRIBUTE_LAST_PREFETCH_LOCATION = 4
};

/* "cuda/ccuda.pxd":541
 * ctypedef CUmem_range_attribute_enum CUmem_range_attribute
 * 
 * cdef enum CUjit_option_enum:             # <<<<<<<<<<<<<<
 *     CU_JIT_MAX_REGISTERS = 0
 *     CU_JIT_THREADS_PER_BLOCK
 */
enum __pyx_t_4cuda_5ccuda_CUjit_option_enum {
  __pyx_e_4cuda_5ccuda_CU_JIT_MAX_REGISTERS = 0,
  __pyx_e_4cuda_5ccuda_CU_JIT_THREADS_PER_BLOCK,
  __pyx_e_4cuda_5ccuda_CU_JIT_WALL_TIME,
  __pyx_e_4cuda_5ccuda_CU_JIT_INFO_LOG_BUFFER,
  __pyx_e_4cuda_5ccuda_CU_JIT_INFO_LOG_BUFFER_SIZE_BYTES,
  __pyx_e_4cuda_5ccuda_CU_JIT_ERROR_LOG_BUFFER,
  __pyx_e_4cuda_5ccuda_CU_JIT_ERROR_LOG_BUFFER_SIZE_BYTES,
  __pyx_e_4cuda_5ccuda_CU_JIT_OPTIMIZATION_LEVEL,
  __pyx_e_4cuda_5ccuda_CU_JIT_TARGET_FROM_CUCONTEXT,
  __pyx_e_4cuda_5ccuda_CU_JIT_TARGET,
  __pyx_e_4cuda_5ccuda_CU_JIT_FALLBACK_STRATEGY,
  __pyx_e_4cuda_5ccuda_CU_JIT_GENERATE_DEBUG_INFO,
  __pyx_e_4cuda_5ccuda_CU_JIT_LOG_VERBOSE,
  __pyx_e_4cuda_5ccuda_CU_JIT_GENERATE_LINE_INFO,
  __pyx_e_4cuda_5ccuda_CU_JIT_CACHE_MODE,
  __pyx_e_4cuda_5ccuda_CU_JIT_NEW_SM3X_OPT,
  __pyx_e_4cuda_5ccuda_CU_JIT_FAST_COMPILE,
  __pyx_e_4cuda_5ccuda_CU_JIT_GLOBAL_SYMBOL_NAMES,
  __pyx_e_4cuda_5ccuda_CU_JIT_GLOBAL_SYMBOL_ADDRESSES,
  __pyx_e_4cuda_5ccuda_CU_JIT_GLOBAL_SYMBOL_COUNT,
  __pyx_e_4cuda_5ccuda_CU_JIT_LTO,
  __pyx_e_4cuda_5ccuda_CU_JIT_FTZ,
  __pyx_e_4cuda_5ccuda_CU_JIT_PREC_DIV,
  __pyx_e_4cuda_5ccuda_CU_JIT_PREC_SQRT,
  __pyx_e_4cuda_5ccuda_CU_JIT_FMA,
  __pyx_e_4cuda_5ccuda_CU_JIT_NUM_OPTIONS
};

/* "cuda/ccuda.pxd":571
 * ctypedef CUjit_option_enum CUjit_option
 * 
 * cdef enum CUjit_target_enum:             # <<<<<<<<<<<<<<
 *     CU_TARGET_COMPUTE_20 = 20
 *     CU_TARGET_COMPUTE_21 = 21
 */
enum __pyx_t_4cuda_5ccuda_CUjit_target_enum {
  __pyx_e_4cuda_5ccuda_CU_TARGET_COMPUTE_20 = 20,
  __pyx_e_4cuda_5ccuda_CU_TARGET_COMPUTE_21 = 21,
  __pyx_e_4cuda_5ccuda_CU_TARGET_COMPUTE_30 = 30,
  __pyx_e_4cuda_5ccuda_CU_TARGET_COMPUTE_32 = 32,
  __pyx_e_4cuda_5ccuda_CU_TARGET_COMPUTE_35 = 35,
  __pyx_e_4cuda_5ccuda_CU_TARGET_COMPUTE_37 = 37,
  __pyx_e_4cuda_5ccuda_CU_TARGET_COMPUTE_50 = 50,
  __pyx_e_4cuda_5ccuda_CU_TARGET_COMPUTE_52 = 52,
  __pyx_e_4cuda_5ccuda_CU_TARGET_COMPUTE_53 = 53,
  __pyx_e_4cuda_5ccuda_CU_TARGET_COMPUTE_60 = 60,
  __pyx_e_4cuda_5ccuda_CU_TARGET_COMPUTE_61 = 61,
  __pyx_e_4cuda_5ccuda_CU_TARGET_COMPUTE_62 = 62,
  __pyx_e_4cuda_5ccuda_CU_TARGET_COMPUTE_70 = 70,
  __pyx_e_4cuda_5ccuda_CU_TARGET_COMPUTE_72 = 72,
  __pyx_e_4cuda_5ccuda_CU_TARGET_COMPUTE_75 = 75,
  __pyx_e_4cuda_5ccuda_CU_TARGET_COMPUTE_80 = 80,
  __pyx_e_4cuda_5ccuda_CU_TARGET_COMPUTE_86 = 86
};

/* "cuda/ccuda.pxd":592
 * ctypedef CUjit_target_enum CUjit_target
 * 
 * cdef enum CUjit_fallback_enum:             # <<<<<<<<<<<<<<
 *     CU_PREFER_PTX = 0
 *     CU_PREFER_BINARY
 */
enum __pyx_t_4cuda_5ccuda_CUjit_fallback_enum {
  __pyx_e_4cuda_5ccuda_CU_PREFER_PTX = 0,
  __pyx_e_4cuda_5ccuda_CU_PREFER_BINARY
};

/* "cuda/ccuda.pxd":598
 * ctypedef CUjit_fallback_enum CUjit_fallback
 * 
 * cdef enum CUjit_cacheMode_enum:             # <<<<<<<<<<<<<<
 *     CU_JIT_CACHE_OPTION_NONE = 0
 *     CU_JIT_CACHE_OPTION_CG
 */
enum __pyx_t_4cuda_5ccuda_CUjit_cacheMode_enum {
  __pyx_e_4cuda_5ccuda_CU_JIT_CACHE_OPTION_NONE = 0,
  __pyx_e_4cuda_5ccuda_CU_JIT_CACHE_OPTION_CG,
  __pyx_e_4cuda_5ccuda_CU_JIT_CACHE_OPTION_CA
};

/* "cuda/ccuda.pxd":605
 * ctypedef CUjit_cacheMode_enum CUjit_cacheMode
 * 
 * cdef enum CUjitInputType_enum:             # <<<<<<<<<<<<<<
 *     CU_JIT_INPUT_CUBIN = 0
 *     CU_JIT_INPUT_PTX
 */
enum __pyx_t_4cuda_5ccuda_CUjitInputType_enum {
  __pyx_e_4cuda_5ccuda_CU_JIT_INPUT_CUBIN = 0,
  __pyx_e_4cuda_5ccuda_CU_JIT_INPUT_PTX,
  __pyx_e_4cuda_5ccuda_CU_JIT_INPUT_FATBINARY,
  __pyx_e_4cuda_5ccuda_CU_JIT_INPUT_OBJECT,
  __pyx_e_4cuda_5ccuda_CU_JIT_INPUT_LIBRARY,
  __pyx_e_4cuda_5ccuda_CU_JIT_INPUT_NVVM,
  __pyx_e_4cuda_5ccuda_CU_JIT_NUM_INPUT_TYPES
};

/* "cuda/ccuda.pxd":621
 * ctypedef CUlinkState_st* CUlinkState
 * 
 * cdef enum CUgraphicsRegisterFlags_enum:             # <<<<<<<<<<<<<<
 *     CU_GRAPHICS_REGISTER_FLAGS_NONE = 0x00
 *     CU_GRAPHICS_REGISTER_FLAGS_READ_ONLY = 0x01
 */
enum __pyx_t_4cuda_5ccuda_CUgraphicsRegisterFlags_enum {
  __pyx_e_4cuda_5ccuda_CU_GRAPHICS_REGISTER_FLAGS_NONE = 0x00,
  __pyx_e_4cuda_5ccuda_CU_GRAPHICS_REGISTER_FLAGS_READ_ONLY = 0x01,
  __pyx_e_4cuda_5ccuda_CU_GRAPHICS_REGISTER_FLAGS_WRITE_DISCARD = 0x02,
  __pyx_e_4cuda_5ccuda_CU_GRAPHICS_REGISTER_FLAGS_SURFACE_LDST = 0x04,
  __pyx_e_4cuda_5ccuda_CU_GRAPHICS_REGISTER_FLAGS_TEXTURE_GATHER = 0x08
};

/* "cuda/ccuda.pxd":630
 * ctypedef CUgraphicsRegisterFlags_enum CUgraphicsRegisterFlags
 * 
 * cdef enum CUgraphicsMapResourceFlags_enum:             # <<<<<<<<<<<<<<
 *     CU_GRAPHICS_MAP_RESOURCE_FLAGS_NONE = 0x00
 *     CU_GRAPHICS_MAP_RESOURCE_FLAGS_READ_ONLY = 0x01
 */
enum __pyx_t_4cuda_5ccuda_CUgraphicsMapResourceFlags_enum {
  __pyx_e_4cuda_5ccuda_CU_GRAPHICS_MAP_RESOURCE_FLAGS_NONE = 0x00,
  __pyx_e_4cuda_5ccuda_CU_GRAPHICS_MAP_RESOURCE_FLAGS_READ_ONLY = 0x01,
  __pyx_e_4cuda_5ccuda_CU_GRAPHICS_MAP_RESOURCE_FLAGS_WRITE_DISCARD = 0x02
};

/* "cuda/ccuda.pxd":637
 * ctypedef CUgraphicsMapResourceFlags_enum CUgraphicsMapResourceFlags
 * 
 * cdef enum CUarray_cubemap_face_enum:             # <<<<<<<<<<<<<<
 *     CU_CUBEMAP_FACE_POSITIVE_X = 0x00
 *     CU_CUBEMAP_FACE_NEGATIVE_X = 0x01
 */
enum __pyx_t_4cuda_5ccuda_CUarray_cubemap_face_enum {
  __pyx_e_4cuda_5ccuda_CU_CUBEMAP_FACE_POSITIVE_X = 0x00,
  __pyx_e_4cuda_5ccuda_CU_CUBEMAP_FACE_NEGATIVE_X = 0x01,
  __pyx_e_4cuda_5ccuda_CU_CUBEMAP_FACE_POSITIVE_Y = 0x02,
  __pyx_e_4cuda_5ccuda_CU_CUBEMAP_FACE_NEGATIVE_Y = 0x03,
  __pyx_e_4cuda_5ccuda_CU_CUBEMAP_FACE_POSITIVE_Z = 0x04,
  __pyx_e_4cuda_5ccuda_CU_CUBEMAP_FACE_NEGATIVE_Z = 0x05
};

/* "cuda/ccuda.pxd":647
 * ctypedef CUarray_cubemap_face_enum CUarray_cubemap_face
 * 
 * cdef enum CUlimit_enum:             # <<<<<<<<<<<<<<
 *     CU_LIMIT_STACK_SIZE = 0x00
 *     CU_LIMIT_PRINTF_FIFO_SIZE = 0x01
 */
enum __pyx_t_4cuda_5ccuda_CUlimit_enum {
  __pyx_e_4cuda_5ccuda_CU_LIMIT_STACK_SIZE = 0x00,
  __pyx_e_4cuda_5ccuda_CU_LIMIT_PRINTF_FIFO_SIZE = 0x01,
  __pyx_e_4cuda_5ccuda_CU_LIMIT_MALLOC_HEAP_SIZE = 0x02,
  __pyx_e_4cuda_5ccuda_CU_LIMIT_DEV_RUNTIME_SYNC_DEPTH = 0x03,
  __pyx_e_4cuda_5ccuda_CU_LIMIT_DEV_RUNTIME_PENDING_LAUNCH_COUNT = 0x04,
  __pyx_e_4cuda_5ccuda_CU_LIMIT_MAX_L2_FETCH_GRANULARITY = 0x05,
  __pyx_e_4cuda_5ccuda_CU_LIMIT_PERSISTING_L2_CACHE_SIZE = 0x06,
  __pyx_e_4cuda_5ccuda_CU_LIMIT_MAX
};

/* "cuda/ccuda.pxd":659
 * ctypedef CUlimit_enum CUlimit
 * 
 * cdef enum CUresourcetype_enum:             # <<<<<<<<<<<<<<
 *     CU_RESOURCE_TYPE_ARRAY = 0x00
 *     CU_RESOURCE_TYPE_MIPMAPPED_ARRAY = 0x01
 */
enum __pyx_t_4cuda_5ccuda_CUresourcetype_enum {
  __pyx_e_4cuda_5ccuda_CU_RESOURCE_TYPE_ARRAY = 0x00,
  __pyx_e_4cuda_5ccuda_CU_RESOURCE_TYPE_MIPMAPPED_ARRAY = 0x01,
  __pyx_e_4cuda_5ccuda_CU_RESOURCE_TYPE_LINEAR = 0x02,
  __pyx_e_4cuda_5ccuda_CU_RESOURCE_TYPE_PITCH2D = 0x03
};

/* "cuda/ccuda.pxd":669
 * ctypedef void (*CUhostFn)(void* userData)
 * 
 * cdef enum CUaccessProperty_enum:             # <<<<<<<<<<<<<<
 *     CU_ACCESS_PROPERTY_NORMAL = 0
 *     CU_ACCESS_PROPERTY_STREAMING = 1
 */
enum __pyx_t_4cuda_5ccuda_CUaccessProperty_enum {
  __pyx_e_4cuda_5ccuda_CU_ACCESS_PROPERTY_NORMAL = 0,
  __pyx_e_4cuda_5ccuda_CU_ACCESS_PROPERTY_STREAMING = 1,
  __pyx_e_4cuda_5ccuda_CU_ACCESS_PROPERTY_PERSISTING = 2
};

/* "cuda/ccuda.pxd":723
 * ctypedef CUDA_HOST_NODE_PARAMS_v1 CUDA_HOST_NODE_PARAMS
 * 
 * cdef enum CUgraphNodeType_enum:             # <<<<<<<<<<<<<<
 *     CU_GRAPH_NODE_TYPE_KERNEL = 0
 *     CU_GRAPH_NODE_TYPE_MEMCPY = 1
 */
enum __pyx_t_4cuda_5ccuda_CUgraphNodeType_enum {
  __pyx_e_4cuda_5ccuda_CU_GRAPH_NODE_TYPE_KERNEL = 0,
  __pyx_e_4cuda_5ccuda_CU_GRAPH_NODE_TYPE_MEMCPY = 1,
  __pyx_e_4cuda_5ccuda_CU_GRAPH_NODE_TYPE_MEMSET = 2,
  __pyx_e_4cuda_5ccuda_CU_GRAPH_NODE_TYPE_HOST = 3,
  __pyx_e_4cuda_5ccuda_CU_GRAPH_NODE_TYPE_GRAPH = 4,
  __pyx_e_4cuda_5ccuda_CU_GRAPH_NODE_TYPE_EMPTY = 5,
  __pyx_e_4cuda_5ccuda_CU_GRAPH_NODE_TYPE_WAIT_EVENT = 6,
  __pyx_e_4cuda_5ccuda_CU_GRAPH_NODE_TYPE_EVENT_RECORD = 7,
  __pyx_e_4cuda_5ccuda_CU_GRAPH_NODE_TYPE_EXT_SEMAS_SIGNAL = 8,
  __pyx_e_4cuda_5ccuda_CU_GRAPH_NODE_TYPE_EXT_SEMAS_WAIT = 9,
  __pyx_e_4cuda_5ccuda_CU_GRAPH_NODE_TYPE_MEM_ALLOC = 10,
  __pyx_e_4cuda_5ccuda_CU_GRAPH_NODE_TYPE_MEM_FREE = 11
};

/* "cuda/ccuda.pxd":739
 * ctypedef CUgraphNodeType_enum CUgraphNodeType
 * 
 * cdef enum CUsynchronizationPolicy_enum:             # <<<<<<<<<<<<<<
 *     CU_SYNC_POLICY_AUTO = 1
 *     CU_SYNC_POLICY_SPIN = 2
 */
enum __pyx_t_4cuda_5ccuda_CUsynchronizationPolicy_enum {
  __pyx_e_4cuda_5ccuda_CU_SYNC_POLICY_AUTO = 1,
  __pyx_e_4cuda_5ccuda_CU_SYNC_POLICY_SPIN = 2,
  __pyx_e_4cuda_5ccuda_CU_SYNC_POLICY_YIELD = 3,
  __pyx_e_4cuda_5ccuda_CU_SYNC_POLICY_BLOCKING_SYNC = 4
};

/* "cuda/ccuda.pxd":747
 * ctypedef CUsynchronizationPolicy_enum CUsynchronizationPolicy
 * 
 * cdef enum CUkernelNodeAttrID_enum:             # <<<<<<<<<<<<<<
 *     CU_KERNEL_NODE_ATTRIBUTE_ACCESS_POLICY_WINDOW = 1
 *     CU_KERNEL_NODE_ATTRIBUTE_COOPERATIVE = 2
 */
enum __pyx_t_4cuda_5ccuda_CUkernelNodeAttrID_enum {
  __pyx_e_4cuda_5ccuda_CU_KERNEL_NODE_ATTRIBUTE_ACCESS_POLICY_WINDOW = 1,
  __pyx_e_4cuda_5ccuda_CU_KERNEL_NODE_ATTRIBUTE_COOPERATIVE = 2
};

/* "cuda/ccuda.pxd":761
 * ctypedef CUkernelNodeAttrValue_v1 CUkernelNodeAttrValue
 * 
 * cdef enum CUstreamCaptureStatus_enum:             # <<<<<<<<<<<<<<
 *     CU_STREAM_CAPTURE_STATUS_NONE = 0
 *     CU_STREAM_CAPTURE_STATUS_ACTIVE = 1
 */
enum __pyx_t_4cuda_5ccuda_CUstreamCaptureStatus_enum {
  __pyx_e_4cuda_5ccuda_CU_STREAM_CAPTURE_STATUS_NONE = 0,
  __pyx_e_4cuda_5ccuda_CU_STREAM_CAPTURE_STATUS_ACTIVE = 1,
  __pyx_e_4cuda_5ccuda_CU_STREAM_CAPTURE_STATUS_INVALIDATED = 2
};

/* "cuda/ccuda.pxd":768
 * ctypedef CUstreamCaptureStatus_enum CUstreamCaptureStatus
 * 
 * cdef enum CUstreamCaptureMode_enum:             # <<<<<<<<<<<<<<
 *     CU_STREAM_CAPTURE_MODE_GLOBAL = 0
 *     CU_STREAM_CAPTURE_MODE_THREAD_LOCAL = 1
 */
enum __pyx_t_4cuda_5ccuda_CUstreamCaptureMode_enum {
  __pyx_e_4cuda_5ccuda_CU_STREAM_CAPTURE_MODE_GLOBAL = 0,
  __pyx_e_4cuda_5ccuda_CU_STREAM_CAPTURE_MODE_THREAD_LOCAL = 1,
  __pyx_e_4cuda_5ccuda_CU_STREAM_CAPTURE_MODE_RELAXED = 2
};

/* "cuda/ccuda.pxd":775
 * ctypedef CUstreamCaptureMode_enum CUstreamCaptureMode
 * 
 * cdef enum CUstreamAttrID_enum:             # <<<<<<<<<<<<<<
 *     CU_STREAM_ATTRIBUTE_ACCESS_POLICY_WINDOW = 1
 *     CU_STREAM_ATTRIBUTE_SYNCHRONIZATION_POLICY = 3
 */
enum __pyx_t_4cuda_5ccuda_CUstreamAttrID_enum {
  __pyx_e_4cuda_5ccuda_CU_STREAM_ATTRIBUTE_ACCESS_POLICY_WINDOW = 1,
  __pyx_e_4cuda_5ccuda_CU_STREAM_ATTRIBUTE_SYNCHRONIZATION_POLICY = 3
};

/* "cuda/ccuda.pxd":789
 * ctypedef CUstreamAttrValue_v1 CUstreamAttrValue
 * 
 * cdef enum CUdriverProcAddress_flags_enum:             # <<<<<<<<<<<<<<
 *     CU_GET_PROC_ADDRESS_DEFAULT = 0
 *     CU_GET_PROC_ADDRESS_LEGACY_STREAM = 1 << 0
 */
enum __pyx_t_4cuda_5ccuda_CUdriverProcAddress_flags_enum {

  /* "cuda/ccuda.pxd":792
 *     CU_GET_PROC_ADDRESS_DEFAULT = 0
 *     CU_GET_PROC_ADDRESS_LEGACY_STREAM = 1 << 0
 *     CU_GET_PROC_ADDRESS_PER_THREAD_DEFAULT_STREAM = 1 << 1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUdriverProcAddress_flags_enum CUdriverProcAddress_flags
 */
  __pyx_e_4cuda_5ccuda_CU_GET_PROC_ADDRESS_DEFAULT = 0,
  __pyx_e_4cuda_5ccuda_CU_GET_PROC_ADDRESS_LEGACY_STREAM = (1 << 0),
  __pyx_e_4cuda_5ccuda_CU_GET_PROC_ADDRESS_PER_THREAD_DEFAULT_STREAM = (1 << 1)
};

/* "cuda/ccuda.pxd":796
 * ctypedef CUdriverProcAddress_flags_enum CUdriverProcAddress_flags
 * 
 * cdef enum CUexecAffinityType_enum:             # <<<<<<<<<<<<<<
 *     CU_EXEC_AFFINITY_TYPE_SM_COUNT = 0
 *     CU_EXEC_AFFINITY_TYPE_MAX
 */
enum __pyx_t_4cuda_5ccuda_CUexecAffinityType_enum {
  __pyx_e_4cuda_5ccuda_CU_EXEC_AFFINITY_TYPE_SM_COUNT = 0,
  __pyx_e_4cuda_5ccuda_CU_EXEC_AFFINITY_TYPE_MAX
};

/* "cuda/ccuda.pxd":820
 * ctypedef CUexecAffinityParam_v1 CUexecAffinityParam
 * 
 * cdef enum cudaError_enum:             # <<<<<<<<<<<<<<
 *     CUDA_SUCCESS = 0
 *     CUDA_ERROR_INVALID_VALUE = 1
 */
enum __pyx_t_4cuda_5ccuda_cudaError_enum {
  __pyx_e_4cuda_5ccuda_CUDA_SUCCESS = 0,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_INVALID_VALUE = 1,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_OUT_OF_MEMORY = 2,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_INITIALIZED = 3,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_DEINITIALIZED = 4,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_PROFILER_DISABLED = 5,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_PROFILER_NOT_INITIALIZED = 6,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_PROFILER_ALREADY_STARTED = 7,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_PROFILER_ALREADY_STOPPED = 8,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_STUB_LIBRARY = 34,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_NO_DEVICE = 0x64,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_INVALID_DEVICE = 0x65,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_DEVICE_NOT_LICENSED = 0x66,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_INVALID_IMAGE = 0xC8,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_INVALID_CONTEXT = 0xC9,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_CONTEXT_ALREADY_CURRENT = 0xCA,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_MAP_FAILED = 0xCD,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_UNMAP_FAILED = 0xCE,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_ARRAY_IS_MAPPED = 0xCF,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_ALREADY_MAPPED = 0xD0,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_NO_BINARY_FOR_GPU = 0xD1,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_ALREADY_ACQUIRED = 0xD2,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_MAPPED = 0xD3,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_MAPPED_AS_ARRAY = 0xD4,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_MAPPED_AS_POINTER = 0xD5,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_ECC_UNCORRECTABLE = 0xD6,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_UNSUPPORTED_LIMIT = 0xD7,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_CONTEXT_ALREADY_IN_USE = 0xD8,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_PEER_ACCESS_UNSUPPORTED = 0xD9,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_INVALID_PTX = 0xDA,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_INVALID_GRAPHICS_CONTEXT = 0xDB,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_NVLINK_UNCORRECTABLE = 0xDC,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_JIT_COMPILER_NOT_FOUND = 0xDD,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_UNSUPPORTED_PTX_VERSION = 0xDE,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_JIT_COMPILATION_DISABLED = 0xDF,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_UNSUPPORTED_EXEC_AFFINITY = 0xE0,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_INVALID_SOURCE = 0x12C,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_FILE_NOT_FOUND = 0x12D,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_SHARED_OBJECT_SYMBOL_NOT_FOUND = 0x12E,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_SHARED_OBJECT_INIT_FAILED = 0x12F,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_OPERATING_SYSTEM = 0x130,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_INVALID_HANDLE = 0x190,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_ILLEGAL_STATE = 0x191,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND = 0x1F4,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_READY = 0x258,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_ILLEGAL_ADDRESS = 0x2BC,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_LAUNCH_OUT_OF_RESOURCES = 0x2BD,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_LAUNCH_TIMEOUT = 0x2BE,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_LAUNCH_INCOMPATIBLE_TEXTURING = 0x2BF,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_PEER_ACCESS_ALREADY_ENABLED = 0x2C0,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_PEER_ACCESS_NOT_ENABLED = 0x2C1,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_PRIMARY_CONTEXT_ACTIVE = 0x2C4,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_CONTEXT_IS_DESTROYED = 0x2C5,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_ASSERT = 0x2C6,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_TOO_MANY_PEERS = 0x2C7,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_HOST_MEMORY_ALREADY_REGISTERED = 0x2C8,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_HOST_MEMORY_NOT_REGISTERED = 0x2C9,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_HARDWARE_STACK_ERROR = 0x2CA,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_ILLEGAL_INSTRUCTION = 0x2CB,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_MISALIGNED_ADDRESS = 0x2CC,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_INVALID_ADDRESS_SPACE = 0x2CD,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_INVALID_PC = 0x2CE,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_LAUNCH_FAILED = 0x2CF,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_COOPERATIVE_LAUNCH_TOO_LARGE = 0x2D0,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_PERMITTED = 0x320,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_SUPPORTED = 0x321,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_SYSTEM_NOT_READY = 0x322,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_SYSTEM_DRIVER_MISMATCH = 0x323,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_COMPAT_NOT_SUPPORTED_ON_DEVICE = 0x324,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_MPS_CONNECTION_FAILED = 0x325,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_MPS_RPC_FAILURE = 0x326,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_MPS_SERVER_NOT_READY = 0x327,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_MPS_MAX_CLIENTS_REACHED = 0x328,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_MPS_MAX_CONNECTIONS_REACHED = 0x329,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_STREAM_CAPTURE_UNSUPPORTED = 0x384,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_STREAM_CAPTURE_INVALIDATED = 0x385,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_STREAM_CAPTURE_MERGE = 0x386,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_STREAM_CAPTURE_UNMATCHED = 0x387,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_STREAM_CAPTURE_UNJOINED = 0x388,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_STREAM_CAPTURE_ISOLATION = 0x389,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_STREAM_CAPTURE_IMPLICIT = 0x38A,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_CAPTURED_EVENT = 0x38B,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_STREAM_CAPTURE_WRONG_THREAD = 0x38C,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_TIMEOUT = 0x38D,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_GRAPH_EXEC_UPDATE_FAILURE = 0x38E,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_EXTERNAL_DEVICE = 0x38F,
  __pyx_e_4cuda_5ccuda_CUDA_ERROR_UNKNOWN = 0x3E7
};

/* "cuda/ccuda.pxd":911
 * ctypedef cudaError_enum CUresult
 * 
 * cdef enum CUdevice_P2PAttribute_enum:             # <<<<<<<<<<<<<<
 *     CU_DEVICE_P2P_ATTRIBUTE_PERFORMANCE_RANK = 0x01
 *     CU_DEVICE_P2P_ATTRIBUTE_ACCESS_SUPPORTED = 0x02
 */
enum __pyx_t_4cuda_5ccuda_CUdevice_P2PAttribute_enum {
  __pyx_e_4cuda_5ccuda_CU_DEVICE_P2P_ATTRIBUTE_PERFORMANCE_RANK = 0x01,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_P2P_ATTRIBUTE_ACCESS_SUPPORTED = 0x02,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_P2P_ATTRIBUTE_NATIVE_ATOMIC_SUPPORTED = 0x03,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_P2P_ATTRIBUTE_ACCESS_ACCESS_SUPPORTED = 0x04,
  __pyx_e_4cuda_5ccuda_CU_DEVICE_P2P_ATTRIBUTE_CUDA_ARRAY_ACCESS_SUPPORTED = 0x04
};

/* "cuda/ccuda.pxd":1101
 * ctypedef CUDA_TEXTURE_DESC_v1 CUDA_TEXTURE_DESC
 * 
 * cdef enum CUresourceViewFormat_enum:             # <<<<<<<<<<<<<<
 *     CU_RES_VIEW_FORMAT_NONE = 0x00
 *     CU_RES_VIEW_FORMAT_UINT_1X8 = 0x01
 */
enum __pyx_t_4cuda_5ccuda_CUresourceViewFormat_enum {
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_NONE = 0x00,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_UINT_1X8 = 0x01,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_UINT_2X8 = 0x02,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_UINT_4X8 = 0x03,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_SINT_1X8 = 0x04,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_SINT_2X8 = 0x05,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_SINT_4X8 = 0x06,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_UINT_1X16 = 0x07,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_UINT_2X16 = 0x08,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_UINT_4X16 = 0x09,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_SINT_1X16 = 0x0a,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_SINT_2X16 = 0x0b,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_SINT_4X16 = 0x0c,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_UINT_1X32 = 0x0d,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_UINT_2X32 = 0x0e,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_UINT_4X32 = 0x0f,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_SINT_1X32 = 0x10,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_SINT_2X32 = 0x11,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_SINT_4X32 = 0x12,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_FLOAT_1X16 = 0x13,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_FLOAT_2X16 = 0x14,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_FLOAT_4X16 = 0x15,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_FLOAT_1X32 = 0x16,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_FLOAT_2X32 = 0x17,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_FLOAT_4X32 = 0x18,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_UNSIGNED_BC1 = 0x19,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_UNSIGNED_BC2 = 0x1a,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_UNSIGNED_BC3 = 0x1b,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_UNSIGNED_BC4 = 0x1c,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_SIGNED_BC4 = 0x1d,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_UNSIGNED_BC5 = 0x1e,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_SIGNED_BC5 = 0x1f,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_UNSIGNED_BC6H = 0x20,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_SIGNED_BC6H = 0x21,
  __pyx_e_4cuda_5ccuda_CU_RES_VIEW_FORMAT_UNSIGNED_BC7 = 0x22
};

/* "cuda/ccuda.pxd":1163
 * ctypedef CUDA_POINTER_ATTRIBUTE_P2P_TOKENS_v1 CUDA_POINTER_ATTRIBUTE_P2P_TOKENS
 * 
 * cdef enum CUDA_POINTER_ATTRIBUTE_ACCESS_FLAGS_enum:             # <<<<<<<<<<<<<<
 *     CU_POINTER_ATTRIBUTE_ACCESS_FLAG_NONE = 0x0
 *     CU_POINTER_ATTRIBUTE_ACCESS_FLAG_READ = 0x1
 */
enum __pyx_t_4cuda_5ccuda_CUDA_POINTER_ATTRIBUTE_ACCESS_FLAGS_enum {
  __pyx_e_4cuda_5ccuda_CU_POINTER_ATTRIBUTE_ACCESS_FLAG_NONE = 0x0,
  __pyx_e_4cuda_5ccuda_CU_POINTER_ATTRIBUTE_ACCESS_FLAG_READ = 0x1,
  __pyx_e_4cuda_5ccuda_CU_POINTER_ATTRIBUTE_ACCESS_FLAG_READWRITE = 0x3
};

/* "cuda/ccuda.pxd":1186
 * ctypedef CUDA_LAUNCH_PARAMS_v1 CUDA_LAUNCH_PARAMS
 * 
 * cdef enum CUexternalMemoryHandleType_enum:             # <<<<<<<<<<<<<<
 *     CU_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD = 1
 *     CU_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32 = 2
 */
enum __pyx_t_4cuda_5ccuda_CUexternalMemoryHandleType_enum {
  __pyx_e_4cuda_5ccuda_CU_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD = 1,
  __pyx_e_4cuda_5ccuda_CU_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32 = 2,
  __pyx_e_4cuda_5ccuda_CU_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT = 3,
  __pyx_e_4cuda_5ccuda_CU_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP = 4,
  __pyx_e_4cuda_5ccuda_CU_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE = 5,
  __pyx_e_4cuda_5ccuda_CU_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_RESOURCE = 6,
  __pyx_e_4cuda_5ccuda_CU_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_RESOURCE_KMT = 7,
  __pyx_e_4cuda_5ccuda_CU_EXTERNAL_MEMORY_HANDLE_TYPE_NVSCIBUF = 8
};

/* "cuda/ccuda.pxd":1238
 * ctypedef CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC_v1 CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC
 * 
 * cdef enum CUexternalSemaphoreHandleType_enum:             # <<<<<<<<<<<<<<
 *     CU_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD = 1
 *     CU_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32 = 2
 */
enum __pyx_t_4cuda_5ccuda_CUexternalSemaphoreHandleType_enum {
  __pyx_e_4cuda_5ccuda_CU_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD = 1,
  __pyx_e_4cuda_5ccuda_CU_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32 = 2,
  __pyx_e_4cuda_5ccuda_CU_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT = 3,
  __pyx_e_4cuda_5ccuda_CU_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE = 4,
  __pyx_e_4cuda_5ccuda_CU_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D11_FENCE = 5,
  __pyx_e_4cuda_5ccuda_CU_EXTERNAL_SEMAPHORE_HANDLE_TYPE_NVSCISYNC = 6,
  __pyx_e_4cuda_5ccuda_CU_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D11_KEYED_MUTEX = 7,
  __pyx_e_4cuda_5ccuda_CU_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D11_KEYED_MUTEX_KMT = 8,
  __pyx_e_4cuda_5ccuda_CU_EXTERNAL_SEMAPHORE_HANDLE_TYPE_TIMELINE_SEMAPHORE_FD = 9,
  __pyx_e_4cuda_5ccuda_CU_EXTERNAL_SEMAPHORE_HANDLE_TYPE_TIMELINE_SEMAPHORE_WIN32 = 10
};

/* "cuda/ccuda.pxd":1344
 * ctypedef CUmemGenericAllocationHandle_v1 CUmemGenericAllocationHandle
 * 
 * cdef enum CUmemAllocationHandleType_enum:             # <<<<<<<<<<<<<<
 *     CU_MEM_HANDLE_TYPE_NONE = 0x0
 *     CU_MEM_HANDLE_TYPE_POSIX_FILE_DESCRIPTOR = 0x1
 */
enum __pyx_t_4cuda_5ccuda_CUmemAllocationHandleType_enum {
  __pyx_e_4cuda_5ccuda_CU_MEM_HANDLE_TYPE_NONE = 0x0,
  __pyx_e_4cuda_5ccuda_CU_MEM_HANDLE_TYPE_POSIX_FILE_DESCRIPTOR = 0x1,
  __pyx_e_4cuda_5ccuda_CU_MEM_HANDLE_TYPE_WIN32 = 0x2,
  __pyx_e_4cuda_5ccuda_CU_MEM_HANDLE_TYPE_WIN32_KMT = 0x4,
  __pyx_e_4cuda_5ccuda_CU_MEM_HANDLE_TYPE_MAX = 0x7FFFFFFF
};

/* "cuda/ccuda.pxd":1353
 * ctypedef CUmemAllocationHandleType_enum CUmemAllocationHandleType
 * 
 * cdef enum CUmemAccess_flags_enum:             # <<<<<<<<<<<<<<
 *     CU_MEM_ACCESS_FLAGS_PROT_NONE = 0x0
 *     CU_MEM_ACCESS_FLAGS_PROT_READ = 0x1
 */
enum __pyx_t_4cuda_5ccuda_CUmemAccess_flags_enum {
  __pyx_e_4cuda_5ccuda_CU_MEM_ACCESS_FLAGS_PROT_NONE = 0x0,
  __pyx_e_4cuda_5ccuda_CU_MEM_ACCESS_FLAGS_PROT_READ = 0x1,
  __pyx_e_4cuda_5ccuda_CU_MEM_ACCESS_FLAGS_PROT_READWRITE = 0x3,
  __pyx_e_4cuda_5ccuda_CU_MEM_ACCESS_FLAGS_PROT_MAX = 0x7FFFFFFF
};

/* "cuda/ccuda.pxd":1361
 * ctypedef CUmemAccess_flags_enum CUmemAccess_flags
 * 
 * cdef enum CUmemLocationType_enum:             # <<<<<<<<<<<<<<
 *     CU_MEM_LOCATION_TYPE_INVALID = 0x0
 *     CU_MEM_LOCATION_TYPE_DEVICE = 0x1
 */
enum __pyx_t_4cuda_5ccuda_CUmemLocationType_enum {
  __pyx_e_4cuda_5ccuda_CU_MEM_LOCATION_TYPE_INVALID = 0x0,
  __pyx_e_4cuda_5ccuda_CU_MEM_LOCATION_TYPE_DEVICE = 0x1,
  __pyx_e_4cuda_5ccuda_CU_MEM_LOCATION_TYPE_MAX = 0x7FFFFFFF
};

/* "cuda/ccuda.pxd":1368
 * ctypedef CUmemLocationType_enum CUmemLocationType
 * 
 * cdef enum CUmemAllocationType_enum:             # <<<<<<<<<<<<<<
 *     CU_MEM_ALLOCATION_TYPE_INVALID = 0x0
 *     CU_MEM_ALLOCATION_TYPE_PINNED = 0x1
 */
enum __pyx_t_4cuda_5ccuda_CUmemAllocationType_enum {
  __pyx_e_4cuda_5ccuda_CU_MEM_ALLOCATION_TYPE_INVALID = 0x0,
  __pyx_e_4cuda_5ccuda_CU_MEM_ALLOCATION_TYPE_PINNED = 0x1,
  __pyx_e_4cuda_5ccuda_CU_MEM_ALLOCATION_TYPE_MAX = 0x7FFFFFFF
};

/* "cuda/ccuda.pxd":1375
 * ctypedef CUmemAllocationType_enum CUmemAllocationType
 * 
 * cdef enum CUmemAllocationGranularity_flags_enum:             # <<<<<<<<<<<<<<
 *     CU_MEM_ALLOC_GRANULARITY_MINIMUM = 0x0
 *     CU_MEM_ALLOC_GRANULARITY_RECOMMENDED = 0x1
 */
enum __pyx_t_4cuda_5ccuda_CUmemAllocationGranularity_flags_enum {
  __pyx_e_4cuda_5ccuda_CU_MEM_ALLOC_GRANULARITY_MINIMUM = 0x0,
  __pyx_e_4cuda_5ccuda_CU_MEM_ALLOC_GRANULARITY_RECOMMENDED = 0x1
};

/* "cuda/ccuda.pxd":1381
 * ctypedef CUmemAllocationGranularity_flags_enum CUmemAllocationGranularity_flags
 * 
 * cdef enum CUarraySparseSubresourceType_enum:             # <<<<<<<<<<<<<<
 *     CU_ARRAY_SPARSE_SUBRESOURCE_TYPE_SPARSE_LEVEL = 0
 *     CU_ARRAY_SPARSE_SUBRESOURCE_TYPE_MIPTAIL = 1
 */
enum __pyx_t_4cuda_5ccuda_CUarraySparseSubresourceType_enum {
  __pyx_e_4cuda_5ccuda_CU_ARRAY_SPARSE_SUBRESOURCE_TYPE_SPARSE_LEVEL = 0,
  __pyx_e_4cuda_5ccuda_CU_ARRAY_SPARSE_SUBRESOURCE_TYPE_MIPTAIL = 1
};

/* "cuda/ccuda.pxd":1387
 * ctypedef CUarraySparseSubresourceType_enum CUarraySparseSubresourceType
 * 
 * cdef enum CUmemOperationType_enum:             # <<<<<<<<<<<<<<
 *     CU_MEM_OPERATION_TYPE_MAP = 1
 *     CU_MEM_OPERATION_TYPE_UNMAP = 2
 */
enum __pyx_t_4cuda_5ccuda_CUmemOperationType_enum {
  __pyx_e_4cuda_5ccuda_CU_MEM_OPERATION_TYPE_MAP = 1,
  __pyx_e_4cuda_5ccuda_CU_MEM_OPERATION_TYPE_UNMAP = 2
};

/* "cuda/ccuda.pxd":1393
 * ctypedef CUmemOperationType_enum CUmemOperationType
 * 
 * cdef enum CUmemHandleType_enum:             # <<<<<<<<<<<<<<
 *     CU_MEM_HANDLE_TYPE_GENERIC = 0
 * 
 */
enum __pyx_t_4cuda_5ccuda_CUmemHandleType_enum {
  __pyx_e_4cuda_5ccuda_CU_MEM_HANDLE_TYPE_GENERIC = 0
};

/* "cuda/ccuda.pxd":1449
 * ctypedef CUmemLocation_v1 CUmemLocation
 * 
 * cdef enum CUmemAllocationCompType_enum:             # <<<<<<<<<<<<<<
 *     CU_MEM_ALLOCATION_COMP_NONE = 0x0
 *     CU_MEM_ALLOCATION_COMP_GENERIC = 0x1
 */
enum __pyx_t_4cuda_5ccuda_CUmemAllocationCompType_enum {
  __pyx_e_4cuda_5ccuda_CU_MEM_ALLOCATION_COMP_NONE = 0x0,
  __pyx_e_4cuda_5ccuda_CU_MEM_ALLOCATION_COMP_GENERIC = 0x1
};

/* "cuda/ccuda.pxd":1480
 * ctypedef CUmemAccessDesc_v1 CUmemAccessDesc
 * 
 * cdef enum CUgraphExecUpdateResult_enum:             # <<<<<<<<<<<<<<
 *     CU_GRAPH_EXEC_UPDATE_SUCCESS = 0x0
 *     CU_GRAPH_EXEC_UPDATE_ERROR = 0x1
 */
enum __pyx_t_4cuda_5ccuda_CUgraphExecUpdateResult_enum {
  __pyx_e_4cuda_5ccuda_CU_GRAPH_EXEC_UPDATE_SUCCESS = 0x0,
  __pyx_e_4cuda_5ccuda_CU_GRAPH_EXEC_UPDATE_ERROR = 0x1,
  __pyx_e_4cuda_5ccuda_CU_GRAPH_EXEC_UPDATE_ERROR_TOPOLOGY_CHANGED = 0x2,
  __pyx_e_4cuda_5ccuda_CU_GRAPH_EXEC_UPDATE_ERROR_NODE_TYPE_CHANGED = 0x3,
  __pyx_e_4cuda_5ccuda_CU_GRAPH_EXEC_UPDATE_ERROR_FUNCTION_CHANGED = 0x4,
  __pyx_e_4cuda_5ccuda_CU_GRAPH_EXEC_UPDATE_ERROR_PARAMETERS_CHANGED = 0x5,
  __pyx_e_4cuda_5ccuda_CU_GRAPH_EXEC_UPDATE_ERROR_NOT_SUPPORTED = 0x6,
  __pyx_e_4cuda_5ccuda_CU_GRAPH_EXEC_UPDATE_ERROR_UNSUPPORTED_FUNCTION_CHANGE = 0x7
};

/* "cuda/ccuda.pxd":1492
 * ctypedef CUgraphExecUpdateResult_enum CUgraphExecUpdateResult
 * 
 * cdef enum CUmemPool_attribute_enum:             # <<<<<<<<<<<<<<
 *     CU_MEMPOOL_ATTR_REUSE_FOLLOW_EVENT_DEPENDENCIES = 1
 *     CU_MEMPOOL_ATTR_REUSE_ALLOW_OPPORTUNISTIC
 */
enum __pyx_t_4cuda_5ccuda_CUmemPool_attribute_enum {
  __pyx_e_4cuda_5ccuda_CU_MEMPOOL_ATTR_REUSE_FOLLOW_EVENT_DEPENDENCIES = 1,
  __pyx_e_4cuda_5ccuda_CU_MEMPOOL_ATTR_REUSE_ALLOW_OPPORTUNISTIC,
  __pyx_e_4cuda_5ccuda_CU_MEMPOOL_ATTR_REUSE_ALLOW_INTERNAL_DEPENDENCIES,
  __pyx_e_4cuda_5ccuda_CU_MEMPOOL_ATTR_RELEASE_THRESHOLD,
  __pyx_e_4cuda_5ccuda_CU_MEMPOOL_ATTR_RESERVED_MEM_CURRENT,
  __pyx_e_4cuda_5ccuda_CU_MEMPOOL_ATTR_RESERVED_MEM_HIGH,
  __pyx_e_4cuda_5ccuda_CU_MEMPOOL_ATTR_USED_MEM_CURRENT,
  __pyx_e_4cuda_5ccuda_CU_MEMPOOL_ATTR_USED_MEM_HIGH
};

/* "cuda/ccuda.pxd":1531
 * ctypedef CUDA_MEM_ALLOC_NODE_PARAMS_st CUDA_MEM_ALLOC_NODE_PARAMS
 * 
 * cdef enum CUgraphMem_attribute_enum:             # <<<<<<<<<<<<<<
 *     CU_GRAPH_MEM_ATTR_USED_MEM_CURRENT
 *     CU_GRAPH_MEM_ATTR_USED_MEM_HIGH
 */
enum __pyx_t_4cuda_5ccuda_CUgraphMem_attribute_enum {
  __pyx_e_4cuda_5ccuda_CU_GRAPH_MEM_ATTR_USED_MEM_CURRENT,
  __pyx_e_4cuda_5ccuda_CU_GRAPH_MEM_ATTR_USED_MEM_HIGH,
  __pyx_e_4cuda_5ccuda_CU_GRAPH_MEM_ATTR_RESERVED_MEM_CURRENT,
  __pyx_e_4cuda_5ccuda_CU_GRAPH_MEM_ATTR_RESERVED_MEM_HIGH
};

/* "cuda/ccuda.pxd":1539
 * ctypedef CUgraphMem_attribute_enum CUgraphMem_attribute
 * 
 * cdef enum CUflushGPUDirectRDMAWritesOptions_enum:             # <<<<<<<<<<<<<<
 *     CU_FLUSH_GPU_DIRECT_RDMA_WRITES_OPTION_HOST = 1<<0
 *     CU_FLUSH_GPU_DIRECT_RDMA_WRITES_OPTION_MEMOPS = 1<<1
 */
enum __pyx_t_4cuda_5ccuda_CUflushGPUDirectRDMAWritesOptions_enum {

  /* "cuda/ccuda.pxd":1541
 * cdef enum CUflushGPUDirectRDMAWritesOptions_enum:
 *     CU_FLUSH_GPU_DIRECT_RDMA_WRITES_OPTION_HOST = 1<<0
 *     CU_FLUSH_GPU_DIRECT_RDMA_WRITES_OPTION_MEMOPS = 1<<1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUflushGPUDirectRDMAWritesOptions_enum CUflushGPUDirectRDMAWritesOptions
 */
  __pyx_e_4cuda_5ccuda_CU_FLUSH_GPU_DIRECT_RDMA_WRITES_OPTION_HOST = (1 << 0),
  __pyx_e_4cuda_5ccuda_CU_FLUSH_GPU_DIRECT_RDMA_WRITES_OPTION_MEMOPS = (1 << 1)
};

/* "cuda/ccuda.pxd":1545
 * ctypedef CUflushGPUDirectRDMAWritesOptions_enum CUflushGPUDirectRDMAWritesOptions
 * 
 * cdef enum CUGPUDirectRDMAWritesOrdering_enum:             # <<<<<<<<<<<<<<
 *     CU_GPU_DIRECT_RDMA_WRITES_ORDERING_NONE = 0
 *     CU_GPU_DIRECT_RDMA_WRITES_ORDERING_OWNER = 100
 */
enum __pyx_t_4cuda_5ccuda_CUGPUDirectRDMAWritesOrdering_enum {
  __pyx_e_4cuda_5ccuda_CU_GPU_DIRECT_RDMA_WRITES_ORDERING_NONE = 0,
  __pyx_e_4cuda_5ccuda_CU_GPU_DIRECT_RDMA_WRITES_ORDERING_OWNER = 0x64,
  __pyx_e_4cuda_5ccuda_CU_GPU_DIRECT_RDMA_WRITES_ORDERING_ALL_DEVICES = 0xC8
};

/* "cuda/ccuda.pxd":1552
 * ctypedef CUGPUDirectRDMAWritesOrdering_enum CUGPUDirectRDMAWritesOrdering
 * 
 * cdef enum CUflushGPUDirectRDMAWritesScope_enum:             # <<<<<<<<<<<<<<
 *     CU_FLUSH_GPU_DIRECT_RDMA_WRITES_TO_OWNER = 100
 *     CU_FLUSH_GPU_DIRECT_RDMA_WRITES_TO_ALL_DEVICES = 200
 */
enum __pyx_t_4cuda_5ccuda_CUflushGPUDirectRDMAWritesScope_enum {
  __pyx_e_4cuda_5ccuda_CU_FLUSH_GPU_DIRECT_RDMA_WRITES_TO_OWNER = 0x64,
  __pyx_e_4cuda_5ccuda_CU_FLUSH_GPU_DIRECT_RDMA_WRITES_TO_ALL_DEVICES = 0xC8
};

/* "cuda/ccuda.pxd":1558
 * ctypedef CUflushGPUDirectRDMAWritesScope_enum CUflushGPUDirectRDMAWritesScope
 * 
 * cdef enum CUflushGPUDirectRDMAWritesTarget_enum:             # <<<<<<<<<<<<<<
 *     CU_FLUSH_GPU_DIRECT_RDMA_WRITES_TARGET_CURRENT_CTX = 0
 * 
 */
enum __pyx_t_4cuda_5ccuda_CUflushGPUDirectRDMAWritesTarget_enum {
  __pyx_e_4cuda_5ccuda_CU_FLUSH_GPU_DIRECT_RDMA_WRITES_TARGET_CURRENT_CTX = 0
};

/* "cuda/ccuda.pxd":1563
 * ctypedef CUflushGPUDirectRDMAWritesTarget_enum CUflushGPUDirectRDMAWritesTarget
 * 
 * cdef enum CUgraphDebugDot_flags_enum:             # <<<<<<<<<<<<<<
 *     CU_GRAPH_DEBUG_DOT_FLAGS_VERBOSE = 1<<0
 *     CU_GRAPH_DEBUG_DOT_FLAGS_RUNTIME_TYPES = 1<<1
 */
enum __pyx_t_4cuda_5ccuda_CUgraphDebugDot_flags_enum {

  /* "cuda/ccuda.pxd":1576
 *     CU_GRAPH_DEBUG_DOT_FLAGS_HANDLES = 1<<10
 *     CU_GRAPH_DEBUG_DOT_FLAGS_MEM_ALLOC_NODE_PARAMS = 1<<11
 *     CU_GRAPH_DEBUG_DOT_FLAGS_MEM_FREE_NODE_PARAMS = 1<<12             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUgraphDebugDot_flags_enum CUgraphDebugDot_flags
 */
  __pyx_e_4cuda_5ccuda_CU_GRAPH_DEBUG_DOT_FLAGS_VERBOSE = (1 << 0),
  __pyx_e_4cuda_5ccuda_CU_GRAPH_DEBUG_DOT_FLAGS_RUNTIME_TYPES = (1 << 1),
  __pyx_e_4cuda_5ccuda_CU_GRAPH_DEBUG_DOT_FLAGS_KERNEL_NODE_PARAMS = (1 << 2),
  __pyx_e_4cuda_5ccuda_CU_GRAPH_DEBUG_DOT_FLAGS_MEMCPY_NODE_PARAMS = (1 << 3),
  __pyx_e_4cuda_5ccuda_CU_GRAPH_DEBUG_DOT_FLAGS_MEMSET_NODE_PARAMS = (1 << 4),
  __pyx_e_4cuda_5ccuda_CU_GRAPH_DEBUG_DOT_FLAGS_HOST_NODE_PARAMS = (1 << 5),
  __pyx_e_4cuda_5ccuda_CU_GRAPH_DEBUG_DOT_FLAGS_EVENT_NODE_PARAMS = (1 << 6),
  __pyx_e_4cuda_5ccuda_CU_GRAPH_DEBUG_DOT_FLAGS_EXT_SEMAS_SIGNAL_NODE_PARAMS = (1 << 7),
  __pyx_e_4cuda_5ccuda_CU_GRAPH_DEBUG_DOT_FLAGS_EXT_SEMAS_WAIT_NODE_PARAMS = (1 << 8),
  __pyx_e_4cuda_5ccuda_CU_GRAPH_DEBUG_DOT_FLAGS_KERNEL_NODE_ATTRIBUTES = (1 << 9),
  __pyx_e_4cuda_5ccuda_CU_GRAPH_DEBUG_DOT_FLAGS_HANDLES = (1 << 10),
  __pyx_e_4cuda_5ccuda_CU_GRAPH_DEBUG_DOT_FLAGS_MEM_ALLOC_NODE_PARAMS = (1 << 11),
  __pyx_e_4cuda_5ccuda_CU_GRAPH_DEBUG_DOT_FLAGS_MEM_FREE_NODE_PARAMS = (1 << 12)
};

/* "cuda/ccuda.pxd":1580
 * ctypedef CUgraphDebugDot_flags_enum CUgraphDebugDot_flags
 * 
 * cdef enum CUuserObject_flags_enum:             # <<<<<<<<<<<<<<
 *     CU_USER_OBJECT_NO_DESTRUCTOR_SYNC = 1
 * 
 */
enum __pyx_t_4cuda_5ccuda_CUuserObject_flags_enum {
  __pyx_e_4cuda_5ccuda_CU_USER_OBJECT_NO_DESTRUCTOR_SYNC = 1
};

/* "cuda/ccuda.pxd":1585
 * ctypedef CUuserObject_flags_enum CUuserObject_flags
 * 
 * cdef enum CUuserObjectRetain_flags_enum:             # <<<<<<<<<<<<<<
 *     CU_GRAPH_USER_OBJECT_MOVE = 1
 * 
 */
enum __pyx_t_4cuda_5ccuda_CUuserObjectRetain_flags_enum {
  __pyx_e_4cuda_5ccuda_CU_GRAPH_USER_OBJECT_MOVE = 1
};

/* "cuda/ccuda.pxd":1590
 * ctypedef CUuserObjectRetain_flags_enum CUuserObjectRetain_flags
 * 
 * cdef enum CUgraphInstantiate_flags_enum:             # <<<<<<<<<<<<<<
 *     CUDA_GRAPH_INSTANTIATE_FLAG_AUTO_FREE_ON_LAUNCH = 1
 * 
 */
enum __pyx_t_4cuda_5ccuda_CUgraphInstantiate_flags_enum {
  __pyx_e_4cuda_5ccuda_CUDA_GRAPH_INSTANTIATE_FLAG_AUTO_FREE_ON_LAUNCH = 1
};

/* "cuda/ccuda.pxd":2295
 * cdef CUresult cuGetExportTable(const void** ppExportTable, const CUuuid* pExportTableId) nogil except ?CUDA_ERROR_NOT_FOUND
 * 
 * cdef enum: CUDA_VERSION = 11050             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CU_IPC_HANDLE_SIZE = 64
 */
enum  {
  __pyx_e_4cuda_5ccuda_CUDA_VERSION = 0x2B2A
};

/* "cuda/ccuda.pxd":2297
 * cdef enum: CUDA_VERSION = 11050
 * 
 * cdef enum: CU_IPC_HANDLE_SIZE = 64             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CU_STREAM_LEGACY = 0x1
 */
enum  {
  __pyx_e_4cuda_5ccuda_CU_IPC_HANDLE_SIZE = 64
};

/* "cuda/ccuda.pxd":2299
 * cdef enum: CU_IPC_HANDLE_SIZE = 64
 * 
 * cdef enum: CU_STREAM_LEGACY = 0x1             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CU_STREAM_PER_THREAD = 0x2
 */
enum  {
  __pyx_e_4cuda_5ccuda_CU_STREAM_LEGACY = 0x1
};

/* "cuda/ccuda.pxd":2301
 * cdef enum: CU_STREAM_LEGACY = 0x1
 * 
 * cdef enum: CU_STREAM_PER_THREAD = 0x2             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CU_MEMHOSTALLOC_PORTABLE = 0x01
 */
enum  {
  __pyx_e_4cuda_5ccuda_CU_STREAM_PER_THREAD = 0x2
};

/* "cuda/ccuda.pxd":2303
 * cdef enum: CU_STREAM_PER_THREAD = 0x2
 * 
 * cdef enum: CU_MEMHOSTALLOC_PORTABLE = 0x01             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CU_MEMHOSTALLOC_DEVICEMAP = 0x02
 */
enum  {
  __pyx_e_4cuda_5ccuda_CU_MEMHOSTALLOC_PORTABLE = 0x01
};

/* "cuda/ccuda.pxd":2305
 * cdef enum: CU_MEMHOSTALLOC_PORTABLE = 0x01
 * 
 * cdef enum: CU_MEMHOSTALLOC_DEVICEMAP = 0x02             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CU_MEMHOSTALLOC_WRITECOMBINED = 0x04
 */
enum  {
  __pyx_e_4cuda_5ccuda_CU_MEMHOSTALLOC_DEVICEMAP = 0x02
};

/* "cuda/ccuda.pxd":2307
 * cdef enum: CU_MEMHOSTALLOC_DEVICEMAP = 0x02
 * 
 * cdef enum: CU_MEMHOSTALLOC_WRITECOMBINED = 0x04             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CU_MEMHOSTREGISTER_PORTABLE = 0x01
 */
enum  {
  __pyx_e_4cuda_5ccuda_CU_MEMHOSTALLOC_WRITECOMBINED = 0x04
};

/* "cuda/ccuda.pxd":2309
 * cdef enum: CU_MEMHOSTALLOC_WRITECOMBINED = 0x04
 * 
 * cdef enum: CU_MEMHOSTREGISTER_PORTABLE = 0x01             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CU_MEMHOSTREGISTER_DEVICEMAP = 0x02
 */
enum  {
  __pyx_e_4cuda_5ccuda_CU_MEMHOSTREGISTER_PORTABLE = 0x01
};

/* "cuda/ccuda.pxd":2311
 * cdef enum: CU_MEMHOSTREGISTER_PORTABLE = 0x01
 * 
 * cdef enum: CU_MEMHOSTREGISTER_DEVICEMAP = 0x02             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CU_MEMHOSTREGISTER_IOMEMORY = 0x04
 */
enum  {
  __pyx_e_4cuda_5ccuda_CU_MEMHOSTREGISTER_DEVICEMAP = 0x02
};

/* "cuda/ccuda.pxd":2313
 * cdef enum: CU_MEMHOSTREGISTER_DEVICEMAP = 0x02
 * 
 * cdef enum: CU_MEMHOSTREGISTER_IOMEMORY = 0x04             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CU_MEMHOSTREGISTER_READ_ONLY = 0x08
 */
enum  {
  __pyx_e_4cuda_5ccuda_CU_MEMHOSTREGISTER_IOMEMORY = 0x04
};

/* "cuda/ccuda.pxd":2315
 * cdef enum: CU_MEMHOSTREGISTER_IOMEMORY = 0x04
 * 
 * cdef enum: CU_MEMHOSTREGISTER_READ_ONLY = 0x08             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CU_ARRAY_SPARSE_PROPERTIES_SINGLE_MIPTAIL = 0x1
 */
enum  {
  __pyx_e_4cuda_5ccuda_CU_MEMHOSTREGISTER_READ_ONLY = 0x08
};

/* "cuda/ccuda.pxd":2317
 * cdef enum: CU_MEMHOSTREGISTER_READ_ONLY = 0x08
 * 
 * cdef enum: CU_ARRAY_SPARSE_PROPERTIES_SINGLE_MIPTAIL = 0x1             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CUDA_EXTERNAL_MEMORY_DEDICATED = 0x1
 */
enum  {
  __pyx_e_4cuda_5ccuda_CU_ARRAY_SPARSE_PROPERTIES_SINGLE_MIPTAIL = 0x1
};

/* "cuda/ccuda.pxd":2319
 * cdef enum: CU_ARRAY_SPARSE_PROPERTIES_SINGLE_MIPTAIL = 0x1
 * 
 * cdef enum: CUDA_EXTERNAL_MEMORY_DEDICATED = 0x1             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CUDA_EXTERNAL_SEMAPHORE_SIGNAL_SKIP_NVSCIBUF_MEMSYNC = 0x01
 */
enum  {
  __pyx_e_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_DEDICATED = 0x1
};

/* "cuda/ccuda.pxd":2321
 * cdef enum: CUDA_EXTERNAL_MEMORY_DEDICATED = 0x1
 * 
 * cdef enum: CUDA_EXTERNAL_SEMAPHORE_SIGNAL_SKIP_NVSCIBUF_MEMSYNC = 0x01             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CUDA_EXTERNAL_SEMAPHORE_WAIT_SKIP_NVSCIBUF_MEMSYNC = 0x02
 */
enum  {
  __pyx_e_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_SKIP_NVSCIBUF_MEMSYNC = 0x01
};

/* "cuda/ccuda.pxd":2323
 * cdef enum: CUDA_EXTERNAL_SEMAPHORE_SIGNAL_SKIP_NVSCIBUF_MEMSYNC = 0x01
 * 
 * cdef enum: CUDA_EXTERNAL_SEMAPHORE_WAIT_SKIP_NVSCIBUF_MEMSYNC = 0x02             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CUDA_NVSCISYNC_ATTR_SIGNAL = 0x1
 */
enum  {
  __pyx_e_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_WAIT_SKIP_NVSCIBUF_MEMSYNC = 0x02
};

/* "cuda/ccuda.pxd":2325
 * cdef enum: CUDA_EXTERNAL_SEMAPHORE_WAIT_SKIP_NVSCIBUF_MEMSYNC = 0x02
 * 
 * cdef enum: CUDA_NVSCISYNC_ATTR_SIGNAL = 0x1             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CUDA_NVSCISYNC_ATTR_WAIT = 0x2
 */
enum  {
  __pyx_e_4cuda_5ccuda_CUDA_NVSCISYNC_ATTR_SIGNAL = 0x1
};

/* "cuda/ccuda.pxd":2327
 * cdef enum: CUDA_NVSCISYNC_ATTR_SIGNAL = 0x1
 * 
 * cdef enum: CUDA_NVSCISYNC_ATTR_WAIT = 0x2             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CU_MEM_CREATE_USAGE_TILE_POOL = 0x1
 */
enum  {
  __pyx_e_4cuda_5ccuda_CUDA_NVSCISYNC_ATTR_WAIT = 0x2
};

/* "cuda/ccuda.pxd":2329
 * cdef enum: CUDA_NVSCISYNC_ATTR_WAIT = 0x2
 * 
 * cdef enum: CU_MEM_CREATE_USAGE_TILE_POOL = 0x1             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CUDA_COOPERATIVE_LAUNCH_MULTI_DEVICE_NO_PRE_LAUNCH_SYNC = 0x01
 */
enum  {
  __pyx_e_4cuda_5ccuda_CU_MEM_CREATE_USAGE_TILE_POOL = 0x1
};

/* "cuda/ccuda.pxd":2331
 * cdef enum: CU_MEM_CREATE_USAGE_TILE_POOL = 0x1
 * 
 * cdef enum: CUDA_COOPERATIVE_LAUNCH_MULTI_DEVICE_NO_PRE_LAUNCH_SYNC = 0x01             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CUDA_COOPERATIVE_LAUNCH_MULTI_DEVICE_NO_POST_LAUNCH_SYNC = 0x02
 */
enum  {
  __pyx_e_4cuda_5ccuda_CUDA_COOPERATIVE_LAUNCH_MULTI_DEVICE_NO_PRE_LAUNCH_SYNC = 0x01
};

/* "cuda/ccuda.pxd":2333
 * cdef enum: CUDA_COOPERATIVE_LAUNCH_MULTI_DEVICE_NO_PRE_LAUNCH_SYNC = 0x01
 * 
 * cdef enum: CUDA_COOPERATIVE_LAUNCH_MULTI_DEVICE_NO_POST_LAUNCH_SYNC = 0x02             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CUDA_ARRAY3D_LAYERED = 0x01
 */
enum  {
  __pyx_e_4cuda_5ccuda_CUDA_COOPERATIVE_LAUNCH_MULTI_DEVICE_NO_POST_LAUNCH_SYNC = 0x02
};

/* "cuda/ccuda.pxd":2335
 * cdef enum: CUDA_COOPERATIVE_LAUNCH_MULTI_DEVICE_NO_POST_LAUNCH_SYNC = 0x02
 * 
 * cdef enum: CUDA_ARRAY3D_LAYERED = 0x01             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CUDA_ARRAY3D_2DARRAY = 0x01
 */
enum  {
  __pyx_e_4cuda_5ccuda_CUDA_ARRAY3D_LAYERED = 0x01
};

/* "cuda/ccuda.pxd":2337
 * cdef enum: CUDA_ARRAY3D_LAYERED = 0x01
 * 
 * cdef enum: CUDA_ARRAY3D_2DARRAY = 0x01             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CUDA_ARRAY3D_SURFACE_LDST = 0x02
 */
enum  {
  __pyx_e_4cuda_5ccuda_CUDA_ARRAY3D_2DARRAY = 0x01
};

/* "cuda/ccuda.pxd":2339
 * cdef enum: CUDA_ARRAY3D_2DARRAY = 0x01
 * 
 * cdef enum: CUDA_ARRAY3D_SURFACE_LDST = 0x02             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CUDA_ARRAY3D_CUBEMAP = 0x04
 */
enum  {
  __pyx_e_4cuda_5ccuda_CUDA_ARRAY3D_SURFACE_LDST = 0x02
};

/* "cuda/ccuda.pxd":2341
 * cdef enum: CUDA_ARRAY3D_SURFACE_LDST = 0x02
 * 
 * cdef enum: CUDA_ARRAY3D_CUBEMAP = 0x04             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CUDA_ARRAY3D_TEXTURE_GATHER = 0x08
 */
enum  {
  __pyx_e_4cuda_5ccuda_CUDA_ARRAY3D_CUBEMAP = 0x04
};

/* "cuda/ccuda.pxd":2343
 * cdef enum: CUDA_ARRAY3D_CUBEMAP = 0x04
 * 
 * cdef enum: CUDA_ARRAY3D_TEXTURE_GATHER = 0x08             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CUDA_ARRAY3D_DEPTH_TEXTURE = 0x10
 */
enum  {
  __pyx_e_4cuda_5ccuda_CUDA_ARRAY3D_TEXTURE_GATHER = 0x08
};

/* "cuda/ccuda.pxd":2345
 * cdef enum: CUDA_ARRAY3D_TEXTURE_GATHER = 0x08
 * 
 * cdef enum: CUDA_ARRAY3D_DEPTH_TEXTURE = 0x10             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CUDA_ARRAY3D_COLOR_ATTACHMENT = 0x20
 */
enum  {
  __pyx_e_4cuda_5ccuda_CUDA_ARRAY3D_DEPTH_TEXTURE = 0x10
};

/* "cuda/ccuda.pxd":2347
 * cdef enum: CUDA_ARRAY3D_DEPTH_TEXTURE = 0x10
 * 
 * cdef enum: CUDA_ARRAY3D_COLOR_ATTACHMENT = 0x20             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CUDA_ARRAY3D_SPARSE = 0x40
 */
enum  {
  __pyx_e_4cuda_5ccuda_CUDA_ARRAY3D_COLOR_ATTACHMENT = 0x20
};

/* "cuda/ccuda.pxd":2349
 * cdef enum: CUDA_ARRAY3D_COLOR_ATTACHMENT = 0x20
 * 
 * cdef enum: CUDA_ARRAY3D_SPARSE = 0x40             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CU_TRSA_OVERRIDE_FORMAT = 0x01
 */
enum  {
  __pyx_e_4cuda_5ccuda_CUDA_ARRAY3D_SPARSE = 0x40
};

/* "cuda/ccuda.pxd":2351
 * cdef enum: CUDA_ARRAY3D_SPARSE = 0x40
 * 
 * cdef enum: CU_TRSA_OVERRIDE_FORMAT = 0x01             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CU_TRSF_READ_AS_INTEGER = 0x01
 */
enum  {
  __pyx_e_4cuda_5ccuda_CU_TRSA_OVERRIDE_FORMAT = 0x01
};

/* "cuda/ccuda.pxd":2353
 * cdef enum: CU_TRSA_OVERRIDE_FORMAT = 0x01
 * 
 * cdef enum: CU_TRSF_READ_AS_INTEGER = 0x01             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CU_TRSF_NORMALIZED_COORDINATES = 0x02
 */
enum  {
  __pyx_e_4cuda_5ccuda_CU_TRSF_READ_AS_INTEGER = 0x01
};

/* "cuda/ccuda.pxd":2355
 * cdef enum: CU_TRSF_READ_AS_INTEGER = 0x01
 * 
 * cdef enum: CU_TRSF_NORMALIZED_COORDINATES = 0x02             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CU_TRSF_SRGB = 0x10
 */
enum  {
  __pyx_e_4cuda_5ccuda_CU_TRSF_NORMALIZED_COORDINATES = 0x02
};

/* "cuda/ccuda.pxd":2357
 * cdef enum: CU_TRSF_NORMALIZED_COORDINATES = 0x02
 * 
 * cdef enum: CU_TRSF_SRGB = 0x10             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CU_TRSF_DISABLE_TRILINEAR_OPTIMIZATION = 0x20
 */
enum  {
  __pyx_e_4cuda_5ccuda_CU_TRSF_SRGB = 0x10
};

/* "cuda/ccuda.pxd":2359
 * cdef enum: CU_TRSF_SRGB = 0x10
 * 
 * cdef enum: CU_TRSF_DISABLE_TRILINEAR_OPTIMIZATION = 0x20             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CU_LAUNCH_PARAM_END = 0x00
 */
enum  {
  __pyx_e_4cuda_5ccuda_CU_TRSF_DISABLE_TRILINEAR_OPTIMIZATION = 0x20
};

/* "cuda/ccuda.pxd":2361
 * cdef enum: CU_TRSF_DISABLE_TRILINEAR_OPTIMIZATION = 0x20
 * 
 * cdef enum: CU_LAUNCH_PARAM_END = 0x00             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CU_LAUNCH_PARAM_BUFFER_POINTER = 0x01
 */
enum  {
  __pyx_e_4cuda_5ccuda_CU_LAUNCH_PARAM_END = 0x00
};

/* "cuda/ccuda.pxd":2363
 * cdef enum: CU_LAUNCH_PARAM_END = 0x00
 * 
 * cdef enum: CU_LAUNCH_PARAM_BUFFER_POINTER = 0x01             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CU_LAUNCH_PARAM_BUFFER_SIZE = 0x02
 */
enum  {
  __pyx_e_4cuda_5ccuda_CU_LAUNCH_PARAM_BUFFER_POINTER = 0x01
};

/* "cuda/ccuda.pxd":2365
 * cdef enum: CU_LAUNCH_PARAM_BUFFER_POINTER = 0x01
 * 
 * cdef enum: CU_LAUNCH_PARAM_BUFFER_SIZE = 0x02             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CU_PARAM_TR_DEFAULT = -1
 */
enum  {
  __pyx_e_4cuda_5ccuda_CU_LAUNCH_PARAM_BUFFER_SIZE = 0x02
};

/* "cuda/ccuda.pxd":2367
 * cdef enum: CU_LAUNCH_PARAM_BUFFER_SIZE = 0x02
 * 
 * cdef enum: CU_PARAM_TR_DEFAULT = -1             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CU_DEVICE_CPU = -1
 */
enum  {
  __pyx_e_4cuda_5ccuda_CU_PARAM_TR_DEFAULT = -1L
};

/* "cuda/ccuda.pxd":2369
 * cdef enum: CU_PARAM_TR_DEFAULT = -1
 * 
 * cdef enum: CU_DEVICE_CPU = -1             # <<<<<<<<<<<<<<
 * 
 * cdef enum: CU_DEVICE_INVALID = -2
 */
enum  {
  __pyx_e_4cuda_5ccuda_CU_DEVICE_CPU = -1L
};

/* "cuda/ccuda.pxd":2371
 * cdef enum: CU_DEVICE_CPU = -1
 * 
 * cdef enum: CU_DEVICE_INVALID = -2             # <<<<<<<<<<<<<<
 */
enum  {
  __pyx_e_4cuda_5ccuda_CU_DEVICE_INVALID = -2L
};

/* "cuda/ccuda.pxd":26
 *     cdef struct CUctx_st:
 *         pass
 * ctypedef CUctx_st* CUcontext             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "":
 */
typedef struct CUctx_st *__pyx_t_4cuda_5ccuda_CUcontext;

/* "cuda/ccuda.pxd":31
 *     cdef struct CUmod_st:
 *         pass
 * ctypedef CUmod_st* CUmodule             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "":
 */
typedef struct CUmod_st *__pyx_t_4cuda_5ccuda_CUmodule;

/* "cuda/ccuda.pxd":36
 *     cdef struct CUfunc_st:
 *         pass
 * ctypedef CUfunc_st* CUfunction             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "":
 */
typedef struct CUfunc_st *__pyx_t_4cuda_5ccuda_CUfunction;

/* "cuda/ccuda.pxd":41
 *     cdef struct CUarray_st:
 *         pass
 * ctypedef CUarray_st* CUarray             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "":
 */
typedef struct CUarray_st *__pyx_t_4cuda_5ccuda_CUarray;

/* "cuda/ccuda.pxd":46
 *     cdef struct CUmipmappedArray_st:
 *         pass
 * ctypedef CUmipmappedArray_st* CUmipmappedArray             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "":
 */
typedef struct CUmipmappedArray_st *__pyx_t_4cuda_5ccuda_CUmipmappedArray;

/* "cuda/ccuda.pxd":51
 *     cdef struct CUtexref_st:
 *         pass
 * ctypedef CUtexref_st* CUtexref             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "":
 */
typedef struct CUtexref_st *__pyx_t_4cuda_5ccuda_CUtexref;

/* "cuda/ccuda.pxd":56
 *     cdef struct CUsurfref_st:
 *         pass
 * ctypedef CUsurfref_st* CUsurfref             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "":
 */
typedef struct CUsurfref_st *__pyx_t_4cuda_5ccuda_CUsurfref;

/* "cuda/ccuda.pxd":61
 *     cdef struct CUevent_st:
 *         pass
 * ctypedef CUevent_st* CUevent             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "":
 */
typedef struct CUevent_st *__pyx_t_4cuda_5ccuda_CUevent;

/* "cuda/ccuda.pxd":66
 *     cdef struct CUstream_st:
 *         pass
 * ctypedef CUstream_st* CUstream             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "":
 */
typedef struct CUstream_st *__pyx_t_4cuda_5ccuda_CUstream;

/* "cuda/ccuda.pxd":71
 *     cdef struct CUgraphicsResource_st:
 *         pass
 * ctypedef CUgraphicsResource_st* CUgraphicsResource             # <<<<<<<<<<<<<<
 * 
 * ctypedef unsigned long long CUtexObject_v1
 */
typedef struct CUgraphicsResource_st *__pyx_t_4cuda_5ccuda_CUgraphicsResource;

/* "cuda/ccuda.pxd":84
 *     cdef struct CUextMemory_st:
 *         pass
 * ctypedef CUextMemory_st* CUexternalMemory             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "":
 */
typedef struct CUextMemory_st *__pyx_t_4cuda_5ccuda_CUexternalMemory;

/* "cuda/ccuda.pxd":89
 *     cdef struct CUextSemaphore_st:
 *         pass
 * ctypedef CUextSemaphore_st* CUexternalSemaphore             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "":
 */
typedef struct CUextSemaphore_st *__pyx_t_4cuda_5ccuda_CUexternalSemaphore;

/* "cuda/ccuda.pxd":94
 *     cdef struct CUgraph_st:
 *         pass
 * ctypedef CUgraph_st* CUgraph             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "":
 */
typedef struct CUgraph_st *__pyx_t_4cuda_5ccuda_CUgraph;

/* "cuda/ccuda.pxd":99
 *     cdef struct CUgraphNode_st:
 *         pass
 * ctypedef CUgraphNode_st* CUgraphNode             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "":
 */
typedef struct CUgraphNode_st *__pyx_t_4cuda_5ccuda_CUgraphNode;

/* "cuda/ccuda.pxd":104
 *     cdef struct CUgraphExec_st:
 *         pass
 * ctypedef CUgraphExec_st* CUgraphExec             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "":
 */
typedef struct CUgraphExec_st *__pyx_t_4cuda_5ccuda_CUgraphExec;

/* "cuda/ccuda.pxd":109
 *     cdef struct CUmemPoolHandle_st:
 *         pass
 * ctypedef CUmemPoolHandle_st* CUmemoryPool             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "":
 */
typedef struct CUmemPoolHandle_st *__pyx_t_4cuda_5ccuda_CUmemoryPool;

/* "cuda/ccuda.pxd":114
 *     cdef struct CUuserObject_st:
 *         pass
 * ctypedef CUuserObject_st* CUuserObject             # <<<<<<<<<<<<<<
 * 
 * cdef struct CUuuid_st:
 */
typedef struct CUuserObject_st *__pyx_t_4cuda_5ccuda_CUuserObject;

/* "cuda/ccuda.pxd":116
 * ctypedef CUuserObject_st* CUuserObject
 * 
 * cdef struct CUuuid_st:             # <<<<<<<<<<<<<<
 *     char bytes[16]
 * 
 */
struct __pyx_t_4cuda_5ccuda_CUuuid_st {
  char bytes[16];
};

/* "cuda/ccuda.pxd":119
 *     char bytes[16]
 * 
 * ctypedef CUuuid_st CUuuid             # <<<<<<<<<<<<<<
 * 
 * cdef struct CUipcEventHandle_st:
 */
typedef struct __pyx_t_4cuda_5ccuda_CUuuid_st __pyx_t_4cuda_5ccuda_CUuuid;

/* "cuda/ccuda.pxd":121
 * ctypedef CUuuid_st CUuuid
 * 
 * cdef struct CUipcEventHandle_st:             # <<<<<<<<<<<<<<
 *     char reserved[64]
 * 
 */
struct __pyx_t_4cuda_5ccuda_CUipcEventHandle_st {
  char reserved[64];
};

/* "cuda/ccuda.pxd":124
 *     char reserved[64]
 * 
 * ctypedef CUipcEventHandle_st CUipcEventHandle_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUipcEventHandle_v1 CUipcEventHandle
 */
typedef struct __pyx_t_4cuda_5ccuda_CUipcEventHandle_st __pyx_t_4cuda_5ccuda_CUipcEventHandle_v1;

/* "cuda/ccuda.pxd":126
 * ctypedef CUipcEventHandle_st CUipcEventHandle_v1
 * 
 * ctypedef CUipcEventHandle_v1 CUipcEventHandle             # <<<<<<<<<<<<<<
 * 
 * cdef struct CUipcMemHandle_st:
 */
typedef __pyx_t_4cuda_5ccuda_CUipcEventHandle_v1 __pyx_t_4cuda_5ccuda_CUipcEventHandle;

/* "cuda/ccuda.pxd":128
 * ctypedef CUipcEventHandle_v1 CUipcEventHandle
 * 
 * cdef struct CUipcMemHandle_st:             # <<<<<<<<<<<<<<
 *     char reserved[64]
 * 
 */
struct __pyx_t_4cuda_5ccuda_CUipcMemHandle_st {
  char reserved[64];
};

/* "cuda/ccuda.pxd":131
 *     char reserved[64]
 * 
 * ctypedef CUipcMemHandle_st CUipcMemHandle_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUipcMemHandle_v1 CUipcMemHandle
 */
typedef struct __pyx_t_4cuda_5ccuda_CUipcMemHandle_st __pyx_t_4cuda_5ccuda_CUipcMemHandle_v1;

/* "cuda/ccuda.pxd":133
 * ctypedef CUipcMemHandle_st CUipcMemHandle_v1
 * 
 * ctypedef CUipcMemHandle_v1 CUipcMemHandle             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUipcMem_flags_enum:
 */
typedef __pyx_t_4cuda_5ccuda_CUipcMemHandle_v1 __pyx_t_4cuda_5ccuda_CUipcMemHandle;

/* "cuda/ccuda.pxd":138
 *     CU_IPC_MEM_LAZY_ENABLE_PEER_ACCESS = 0x1
 * 
 * ctypedef CUipcMem_flags_enum CUipcMem_flags             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUmemAttach_flags_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUipcMem_flags_enum __pyx_t_4cuda_5ccuda_CUipcMem_flags;

/* "cuda/ccuda.pxd":145
 *     CU_MEM_ATTACH_SINGLE = 0x4
 * 
 * ctypedef CUmemAttach_flags_enum CUmemAttach_flags             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUctx_flags_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUmemAttach_flags_enum __pyx_t_4cuda_5ccuda_CUmemAttach_flags;

/* "cuda/ccuda.pxd":158
 *     CU_CTX_FLAGS_MASK = 0x1f
 * 
 * ctypedef CUctx_flags_enum CUctx_flags             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUstream_flags_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUctx_flags_enum __pyx_t_4cuda_5ccuda_CUctx_flags;

/* "cuda/ccuda.pxd":164
 *     CU_STREAM_NON_BLOCKING = 0x1
 * 
 * ctypedef CUstream_flags_enum CUstream_flags             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUevent_flags_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUstream_flags_enum __pyx_t_4cuda_5ccuda_CUstream_flags;

/* "cuda/ccuda.pxd":172
 *     CU_EVENT_INTERPROCESS = 0x4
 * 
 * ctypedef CUevent_flags_enum CUevent_flags             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUevent_record_flags_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUevent_flags_enum __pyx_t_4cuda_5ccuda_CUevent_flags;

/* "cuda/ccuda.pxd":178
 *     CU_EVENT_RECORD_EXTERNAL = 0x1
 * 
 * ctypedef CUevent_record_flags_enum CUevent_record_flags             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUevent_wait_flags_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUevent_record_flags_enum __pyx_t_4cuda_5ccuda_CUevent_record_flags;

/* "cuda/ccuda.pxd":184
 *     CU_EVENT_WAIT_EXTERNAL = 0x1
 * 
 * ctypedef CUevent_wait_flags_enum CUevent_wait_flags             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUstreamWaitValue_flags_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUevent_wait_flags_enum __pyx_t_4cuda_5ccuda_CUevent_wait_flags;

/* "cuda/ccuda.pxd":193
 *     CU_STREAM_WAIT_VALUE_FLUSH = 1<<30
 * 
 * ctypedef CUstreamWaitValue_flags_enum CUstreamWaitValue_flags             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUstreamWriteValue_flags_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUstreamWaitValue_flags_enum __pyx_t_4cuda_5ccuda_CUstreamWaitValue_flags;

/* "cuda/ccuda.pxd":199
 *     CU_STREAM_WRITE_VALUE_NO_MEMORY_BARRIER = 0x1
 * 
 * ctypedef CUstreamWriteValue_flags_enum CUstreamWriteValue_flags             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUstreamBatchMemOpType_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUstreamWriteValue_flags_enum __pyx_t_4cuda_5ccuda_CUstreamWriteValue_flags;

/* "cuda/ccuda.pxd":208
 *     CU_STREAM_MEM_OP_FLUSH_REMOTE_WRITES = 3
 * 
 * ctypedef CUstreamBatchMemOpType_enum CUstreamBatchMemOpType             # <<<<<<<<<<<<<<
 * 
 * cdef struct CUstreamMemOpWaitValueParams_st:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUstreamBatchMemOpType_enum __pyx_t_4cuda_5ccuda_CUstreamBatchMemOpType;

/* "cuda/ccuda.pxd":210
 * ctypedef CUstreamBatchMemOpType_enum CUstreamBatchMemOpType
 * 
 * cdef struct CUstreamMemOpWaitValueParams_st:             # <<<<<<<<<<<<<<
 *     CUstreamBatchMemOpType operation
 *     CUdeviceptr address
 */
struct __pyx_t_4cuda_5ccuda_CUstreamMemOpWaitValueParams_st {
  __pyx_t_4cuda_5ccuda_CUstreamBatchMemOpType operation;
  __pyx_t_4cuda_5ccuda_CUdeviceptr address;
  __pyx_t_4cuda_5ccuda_cuuint64_t value64;
  unsigned int flags;
  __pyx_t_4cuda_5ccuda_CUdeviceptr alias;
};

/* "cuda/ccuda.pxd":217
 *     CUdeviceptr alias
 * 
 * cdef struct CUstreamMemOpWriteValueParams_st:             # <<<<<<<<<<<<<<
 *     CUstreamBatchMemOpType operation
 *     CUdeviceptr address
 */
struct __pyx_t_4cuda_5ccuda_CUstreamMemOpWriteValueParams_st {
  __pyx_t_4cuda_5ccuda_CUstreamBatchMemOpType operation;
  __pyx_t_4cuda_5ccuda_CUdeviceptr address;
  __pyx_t_4cuda_5ccuda_cuuint64_t value64;
  unsigned int flags;
  __pyx_t_4cuda_5ccuda_CUdeviceptr alias;
};

/* "cuda/ccuda.pxd":224
 *     CUdeviceptr alias
 * 
 * cdef struct CUstreamMemOpFlushRemoteWritesParams_st:             # <<<<<<<<<<<<<<
 *     CUstreamBatchMemOpType operation
 *     unsigned int flags
 */
struct __pyx_t_4cuda_5ccuda_CUstreamMemOpFlushRemoteWritesParams_st {
  __pyx_t_4cuda_5ccuda_CUstreamBatchMemOpType operation;
  unsigned int flags;
};

/* "cuda/ccuda.pxd":228
 *     unsigned int flags
 * 
 * cdef union CUstreamBatchMemOpParams_union:             # <<<<<<<<<<<<<<
 *     CUstreamBatchMemOpType operation
 *     CUstreamMemOpWaitValueParams_st waitValue
 */
union __pyx_t_4cuda_5ccuda_CUstreamBatchMemOpParams_union {
  __pyx_t_4cuda_5ccuda_CUstreamBatchMemOpType operation;
  struct __pyx_t_4cuda_5ccuda_CUstreamMemOpWaitValueParams_st waitValue;
  struct __pyx_t_4cuda_5ccuda_CUstreamMemOpWriteValueParams_st writeValue;
  struct __pyx_t_4cuda_5ccuda_CUstreamMemOpFlushRemoteWritesParams_st flushRemoteWrites;
  __pyx_t_4cuda_5ccuda_cuuint64_t pad[6];
};

/* "cuda/ccuda.pxd":235
 *     cuuint64_t pad[6]
 * 
 * ctypedef CUstreamBatchMemOpParams_union CUstreamBatchMemOpParams_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUstreamBatchMemOpParams_v1 CUstreamBatchMemOpParams
 */
typedef union __pyx_t_4cuda_5ccuda_CUstreamBatchMemOpParams_union __pyx_t_4cuda_5ccuda_CUstreamBatchMemOpParams_v1;

/* "cuda/ccuda.pxd":237
 * ctypedef CUstreamBatchMemOpParams_union CUstreamBatchMemOpParams_v1
 * 
 * ctypedef CUstreamBatchMemOpParams_v1 CUstreamBatchMemOpParams             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUoccupancy_flags_enum:
 */
typedef __pyx_t_4cuda_5ccuda_CUstreamBatchMemOpParams_v1 __pyx_t_4cuda_5ccuda_CUstreamBatchMemOpParams;

/* "cuda/ccuda.pxd":243
 *     CU_OCCUPANCY_DISABLE_CACHING_OVERRIDE = 0x1
 * 
 * ctypedef CUoccupancy_flags_enum CUoccupancy_flags             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUstreamUpdateCaptureDependencies_flags_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUoccupancy_flags_enum __pyx_t_4cuda_5ccuda_CUoccupancy_flags;

/* "cuda/ccuda.pxd":249
 *     CU_STREAM_SET_CAPTURE_DEPENDENCIES = 0x1
 * 
 * ctypedef CUstreamUpdateCaptureDependencies_flags_enum CUstreamUpdateCaptureDependencies_flags             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUarray_format_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUstreamUpdateCaptureDependencies_flags_enum __pyx_t_4cuda_5ccuda_CUstreamUpdateCaptureDependencies_flags;

/* "cuda/ccuda.pxd":288
 *     CU_AD_FORMAT_BC7_UNORM_SRGB = 0x9e
 * 
 * ctypedef CUarray_format_enum CUarray_format             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUaddress_mode_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUarray_format_enum __pyx_t_4cuda_5ccuda_CUarray_format;

/* "cuda/ccuda.pxd":296
 *     CU_TR_ADDRESS_MODE_BORDER = 3
 * 
 * ctypedef CUaddress_mode_enum CUaddress_mode             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUfilter_mode_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUaddress_mode_enum __pyx_t_4cuda_5ccuda_CUaddress_mode;

/* "cuda/ccuda.pxd":302
 *     CU_TR_FILTER_MODE_LINEAR = 1
 * 
 * ctypedef CUfilter_mode_enum CUfilter_mode             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUdevice_attribute_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUfilter_mode_enum __pyx_t_4cuda_5ccuda_CUfilter_mode;

/* "cuda/ccuda.pxd":432
 *     CU_DEVICE_ATTRIBUTE_MAX
 * 
 * ctypedef CUdevice_attribute_enum CUdevice_attribute             # <<<<<<<<<<<<<<
 * 
 * cdef struct CUdevprop_st:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUdevice_attribute_enum __pyx_t_4cuda_5ccuda_CUdevice_attribute;

/* "cuda/ccuda.pxd":434
 * ctypedef CUdevice_attribute_enum CUdevice_attribute
 * 
 * cdef struct CUdevprop_st:             # <<<<<<<<<<<<<<
 *     int maxThreadsPerBlock
 *     int maxThreadsDim[3]
 */
struct __pyx_t_4cuda_5ccuda_CUdevprop_st {
  int maxThreadsPerBlock;
  int maxThreadsDim[3];
  int maxGridSize[3];
  int sharedMemPerBlock;
  int totalConstantMemory;
  int SIMDWidth;
  int memPitch;
  int regsPerBlock;
  int clockRate;
  int textureAlign;
};

/* "cuda/ccuda.pxd":446
 *     int textureAlign
 * 
 * ctypedef CUdevprop_st CUdevprop_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUdevprop_v1 CUdevprop
 */
typedef struct __pyx_t_4cuda_5ccuda_CUdevprop_st __pyx_t_4cuda_5ccuda_CUdevprop_v1;

/* "cuda/ccuda.pxd":448
 * ctypedef CUdevprop_st CUdevprop_v1
 * 
 * ctypedef CUdevprop_v1 CUdevprop             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUpointer_attribute_enum:
 */
typedef __pyx_t_4cuda_5ccuda_CUdevprop_v1 __pyx_t_4cuda_5ccuda_CUdevprop;

/* "cuda/ccuda.pxd":469
 *     CU_POINTER_ATTRIBUTE_MEMPOOL_HANDLE = 17
 * 
 * ctypedef CUpointer_attribute_enum CUpointer_attribute             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUfunction_attribute_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUpointer_attribute_enum __pyx_t_4cuda_5ccuda_CUpointer_attribute;

/* "cuda/ccuda.pxd":484
 *     CU_FUNC_ATTRIBUTE_MAX
 * 
 * ctypedef CUfunction_attribute_enum CUfunction_attribute             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUfunc_cache_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUfunction_attribute_enum __pyx_t_4cuda_5ccuda_CUfunction_attribute;

/* "cuda/ccuda.pxd":492
 *     CU_FUNC_CACHE_PREFER_EQUAL = 0x03
 * 
 * ctypedef CUfunc_cache_enum CUfunc_cache             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUsharedconfig_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUfunc_cache_enum __pyx_t_4cuda_5ccuda_CUfunc_cache;

/* "cuda/ccuda.pxd":499
 *     CU_SHARED_MEM_CONFIG_EIGHT_BYTE_BANK_SIZE = 0x02
 * 
 * ctypedef CUsharedconfig_enum CUsharedconfig             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUshared_carveout_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUsharedconfig_enum __pyx_t_4cuda_5ccuda_CUsharedconfig;

/* "cuda/ccuda.pxd":506
 *     CU_SHAREDMEM_CARVEOUT_MAX_L1 = 0
 * 
 * ctypedef CUshared_carveout_enum CUshared_carveout             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUmemorytype_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUshared_carveout_enum __pyx_t_4cuda_5ccuda_CUshared_carveout;

/* "cuda/ccuda.pxd":514
 *     CU_MEMORYTYPE_UNIFIED = 0x04
 * 
 * ctypedef CUmemorytype_enum CUmemorytype             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUcomputemode_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUmemorytype_enum __pyx_t_4cuda_5ccuda_CUmemorytype;

/* "cuda/ccuda.pxd":521
 *     CU_COMPUTEMODE_EXCLUSIVE_PROCESS = 3
 * 
 * ctypedef CUcomputemode_enum CUcomputemode             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUmem_advise_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUcomputemode_enum __pyx_t_4cuda_5ccuda_CUcomputemode;

/* "cuda/ccuda.pxd":531
 *     CU_MEM_ADVISE_UNSET_ACCESSED_BY = 6
 * 
 * ctypedef CUmem_advise_enum CUmem_advise             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUmem_range_attribute_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUmem_advise_enum __pyx_t_4cuda_5ccuda_CUmem_advise;

/* "cuda/ccuda.pxd":539
 *     CU_MEM_RANGE_ATTRIBUTE_LAST_PREFETCH_LOCATION = 4
 * 
 * ctypedef CUmem_range_attribute_enum CUmem_range_attribute             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUjit_option_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUmem_range_attribute_enum __pyx_t_4cuda_5ccuda_CUmem_range_attribute;

/* "cuda/ccuda.pxd":569
 *     CU_JIT_NUM_OPTIONS
 * 
 * ctypedef CUjit_option_enum CUjit_option             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUjit_target_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUjit_option_enum __pyx_t_4cuda_5ccuda_CUjit_option;

/* "cuda/ccuda.pxd":590
 *     CU_TARGET_COMPUTE_86 = 86
 * 
 * ctypedef CUjit_target_enum CUjit_target             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUjit_fallback_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUjit_target_enum __pyx_t_4cuda_5ccuda_CUjit_target;

/* "cuda/ccuda.pxd":596
 *     CU_PREFER_BINARY
 * 
 * ctypedef CUjit_fallback_enum CUjit_fallback             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUjit_cacheMode_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUjit_fallback_enum __pyx_t_4cuda_5ccuda_CUjit_fallback;

/* "cuda/ccuda.pxd":603
 *     CU_JIT_CACHE_OPTION_CA
 * 
 * ctypedef CUjit_cacheMode_enum CUjit_cacheMode             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUjitInputType_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUjit_cacheMode_enum __pyx_t_4cuda_5ccuda_CUjit_cacheMode;

/* "cuda/ccuda.pxd":614
 *     CU_JIT_NUM_INPUT_TYPES
 * 
 * ctypedef CUjitInputType_enum CUjitInputType             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "":
 */
typedef enum __pyx_t_4cuda_5ccuda_CUjitInputType_enum __pyx_t_4cuda_5ccuda_CUjitInputType;

/* "cuda/ccuda.pxd":619
 *     cdef struct CUlinkState_st:
 *         pass
 * ctypedef CUlinkState_st* CUlinkState             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUgraphicsRegisterFlags_enum:
 */
typedef struct CUlinkState_st *__pyx_t_4cuda_5ccuda_CUlinkState;

/* "cuda/ccuda.pxd":628
 *     CU_GRAPHICS_REGISTER_FLAGS_TEXTURE_GATHER = 0x08
 * 
 * ctypedef CUgraphicsRegisterFlags_enum CUgraphicsRegisterFlags             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUgraphicsMapResourceFlags_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUgraphicsRegisterFlags_enum __pyx_t_4cuda_5ccuda_CUgraphicsRegisterFlags;

/* "cuda/ccuda.pxd":635
 *     CU_GRAPHICS_MAP_RESOURCE_FLAGS_WRITE_DISCARD = 0x02
 * 
 * ctypedef CUgraphicsMapResourceFlags_enum CUgraphicsMapResourceFlags             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUarray_cubemap_face_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUgraphicsMapResourceFlags_enum __pyx_t_4cuda_5ccuda_CUgraphicsMapResourceFlags;

/* "cuda/ccuda.pxd":645
 *     CU_CUBEMAP_FACE_NEGATIVE_Z = 0x05
 * 
 * ctypedef CUarray_cubemap_face_enum CUarray_cubemap_face             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUlimit_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUarray_cubemap_face_enum __pyx_t_4cuda_5ccuda_CUarray_cubemap_face;

/* "cuda/ccuda.pxd":657
 *     CU_LIMIT_MAX
 * 
 * ctypedef CUlimit_enum CUlimit             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUresourcetype_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUlimit_enum __pyx_t_4cuda_5ccuda_CUlimit;

/* "cuda/ccuda.pxd":665
 *     CU_RESOURCE_TYPE_PITCH2D = 0x03
 * 
 * ctypedef CUresourcetype_enum CUresourcetype             # <<<<<<<<<<<<<<
 * 
 * ctypedef void (*CUhostFn)(void* userData)
 */
typedef enum __pyx_t_4cuda_5ccuda_CUresourcetype_enum __pyx_t_4cuda_5ccuda_CUresourcetype;

/* "cuda/ccuda.pxd":667
 * ctypedef CUresourcetype_enum CUresourcetype
 * 
 * ctypedef void (*CUhostFn)(void* userData)             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUaccessProperty_enum:
 */
typedef void (*__pyx_t_4cuda_5ccuda_CUhostFn)(void *);

/* "cuda/ccuda.pxd":674
 *     CU_ACCESS_PROPERTY_PERSISTING = 2
 * 
 * ctypedef CUaccessProperty_enum CUaccessProperty             # <<<<<<<<<<<<<<
 * 
 * cdef struct CUaccessPolicyWindow_st:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUaccessProperty_enum __pyx_t_4cuda_5ccuda_CUaccessProperty;

/* "cuda/ccuda.pxd":676
 * ctypedef CUaccessProperty_enum CUaccessProperty
 * 
 * cdef struct CUaccessPolicyWindow_st:             # <<<<<<<<<<<<<<
 *     void* base_ptr
 *     size_t num_bytes
 */
struct __pyx_t_4cuda_5ccuda_CUaccessPolicyWindow_st {
  void *base_ptr;
  size_t num_bytes;
  float hitRatio;
  __pyx_t_4cuda_5ccuda_CUaccessProperty hitProp;
  __pyx_t_4cuda_5ccuda_CUaccessProperty missProp;
};

/* "cuda/ccuda.pxd":683
 *     CUaccessProperty missProp
 * 
 * ctypedef CUaccessPolicyWindow_st CUaccessPolicyWindow_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUaccessPolicyWindow_v1 CUaccessPolicyWindow
 */
typedef struct __pyx_t_4cuda_5ccuda_CUaccessPolicyWindow_st __pyx_t_4cuda_5ccuda_CUaccessPolicyWindow_v1;

/* "cuda/ccuda.pxd":685
 * ctypedef CUaccessPolicyWindow_st CUaccessPolicyWindow_v1
 * 
 * ctypedef CUaccessPolicyWindow_v1 CUaccessPolicyWindow             # <<<<<<<<<<<<<<
 * 
 * cdef struct CUDA_KERNEL_NODE_PARAMS_st:
 */
typedef __pyx_t_4cuda_5ccuda_CUaccessPolicyWindow_v1 __pyx_t_4cuda_5ccuda_CUaccessPolicyWindow;

/* "cuda/ccuda.pxd":687
 * ctypedef CUaccessPolicyWindow_v1 CUaccessPolicyWindow
 * 
 * cdef struct CUDA_KERNEL_NODE_PARAMS_st:             # <<<<<<<<<<<<<<
 *     CUfunction func
 *     unsigned int gridDimX
 */
struct __pyx_t_4cuda_5ccuda_CUDA_KERNEL_NODE_PARAMS_st {
  __pyx_t_4cuda_5ccuda_CUfunction func;
  unsigned int gridDimX;
  unsigned int gridDimY;
  unsigned int gridDimZ;
  unsigned int blockDimX;
  unsigned int blockDimY;
  unsigned int blockDimZ;
  unsigned int sharedMemBytes;
  void **kernelParams;
  void **extra;
};

/* "cuda/ccuda.pxd":699
 *     void** extra
 * 
 * ctypedef CUDA_KERNEL_NODE_PARAMS_st CUDA_KERNEL_NODE_PARAMS_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUDA_KERNEL_NODE_PARAMS_v1 CUDA_KERNEL_NODE_PARAMS
 */
typedef struct __pyx_t_4cuda_5ccuda_CUDA_KERNEL_NODE_PARAMS_st __pyx_t_4cuda_5ccuda_CUDA_KERNEL_NODE_PARAMS_v1;

/* "cuda/ccuda.pxd":701
 * ctypedef CUDA_KERNEL_NODE_PARAMS_st CUDA_KERNEL_NODE_PARAMS_v1
 * 
 * ctypedef CUDA_KERNEL_NODE_PARAMS_v1 CUDA_KERNEL_NODE_PARAMS             # <<<<<<<<<<<<<<
 * 
 * cdef struct CUDA_MEMSET_NODE_PARAMS_st:
 */
typedef __pyx_t_4cuda_5ccuda_CUDA_KERNEL_NODE_PARAMS_v1 __pyx_t_4cuda_5ccuda_CUDA_KERNEL_NODE_PARAMS;

/* "cuda/ccuda.pxd":703
 * ctypedef CUDA_KERNEL_NODE_PARAMS_v1 CUDA_KERNEL_NODE_PARAMS
 * 
 * cdef struct CUDA_MEMSET_NODE_PARAMS_st:             # <<<<<<<<<<<<<<
 *     CUdeviceptr dst
 *     size_t pitch
 */
struct __pyx_t_4cuda_5ccuda_CUDA_MEMSET_NODE_PARAMS_st {
  __pyx_t_4cuda_5ccuda_CUdeviceptr dst;
  size_t pitch;
  unsigned int value;
  unsigned int elementSize;
  size_t width;
  size_t height;
};

/* "cuda/ccuda.pxd":711
 *     size_t height
 * 
 * ctypedef CUDA_MEMSET_NODE_PARAMS_st CUDA_MEMSET_NODE_PARAMS_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUDA_MEMSET_NODE_PARAMS_v1 CUDA_MEMSET_NODE_PARAMS
 */
typedef struct __pyx_t_4cuda_5ccuda_CUDA_MEMSET_NODE_PARAMS_st __pyx_t_4cuda_5ccuda_CUDA_MEMSET_NODE_PARAMS_v1;

/* "cuda/ccuda.pxd":713
 * ctypedef CUDA_MEMSET_NODE_PARAMS_st CUDA_MEMSET_NODE_PARAMS_v1
 * 
 * ctypedef CUDA_MEMSET_NODE_PARAMS_v1 CUDA_MEMSET_NODE_PARAMS             # <<<<<<<<<<<<<<
 * 
 * cdef struct CUDA_HOST_NODE_PARAMS_st:
 */
typedef __pyx_t_4cuda_5ccuda_CUDA_MEMSET_NODE_PARAMS_v1 __pyx_t_4cuda_5ccuda_CUDA_MEMSET_NODE_PARAMS;

/* "cuda/ccuda.pxd":715
 * ctypedef CUDA_MEMSET_NODE_PARAMS_v1 CUDA_MEMSET_NODE_PARAMS
 * 
 * cdef struct CUDA_HOST_NODE_PARAMS_st:             # <<<<<<<<<<<<<<
 *     CUhostFn fn
 *     void* userData
 */
struct __pyx_t_4cuda_5ccuda_CUDA_HOST_NODE_PARAMS_st {
  __pyx_t_4cuda_5ccuda_CUhostFn fn;
  void *userData;
};

/* "cuda/ccuda.pxd":719
 *     void* userData
 * 
 * ctypedef CUDA_HOST_NODE_PARAMS_st CUDA_HOST_NODE_PARAMS_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUDA_HOST_NODE_PARAMS_v1 CUDA_HOST_NODE_PARAMS
 */
typedef struct __pyx_t_4cuda_5ccuda_CUDA_HOST_NODE_PARAMS_st __pyx_t_4cuda_5ccuda_CUDA_HOST_NODE_PARAMS_v1;

/* "cuda/ccuda.pxd":721
 * ctypedef CUDA_HOST_NODE_PARAMS_st CUDA_HOST_NODE_PARAMS_v1
 * 
 * ctypedef CUDA_HOST_NODE_PARAMS_v1 CUDA_HOST_NODE_PARAMS             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUgraphNodeType_enum:
 */
typedef __pyx_t_4cuda_5ccuda_CUDA_HOST_NODE_PARAMS_v1 __pyx_t_4cuda_5ccuda_CUDA_HOST_NODE_PARAMS;

/* "cuda/ccuda.pxd":737
 *     CU_GRAPH_NODE_TYPE_MEM_FREE = 11
 * 
 * ctypedef CUgraphNodeType_enum CUgraphNodeType             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUsynchronizationPolicy_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUgraphNodeType_enum __pyx_t_4cuda_5ccuda_CUgraphNodeType;

/* "cuda/ccuda.pxd":745
 *     CU_SYNC_POLICY_BLOCKING_SYNC = 4
 * 
 * ctypedef CUsynchronizationPolicy_enum CUsynchronizationPolicy             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUkernelNodeAttrID_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUsynchronizationPolicy_enum __pyx_t_4cuda_5ccuda_CUsynchronizationPolicy;

/* "cuda/ccuda.pxd":751
 *     CU_KERNEL_NODE_ATTRIBUTE_COOPERATIVE = 2
 * 
 * ctypedef CUkernelNodeAttrID_enum CUkernelNodeAttrID             # <<<<<<<<<<<<<<
 * 
 * cdef union CUkernelNodeAttrValue_union:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUkernelNodeAttrID_enum __pyx_t_4cuda_5ccuda_CUkernelNodeAttrID;

/* "cuda/ccuda.pxd":753
 * ctypedef CUkernelNodeAttrID_enum CUkernelNodeAttrID
 * 
 * cdef union CUkernelNodeAttrValue_union:             # <<<<<<<<<<<<<<
 *     CUaccessPolicyWindow accessPolicyWindow
 *     int cooperative
 */
union __pyx_t_4cuda_5ccuda_CUkernelNodeAttrValue_union {
  __pyx_t_4cuda_5ccuda_CUaccessPolicyWindow accessPolicyWindow;
  int cooperative;
};

/* "cuda/ccuda.pxd":757
 *     int cooperative
 * 
 * ctypedef CUkernelNodeAttrValue_union CUkernelNodeAttrValue_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUkernelNodeAttrValue_v1 CUkernelNodeAttrValue
 */
typedef union __pyx_t_4cuda_5ccuda_CUkernelNodeAttrValue_union __pyx_t_4cuda_5ccuda_CUkernelNodeAttrValue_v1;

/* "cuda/ccuda.pxd":759
 * ctypedef CUkernelNodeAttrValue_union CUkernelNodeAttrValue_v1
 * 
 * ctypedef CUkernelNodeAttrValue_v1 CUkernelNodeAttrValue             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUstreamCaptureStatus_enum:
 */
typedef __pyx_t_4cuda_5ccuda_CUkernelNodeAttrValue_v1 __pyx_t_4cuda_5ccuda_CUkernelNodeAttrValue;

/* "cuda/ccuda.pxd":766
 *     CU_STREAM_CAPTURE_STATUS_INVALIDATED = 2
 * 
 * ctypedef CUstreamCaptureStatus_enum CUstreamCaptureStatus             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUstreamCaptureMode_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUstreamCaptureStatus_enum __pyx_t_4cuda_5ccuda_CUstreamCaptureStatus;

/* "cuda/ccuda.pxd":773
 *     CU_STREAM_CAPTURE_MODE_RELAXED = 2
 * 
 * ctypedef CUstreamCaptureMode_enum CUstreamCaptureMode             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUstreamAttrID_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUstreamCaptureMode_enum __pyx_t_4cuda_5ccuda_CUstreamCaptureMode;

/* "cuda/ccuda.pxd":779
 *     CU_STREAM_ATTRIBUTE_SYNCHRONIZATION_POLICY = 3
 * 
 * ctypedef CUstreamAttrID_enum CUstreamAttrID             # <<<<<<<<<<<<<<
 * 
 * cdef union CUstreamAttrValue_union:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUstreamAttrID_enum __pyx_t_4cuda_5ccuda_CUstreamAttrID;

/* "cuda/ccuda.pxd":781
 * ctypedef CUstreamAttrID_enum CUstreamAttrID
 * 
 * cdef union CUstreamAttrValue_union:             # <<<<<<<<<<<<<<
 *     CUaccessPolicyWindow accessPolicyWindow
 *     CUsynchronizationPolicy syncPolicy
 */
union __pyx_t_4cuda_5ccuda_CUstreamAttrValue_union {
  __pyx_t_4cuda_5ccuda_CUaccessPolicyWindow accessPolicyWindow;
  __pyx_t_4cuda_5ccuda_CUsynchronizationPolicy syncPolicy;
};

/* "cuda/ccuda.pxd":785
 *     CUsynchronizationPolicy syncPolicy
 * 
 * ctypedef CUstreamAttrValue_union CUstreamAttrValue_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUstreamAttrValue_v1 CUstreamAttrValue
 */
typedef union __pyx_t_4cuda_5ccuda_CUstreamAttrValue_union __pyx_t_4cuda_5ccuda_CUstreamAttrValue_v1;

/* "cuda/ccuda.pxd":787
 * ctypedef CUstreamAttrValue_union CUstreamAttrValue_v1
 * 
 * ctypedef CUstreamAttrValue_v1 CUstreamAttrValue             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUdriverProcAddress_flags_enum:
 */
typedef __pyx_t_4cuda_5ccuda_CUstreamAttrValue_v1 __pyx_t_4cuda_5ccuda_CUstreamAttrValue;

/* "cuda/ccuda.pxd":794
 *     CU_GET_PROC_ADDRESS_PER_THREAD_DEFAULT_STREAM = 1 << 1
 * 
 * ctypedef CUdriverProcAddress_flags_enum CUdriverProcAddress_flags             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUexecAffinityType_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUdriverProcAddress_flags_enum __pyx_t_4cuda_5ccuda_CUdriverProcAddress_flags;

/* "cuda/ccuda.pxd":800
 *     CU_EXEC_AFFINITY_TYPE_MAX
 * 
 * ctypedef CUexecAffinityType_enum CUexecAffinityType             # <<<<<<<<<<<<<<
 * 
 * cdef struct CUexecAffinitySmCount_st:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUexecAffinityType_enum __pyx_t_4cuda_5ccuda_CUexecAffinityType;

/* "cuda/ccuda.pxd":802
 * ctypedef CUexecAffinityType_enum CUexecAffinityType
 * 
 * cdef struct CUexecAffinitySmCount_st:             # <<<<<<<<<<<<<<
 *     unsigned int val
 * 
 */
struct __pyx_t_4cuda_5ccuda_CUexecAffinitySmCount_st {
  unsigned int val;
};

/* "cuda/ccuda.pxd":805
 *     unsigned int val
 * 
 * ctypedef CUexecAffinitySmCount_st CUexecAffinitySmCount_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUexecAffinitySmCount_v1 CUexecAffinitySmCount
 */
typedef struct __pyx_t_4cuda_5ccuda_CUexecAffinitySmCount_st __pyx_t_4cuda_5ccuda_CUexecAffinitySmCount_v1;

/* "cuda/ccuda.pxd":807
 * ctypedef CUexecAffinitySmCount_st CUexecAffinitySmCount_v1
 * 
 * ctypedef CUexecAffinitySmCount_v1 CUexecAffinitySmCount             # <<<<<<<<<<<<<<
 * 
 * cdef union _CUexecAffinityParam_v1_CUexecAffinityParam_v1_CUexecAffinityParam_st_param_u:
 */
typedef __pyx_t_4cuda_5ccuda_CUexecAffinitySmCount_v1 __pyx_t_4cuda_5ccuda_CUexecAffinitySmCount;

/* "cuda/ccuda.pxd":809
 * ctypedef CUexecAffinitySmCount_v1 CUexecAffinitySmCount
 * 
 * cdef union _CUexecAffinityParam_v1_CUexecAffinityParam_v1_CUexecAffinityParam_st_param_u:             # <<<<<<<<<<<<<<
 *     CUexecAffinitySmCount smCount
 * 
 */
union __pyx_t_4cuda_5ccuda__CUexecAffinityParam_v1_CUexecAffinityParam_v1_CUexecAffinityParam_st_param_u {
  __pyx_t_4cuda_5ccuda_CUexecAffinitySmCount smCount;
};

/* "cuda/ccuda.pxd":812
 *     CUexecAffinitySmCount smCount
 * 
 * cdef struct CUexecAffinityParam_st:             # <<<<<<<<<<<<<<
 *     CUexecAffinityType type
 *     _CUexecAffinityParam_v1_CUexecAffinityParam_v1_CUexecAffinityParam_st_param_u param
 */
struct __pyx_t_4cuda_5ccuda_CUexecAffinityParam_st {
  __pyx_t_4cuda_5ccuda_CUexecAffinityType type;
  union __pyx_t_4cuda_5ccuda__CUexecAffinityParam_v1_CUexecAffinityParam_v1_CUexecAffinityParam_st_param_u param;
};

/* "cuda/ccuda.pxd":816
 *     _CUexecAffinityParam_v1_CUexecAffinityParam_v1_CUexecAffinityParam_st_param_u param
 * 
 * ctypedef CUexecAffinityParam_st CUexecAffinityParam_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUexecAffinityParam_v1 CUexecAffinityParam
 */
typedef struct __pyx_t_4cuda_5ccuda_CUexecAffinityParam_st __pyx_t_4cuda_5ccuda_CUexecAffinityParam_v1;

/* "cuda/ccuda.pxd":818
 * ctypedef CUexecAffinityParam_st CUexecAffinityParam_v1
 * 
 * ctypedef CUexecAffinityParam_v1 CUexecAffinityParam             # <<<<<<<<<<<<<<
 * 
 * cdef enum cudaError_enum:
 */
typedef __pyx_t_4cuda_5ccuda_CUexecAffinityParam_v1 __pyx_t_4cuda_5ccuda_CUexecAffinityParam;

/* "cuda/ccuda.pxd":909
 *     CUDA_ERROR_UNKNOWN = 999
 * 
 * ctypedef cudaError_enum CUresult             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUdevice_P2PAttribute_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_cudaError_enum __pyx_t_4cuda_5ccuda_CUresult;

/* "cuda/ccuda.pxd":918
 *     CU_DEVICE_P2P_ATTRIBUTE_CUDA_ARRAY_ACCESS_SUPPORTED = 0x04
 * 
 * ctypedef CUdevice_P2PAttribute_enum CUdevice_P2PAttribute             # <<<<<<<<<<<<<<
 * 
 * ctypedef void (*CUstreamCallback)(CUstream hStream, CUresult status, void* userData)
 */
typedef enum __pyx_t_4cuda_5ccuda_CUdevice_P2PAttribute_enum __pyx_t_4cuda_5ccuda_CUdevice_P2PAttribute;

/* "cuda/ccuda.pxd":920
 * ctypedef CUdevice_P2PAttribute_enum CUdevice_P2PAttribute
 * 
 * ctypedef void (*CUstreamCallback)(CUstream hStream, CUresult status, void* userData)             # <<<<<<<<<<<<<<
 * 
 * ctypedef size_t (*CUoccupancyB2DSize)(int blockSize)
 */
typedef void (*__pyx_t_4cuda_5ccuda_CUstreamCallback)(__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUresult, void *);

/* "cuda/ccuda.pxd":922
 * ctypedef void (*CUstreamCallback)(CUstream hStream, CUresult status, void* userData)
 * 
 * ctypedef size_t (*CUoccupancyB2DSize)(int blockSize)             # <<<<<<<<<<<<<<
 * 
 * cdef struct CUDA_MEMCPY2D_st:
 */
typedef size_t (*__pyx_t_4cuda_5ccuda_CUoccupancyB2DSize)(int);

/* "cuda/ccuda.pxd":924
 * ctypedef size_t (*CUoccupancyB2DSize)(int blockSize)
 * 
 * cdef struct CUDA_MEMCPY2D_st:             # <<<<<<<<<<<<<<
 *     size_t srcXInBytes
 *     size_t srcY
 */
struct __pyx_t_4cuda_5ccuda_CUDA_MEMCPY2D_st {
  size_t srcXInBytes;
  size_t srcY;
  __pyx_t_4cuda_5ccuda_CUmemorytype srcMemoryType;
  void const *srcHost;
  __pyx_t_4cuda_5ccuda_CUdeviceptr srcDevice;
  __pyx_t_4cuda_5ccuda_CUarray srcArray;
  size_t srcPitch;
  size_t dstXInBytes;
  size_t dstY;
  __pyx_t_4cuda_5ccuda_CUmemorytype dstMemoryType;
  void *dstHost;
  __pyx_t_4cuda_5ccuda_CUdeviceptr dstDevice;
  __pyx_t_4cuda_5ccuda_CUarray dstArray;
  size_t dstPitch;
  size_t WidthInBytes;
  size_t Height;
};

/* "cuda/ccuda.pxd":942
 *     size_t Height
 * 
 * ctypedef CUDA_MEMCPY2D_st CUDA_MEMCPY2D_v2             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUDA_MEMCPY2D_v2 CUDA_MEMCPY2D
 */
typedef struct __pyx_t_4cuda_5ccuda_CUDA_MEMCPY2D_st __pyx_t_4cuda_5ccuda_CUDA_MEMCPY2D_v2;

/* "cuda/ccuda.pxd":944
 * ctypedef CUDA_MEMCPY2D_st CUDA_MEMCPY2D_v2
 * 
 * ctypedef CUDA_MEMCPY2D_v2 CUDA_MEMCPY2D             # <<<<<<<<<<<<<<
 * 
 * cdef struct CUDA_MEMCPY3D_st:
 */
typedef __pyx_t_4cuda_5ccuda_CUDA_MEMCPY2D_v2 __pyx_t_4cuda_5ccuda_CUDA_MEMCPY2D;

/* "cuda/ccuda.pxd":946
 * ctypedef CUDA_MEMCPY2D_v2 CUDA_MEMCPY2D
 * 
 * cdef struct CUDA_MEMCPY3D_st:             # <<<<<<<<<<<<<<
 *     size_t srcXInBytes
 *     size_t srcY
 */
struct __pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D_st {
  size_t srcXInBytes;
  size_t srcY;
  size_t srcZ;
  size_t srcLOD;
  __pyx_t_4cuda_5ccuda_CUmemorytype srcMemoryType;
  void const *srcHost;
  __pyx_t_4cuda_5ccuda_CUdeviceptr srcDevice;
  __pyx_t_4cuda_5ccuda_CUarray srcArray;
  void *reserved0;
  size_t srcPitch;
  size_t srcHeight;
  size_t dstXInBytes;
  size_t dstY;
  size_t dstZ;
  size_t dstLOD;
  __pyx_t_4cuda_5ccuda_CUmemorytype dstMemoryType;
  void *dstHost;
  __pyx_t_4cuda_5ccuda_CUdeviceptr dstDevice;
  __pyx_t_4cuda_5ccuda_CUarray dstArray;
  void *reserved1;
  size_t dstPitch;
  size_t dstHeight;
  size_t WidthInBytes;
  size_t Height;
  size_t Depth;
};

/* "cuda/ccuda.pxd":973
 *     size_t Depth
 * 
 * ctypedef CUDA_MEMCPY3D_st CUDA_MEMCPY3D_v2             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUDA_MEMCPY3D_v2 CUDA_MEMCPY3D
 */
typedef struct __pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D_st __pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D_v2;

/* "cuda/ccuda.pxd":975
 * ctypedef CUDA_MEMCPY3D_st CUDA_MEMCPY3D_v2
 * 
 * ctypedef CUDA_MEMCPY3D_v2 CUDA_MEMCPY3D             # <<<<<<<<<<<<<<
 * 
 * cdef struct CUDA_MEMCPY3D_PEER_st:
 */
typedef __pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D_v2 __pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D;

/* "cuda/ccuda.pxd":977
 * ctypedef CUDA_MEMCPY3D_v2 CUDA_MEMCPY3D
 * 
 * cdef struct CUDA_MEMCPY3D_PEER_st:             # <<<<<<<<<<<<<<
 *     size_t srcXInBytes
 *     size_t srcY
 */
struct __pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D_PEER_st {
  size_t srcXInBytes;
  size_t srcY;
  size_t srcZ;
  size_t srcLOD;
  __pyx_t_4cuda_5ccuda_CUmemorytype srcMemoryType;
  void const *srcHost;
  __pyx_t_4cuda_5ccuda_CUdeviceptr srcDevice;
  __pyx_t_4cuda_5ccuda_CUarray srcArray;
  __pyx_t_4cuda_5ccuda_CUcontext srcContext;
  size_t srcPitch;
  size_t srcHeight;
  size_t dstXInBytes;
  size_t dstY;
  size_t dstZ;
  size_t dstLOD;
  __pyx_t_4cuda_5ccuda_CUmemorytype dstMemoryType;
  void *dstHost;
  __pyx_t_4cuda_5ccuda_CUdeviceptr dstDevice;
  __pyx_t_4cuda_5ccuda_CUarray dstArray;
  __pyx_t_4cuda_5ccuda_CUcontext dstContext;
  size_t dstPitch;
  size_t dstHeight;
  size_t WidthInBytes;
  size_t Height;
  size_t Depth;
};

/* "cuda/ccuda.pxd":1004
 *     size_t Depth
 * 
 * ctypedef CUDA_MEMCPY3D_PEER_st CUDA_MEMCPY3D_PEER_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUDA_MEMCPY3D_PEER_v1 CUDA_MEMCPY3D_PEER
 */
typedef struct __pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D_PEER_st __pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D_PEER_v1;

/* "cuda/ccuda.pxd":1006
 * ctypedef CUDA_MEMCPY3D_PEER_st CUDA_MEMCPY3D_PEER_v1
 * 
 * ctypedef CUDA_MEMCPY3D_PEER_v1 CUDA_MEMCPY3D_PEER             # <<<<<<<<<<<<<<
 * 
 * cdef struct CUDA_ARRAY_DESCRIPTOR_st:
 */
typedef __pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D_PEER_v1 __pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D_PEER;

/* "cuda/ccuda.pxd":1008
 * ctypedef CUDA_MEMCPY3D_PEER_v1 CUDA_MEMCPY3D_PEER
 * 
 * cdef struct CUDA_ARRAY_DESCRIPTOR_st:             # <<<<<<<<<<<<<<
 *     size_t Width
 *     size_t Height
 */
struct __pyx_t_4cuda_5ccuda_CUDA_ARRAY_DESCRIPTOR_st {
  size_t Width;
  size_t Height;
  __pyx_t_4cuda_5ccuda_CUarray_format Format;
  unsigned int NumChannels;
};

/* "cuda/ccuda.pxd":1014
 *     unsigned int NumChannels
 * 
 * ctypedef CUDA_ARRAY_DESCRIPTOR_st CUDA_ARRAY_DESCRIPTOR_v2             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUDA_ARRAY_DESCRIPTOR_v2 CUDA_ARRAY_DESCRIPTOR
 */
typedef struct __pyx_t_4cuda_5ccuda_CUDA_ARRAY_DESCRIPTOR_st __pyx_t_4cuda_5ccuda_CUDA_ARRAY_DESCRIPTOR_v2;

/* "cuda/ccuda.pxd":1016
 * ctypedef CUDA_ARRAY_DESCRIPTOR_st CUDA_ARRAY_DESCRIPTOR_v2
 * 
 * ctypedef CUDA_ARRAY_DESCRIPTOR_v2 CUDA_ARRAY_DESCRIPTOR             # <<<<<<<<<<<<<<
 * 
 * cdef struct CUDA_ARRAY3D_DESCRIPTOR_st:
 */
typedef __pyx_t_4cuda_5ccuda_CUDA_ARRAY_DESCRIPTOR_v2 __pyx_t_4cuda_5ccuda_CUDA_ARRAY_DESCRIPTOR;

/* "cuda/ccuda.pxd":1018
 * ctypedef CUDA_ARRAY_DESCRIPTOR_v2 CUDA_ARRAY_DESCRIPTOR
 * 
 * cdef struct CUDA_ARRAY3D_DESCRIPTOR_st:             # <<<<<<<<<<<<<<
 *     size_t Width
 *     size_t Height
 */
struct __pyx_t_4cuda_5ccuda_CUDA_ARRAY3D_DESCRIPTOR_st {
  size_t Width;
  size_t Height;
  size_t Depth;
  __pyx_t_4cuda_5ccuda_CUarray_format Format;
  unsigned int NumChannels;
  unsigned int Flags;
};

/* "cuda/ccuda.pxd":1026
 *     unsigned int Flags
 * 
 * ctypedef CUDA_ARRAY3D_DESCRIPTOR_st CUDA_ARRAY3D_DESCRIPTOR_v2             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUDA_ARRAY3D_DESCRIPTOR_v2 CUDA_ARRAY3D_DESCRIPTOR
 */
typedef struct __pyx_t_4cuda_5ccuda_CUDA_ARRAY3D_DESCRIPTOR_st __pyx_t_4cuda_5ccuda_CUDA_ARRAY3D_DESCRIPTOR_v2;

/* "cuda/ccuda.pxd":1028
 * ctypedef CUDA_ARRAY3D_DESCRIPTOR_st CUDA_ARRAY3D_DESCRIPTOR_v2
 * 
 * ctypedef CUDA_ARRAY3D_DESCRIPTOR_v2 CUDA_ARRAY3D_DESCRIPTOR             # <<<<<<<<<<<<<<
 * 
 * cdef struct _CUDA_ARRAY_SPARSE_PROPERTIES_v1_CUDA_ARRAY_SPARSE_PROPERTIES_v1_CUDA_ARRAY_SPARSE_PROPERTIES_st_tileExtent_s:
 */
typedef __pyx_t_4cuda_5ccuda_CUDA_ARRAY3D_DESCRIPTOR_v2 __pyx_t_4cuda_5ccuda_CUDA_ARRAY3D_DESCRIPTOR;

/* "cuda/ccuda.pxd":1030
 * ctypedef CUDA_ARRAY3D_DESCRIPTOR_v2 CUDA_ARRAY3D_DESCRIPTOR
 * 
 * cdef struct _CUDA_ARRAY_SPARSE_PROPERTIES_v1_CUDA_ARRAY_SPARSE_PROPERTIES_v1_CUDA_ARRAY_SPARSE_PROPERTIES_st_tileExtent_s:             # <<<<<<<<<<<<<<
 *     unsigned int width
 *     unsigned int height
 */
struct __pyx_t_4cuda_5ccuda__CUDA_ARRAY_SPARSE_PROPERTIES_v1_CUDA_ARRAY_SPARSE_PROPERTIES_v1_CUDA_ARRAY_SPARSE_PROPERTIES_st_tileExtent_s {
  unsigned int width;
  unsigned int height;
  unsigned int depth;
};

/* "cuda/ccuda.pxd":1035
 *     unsigned int depth
 * 
 * cdef struct CUDA_ARRAY_SPARSE_PROPERTIES_st:             # <<<<<<<<<<<<<<
 *     _CUDA_ARRAY_SPARSE_PROPERTIES_v1_CUDA_ARRAY_SPARSE_PROPERTIES_v1_CUDA_ARRAY_SPARSE_PROPERTIES_st_tileExtent_s tileExtent
 *     unsigned int miptailFirstLevel
 */
struct __pyx_t_4cuda_5ccuda_CUDA_ARRAY_SPARSE_PROPERTIES_st {
  struct __pyx_t_4cuda_5ccuda__CUDA_ARRAY_SPARSE_PROPERTIES_v1_CUDA_ARRAY_SPARSE_PROPERTIES_v1_CUDA_ARRAY_SPARSE_PROPERTIES_st_tileExtent_s tileExtent;
  unsigned int miptailFirstLevel;
  unsigned PY_LONG_LONG miptailSize;
  unsigned int flags;
  unsigned int reserved[4];
};

/* "cuda/ccuda.pxd":1042
 *     unsigned int reserved[4]
 * 
 * ctypedef CUDA_ARRAY_SPARSE_PROPERTIES_st CUDA_ARRAY_SPARSE_PROPERTIES_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUDA_ARRAY_SPARSE_PROPERTIES_v1 CUDA_ARRAY_SPARSE_PROPERTIES
 */
typedef struct __pyx_t_4cuda_5ccuda_CUDA_ARRAY_SPARSE_PROPERTIES_st __pyx_t_4cuda_5ccuda_CUDA_ARRAY_SPARSE_PROPERTIES_v1;

/* "cuda/ccuda.pxd":1044
 * ctypedef CUDA_ARRAY_SPARSE_PROPERTIES_st CUDA_ARRAY_SPARSE_PROPERTIES_v1
 * 
 * ctypedef CUDA_ARRAY_SPARSE_PROPERTIES_v1 CUDA_ARRAY_SPARSE_PROPERTIES             # <<<<<<<<<<<<<<
 * 
 * cdef struct _CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_st_res_res_array_s:
 */
typedef __pyx_t_4cuda_5ccuda_CUDA_ARRAY_SPARSE_PROPERTIES_v1 __pyx_t_4cuda_5ccuda_CUDA_ARRAY_SPARSE_PROPERTIES;

/* "cuda/ccuda.pxd":1046
 * ctypedef CUDA_ARRAY_SPARSE_PROPERTIES_v1 CUDA_ARRAY_SPARSE_PROPERTIES
 * 
 * cdef struct _CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_st_res_res_array_s:             # <<<<<<<<<<<<<<
 *     CUarray hArray
 * 
 */
struct __pyx_t_4cuda_5ccuda__CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_st_res_res_array_s {
  __pyx_t_4cuda_5ccuda_CUarray hArray;
};

/* "cuda/ccuda.pxd":1049
 *     CUarray hArray
 * 
 * cdef struct _CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_st_res_res_mipmap_s:             # <<<<<<<<<<<<<<
 *     CUmipmappedArray hMipmappedArray
 * 
 */
struct __pyx_t_4cuda_5ccuda__CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_st_res_res_mipmap_s {
  __pyx_t_4cuda_5ccuda_CUmipmappedArray hMipmappedArray;
};

/* "cuda/ccuda.pxd":1052
 *     CUmipmappedArray hMipmappedArray
 * 
 * cdef struct _CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_st_res_res_linear_s:             # <<<<<<<<<<<<<<
 *     CUdeviceptr devPtr
 *     CUarray_format format
 */
struct __pyx_t_4cuda_5ccuda__CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_st_res_res_linear_s {
  __pyx_t_4cuda_5ccuda_CUdeviceptr devPtr;
  __pyx_t_4cuda_5ccuda_CUarray_format format;
  unsigned int numChannels;
  size_t sizeInBytes;
};

/* "cuda/ccuda.pxd":1058
 *     size_t sizeInBytes
 * 
 * cdef struct _CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_st_res_res_pitch2D_s:             # <<<<<<<<<<<<<<
 *     CUdeviceptr devPtr
 *     CUarray_format format
 */
struct __pyx_t_4cuda_5ccuda__CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_st_res_res_pitch2D_s {
  __pyx_t_4cuda_5ccuda_CUdeviceptr devPtr;
  __pyx_t_4cuda_5ccuda_CUarray_format format;
  unsigned int numChannels;
  size_t width;
  size_t height;
  size_t pitchInBytes;
};

/* "cuda/ccuda.pxd":1066
 *     size_t pitchInBytes
 * 
 * cdef struct _CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_st_res_res_reserved_s:             # <<<<<<<<<<<<<<
 *     int reserved[32]
 * 
 */
struct __pyx_t_4cuda_5ccuda__CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_st_res_res_reserved_s {
  int reserved[32];
};

/* "cuda/ccuda.pxd":1069
 *     int reserved[32]
 * 
 * cdef union _CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_st_res_u:             # <<<<<<<<<<<<<<
 *     _CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_st_res_res_array_s array
 *     _CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_st_res_res_mipmap_s mipmap
 */
union __pyx_t_4cuda_5ccuda__CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_st_res_u {
  struct __pyx_t_4cuda_5ccuda__CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_st_res_res_array_s array;
  struct __pyx_t_4cuda_5ccuda__CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_st_res_res_mipmap_s mipmap;
  struct __pyx_t_4cuda_5ccuda__CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_st_res_res_linear_s linear;
  struct __pyx_t_4cuda_5ccuda__CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_st_res_res_pitch2D_s pitch2D;
  struct __pyx_t_4cuda_5ccuda__CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_st_res_res_reserved_s reserved;
};

/* "cuda/ccuda.pxd":1076
 *     _CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_st_res_res_reserved_s reserved
 * 
 * cdef struct CUDA_RESOURCE_DESC_st:             # <<<<<<<<<<<<<<
 *     CUresourcetype resType
 *     _CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_st_res_u res
 */
struct __pyx_t_4cuda_5ccuda_CUDA_RESOURCE_DESC_st {
  __pyx_t_4cuda_5ccuda_CUresourcetype resType;
  union __pyx_t_4cuda_5ccuda__CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_v1_CUDA_RESOURCE_DESC_st_res_u res;
  unsigned int flags;
};

/* "cuda/ccuda.pxd":1081
 *     unsigned int flags
 * 
 * ctypedef CUDA_RESOURCE_DESC_st CUDA_RESOURCE_DESC_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUDA_RESOURCE_DESC_v1 CUDA_RESOURCE_DESC
 */
typedef struct __pyx_t_4cuda_5ccuda_CUDA_RESOURCE_DESC_st __pyx_t_4cuda_5ccuda_CUDA_RESOURCE_DESC_v1;

/* "cuda/ccuda.pxd":1083
 * ctypedef CUDA_RESOURCE_DESC_st CUDA_RESOURCE_DESC_v1
 * 
 * ctypedef CUDA_RESOURCE_DESC_v1 CUDA_RESOURCE_DESC             # <<<<<<<<<<<<<<
 * 
 * cdef struct CUDA_TEXTURE_DESC_st:
 */
typedef __pyx_t_4cuda_5ccuda_CUDA_RESOURCE_DESC_v1 __pyx_t_4cuda_5ccuda_CUDA_RESOURCE_DESC;

/* "cuda/ccuda.pxd":1085
 * ctypedef CUDA_RESOURCE_DESC_v1 CUDA_RESOURCE_DESC
 * 
 * cdef struct CUDA_TEXTURE_DESC_st:             # <<<<<<<<<<<<<<
 *     CUaddress_mode addressMode[3]
 *     CUfilter_mode filterMode
 */
struct __pyx_t_4cuda_5ccuda_CUDA_TEXTURE_DESC_st {
  __pyx_t_4cuda_5ccuda_CUaddress_mode addressMode[3];
  __pyx_t_4cuda_5ccuda_CUfilter_mode filterMode;
  unsigned int flags;
  unsigned int maxAnisotropy;
  __pyx_t_4cuda_5ccuda_CUfilter_mode mipmapFilterMode;
  float mipmapLevelBias;
  float minMipmapLevelClamp;
  float maxMipmapLevelClamp;
  float borderColor[4];
  int reserved[12];
};

/* "cuda/ccuda.pxd":1097
 *     int reserved[12]
 * 
 * ctypedef CUDA_TEXTURE_DESC_st CUDA_TEXTURE_DESC_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUDA_TEXTURE_DESC_v1 CUDA_TEXTURE_DESC
 */
typedef struct __pyx_t_4cuda_5ccuda_CUDA_TEXTURE_DESC_st __pyx_t_4cuda_5ccuda_CUDA_TEXTURE_DESC_v1;

/* "cuda/ccuda.pxd":1099
 * ctypedef CUDA_TEXTURE_DESC_st CUDA_TEXTURE_DESC_v1
 * 
 * ctypedef CUDA_TEXTURE_DESC_v1 CUDA_TEXTURE_DESC             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUresourceViewFormat_enum:
 */
typedef __pyx_t_4cuda_5ccuda_CUDA_TEXTURE_DESC_v1 __pyx_t_4cuda_5ccuda_CUDA_TEXTURE_DESC;

/* "cuda/ccuda.pxd":1138
 *     CU_RES_VIEW_FORMAT_UNSIGNED_BC7 = 0x22
 * 
 * ctypedef CUresourceViewFormat_enum CUresourceViewFormat             # <<<<<<<<<<<<<<
 * 
 * cdef struct CUDA_RESOURCE_VIEW_DESC_st:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUresourceViewFormat_enum __pyx_t_4cuda_5ccuda_CUresourceViewFormat;

/* "cuda/ccuda.pxd":1140
 * ctypedef CUresourceViewFormat_enum CUresourceViewFormat
 * 
 * cdef struct CUDA_RESOURCE_VIEW_DESC_st:             # <<<<<<<<<<<<<<
 *     CUresourceViewFormat format
 *     size_t width
 */
struct __pyx_t_4cuda_5ccuda_CUDA_RESOURCE_VIEW_DESC_st {
  __pyx_t_4cuda_5ccuda_CUresourceViewFormat format;
  size_t width;
  size_t height;
  size_t depth;
  unsigned int firstMipmapLevel;
  unsigned int lastMipmapLevel;
  unsigned int firstLayer;
  unsigned int lastLayer;
  unsigned int reserved[16];
};

/* "cuda/ccuda.pxd":1151
 *     unsigned int reserved[16]
 * 
 * ctypedef CUDA_RESOURCE_VIEW_DESC_st CUDA_RESOURCE_VIEW_DESC_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUDA_RESOURCE_VIEW_DESC_v1 CUDA_RESOURCE_VIEW_DESC
 */
typedef struct __pyx_t_4cuda_5ccuda_CUDA_RESOURCE_VIEW_DESC_st __pyx_t_4cuda_5ccuda_CUDA_RESOURCE_VIEW_DESC_v1;

/* "cuda/ccuda.pxd":1153
 * ctypedef CUDA_RESOURCE_VIEW_DESC_st CUDA_RESOURCE_VIEW_DESC_v1
 * 
 * ctypedef CUDA_RESOURCE_VIEW_DESC_v1 CUDA_RESOURCE_VIEW_DESC             # <<<<<<<<<<<<<<
 * 
 * cdef struct CUDA_POINTER_ATTRIBUTE_P2P_TOKENS_st:
 */
typedef __pyx_t_4cuda_5ccuda_CUDA_RESOURCE_VIEW_DESC_v1 __pyx_t_4cuda_5ccuda_CUDA_RESOURCE_VIEW_DESC;

/* "cuda/ccuda.pxd":1155
 * ctypedef CUDA_RESOURCE_VIEW_DESC_v1 CUDA_RESOURCE_VIEW_DESC
 * 
 * cdef struct CUDA_POINTER_ATTRIBUTE_P2P_TOKENS_st:             # <<<<<<<<<<<<<<
 *     unsigned long long p2pToken
 *     unsigned int vaSpaceToken
 */
struct __pyx_t_4cuda_5ccuda_CUDA_POINTER_ATTRIBUTE_P2P_TOKENS_st {
  unsigned PY_LONG_LONG p2pToken;
  unsigned int vaSpaceToken;
};

/* "cuda/ccuda.pxd":1159
 *     unsigned int vaSpaceToken
 * 
 * ctypedef CUDA_POINTER_ATTRIBUTE_P2P_TOKENS_st CUDA_POINTER_ATTRIBUTE_P2P_TOKENS_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUDA_POINTER_ATTRIBUTE_P2P_TOKENS_v1 CUDA_POINTER_ATTRIBUTE_P2P_TOKENS
 */
typedef struct __pyx_t_4cuda_5ccuda_CUDA_POINTER_ATTRIBUTE_P2P_TOKENS_st __pyx_t_4cuda_5ccuda_CUDA_POINTER_ATTRIBUTE_P2P_TOKENS_v1;

/* "cuda/ccuda.pxd":1161
 * ctypedef CUDA_POINTER_ATTRIBUTE_P2P_TOKENS_st CUDA_POINTER_ATTRIBUTE_P2P_TOKENS_v1
 * 
 * ctypedef CUDA_POINTER_ATTRIBUTE_P2P_TOKENS_v1 CUDA_POINTER_ATTRIBUTE_P2P_TOKENS             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUDA_POINTER_ATTRIBUTE_ACCESS_FLAGS_enum:
 */
typedef __pyx_t_4cuda_5ccuda_CUDA_POINTER_ATTRIBUTE_P2P_TOKENS_v1 __pyx_t_4cuda_5ccuda_CUDA_POINTER_ATTRIBUTE_P2P_TOKENS;

/* "cuda/ccuda.pxd":1168
 *     CU_POINTER_ATTRIBUTE_ACCESS_FLAG_READWRITE = 0x3
 * 
 * ctypedef CUDA_POINTER_ATTRIBUTE_ACCESS_FLAGS_enum CUDA_POINTER_ATTRIBUTE_ACCESS_FLAGS             # <<<<<<<<<<<<<<
 * 
 * cdef struct CUDA_LAUNCH_PARAMS_st:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUDA_POINTER_ATTRIBUTE_ACCESS_FLAGS_enum __pyx_t_4cuda_5ccuda_CUDA_POINTER_ATTRIBUTE_ACCESS_FLAGS;

/* "cuda/ccuda.pxd":1170
 * ctypedef CUDA_POINTER_ATTRIBUTE_ACCESS_FLAGS_enum CUDA_POINTER_ATTRIBUTE_ACCESS_FLAGS
 * 
 * cdef struct CUDA_LAUNCH_PARAMS_st:             # <<<<<<<<<<<<<<
 *     CUfunction function
 *     unsigned int gridDimX
 */
struct __pyx_t_4cuda_5ccuda_CUDA_LAUNCH_PARAMS_st {
  __pyx_t_4cuda_5ccuda_CUfunction function;
  unsigned int gridDimX;
  unsigned int gridDimY;
  unsigned int gridDimZ;
  unsigned int blockDimX;
  unsigned int blockDimY;
  unsigned int blockDimZ;
  unsigned int sharedMemBytes;
  __pyx_t_4cuda_5ccuda_CUstream hStream;
  void **kernelParams;
};

/* "cuda/ccuda.pxd":1182
 *     void** kernelParams
 * 
 * ctypedef CUDA_LAUNCH_PARAMS_st CUDA_LAUNCH_PARAMS_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUDA_LAUNCH_PARAMS_v1 CUDA_LAUNCH_PARAMS
 */
typedef struct __pyx_t_4cuda_5ccuda_CUDA_LAUNCH_PARAMS_st __pyx_t_4cuda_5ccuda_CUDA_LAUNCH_PARAMS_v1;

/* "cuda/ccuda.pxd":1184
 * ctypedef CUDA_LAUNCH_PARAMS_st CUDA_LAUNCH_PARAMS_v1
 * 
 * ctypedef CUDA_LAUNCH_PARAMS_v1 CUDA_LAUNCH_PARAMS             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUexternalMemoryHandleType_enum:
 */
typedef __pyx_t_4cuda_5ccuda_CUDA_LAUNCH_PARAMS_v1 __pyx_t_4cuda_5ccuda_CUDA_LAUNCH_PARAMS;

/* "cuda/ccuda.pxd":1196
 *     CU_EXTERNAL_MEMORY_HANDLE_TYPE_NVSCIBUF = 8
 * 
 * ctypedef CUexternalMemoryHandleType_enum CUexternalMemoryHandleType             # <<<<<<<<<<<<<<
 * 
 * cdef struct _CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1_CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1_CUDA_EXTERNAL_MEMORY_HANDLE_DESC_st_handle_handle_win32_s:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUexternalMemoryHandleType_enum __pyx_t_4cuda_5ccuda_CUexternalMemoryHandleType;

/* "cuda/ccuda.pxd":1198
 * ctypedef CUexternalMemoryHandleType_enum CUexternalMemoryHandleType
 * 
 * cdef struct _CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1_CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1_CUDA_EXTERNAL_MEMORY_HANDLE_DESC_st_handle_handle_win32_s:             # <<<<<<<<<<<<<<
 *     void* handle
 *     void* name
 */
struct __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1_CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1_CUDA_EXTERNAL_MEMORY_HANDLE_DESC_st_handle_handle_win32_s {
  void *handle;
  void *name;
};

/* "cuda/ccuda.pxd":1202
 *     void* name
 * 
 * cdef union _CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1_CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1_CUDA_EXTERNAL_MEMORY_HANDLE_DESC_st_handle_u:             # <<<<<<<<<<<<<<
 *     int fd
 *     _CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1_CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1_CUDA_EXTERNAL_MEMORY_HANDLE_DESC_st_handle_handle_win32_s win32
 */
union __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1_CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1_CUDA_EXTERNAL_MEMORY_HANDLE_DESC_st_handle_u {
  int fd;
  struct __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1_CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1_CUDA_EXTERNAL_MEMORY_HANDLE_DESC_st_handle_handle_win32_s win32;
  void *nvSciBufObject;
};

/* "cuda/ccuda.pxd":1207
 *     void* nvSciBufObject
 * 
 * cdef struct CUDA_EXTERNAL_MEMORY_HANDLE_DESC_st:             # <<<<<<<<<<<<<<
 *     CUexternalMemoryHandleType type
 *     _CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1_CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1_CUDA_EXTERNAL_MEMORY_HANDLE_DESC_st_handle_u handle
 */
struct __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_HANDLE_DESC_st {
  __pyx_t_4cuda_5ccuda_CUexternalMemoryHandleType type;
  union __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1_CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1_CUDA_EXTERNAL_MEMORY_HANDLE_DESC_st_handle_u handle;
  unsigned PY_LONG_LONG size;
  unsigned int flags;
  unsigned int reserved[16];
};

/* "cuda/ccuda.pxd":1214
 *     unsigned int reserved[16]
 * 
 * ctypedef CUDA_EXTERNAL_MEMORY_HANDLE_DESC_st CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1 CUDA_EXTERNAL_MEMORY_HANDLE_DESC
 */
typedef struct __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_HANDLE_DESC_st __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1;

/* "cuda/ccuda.pxd":1216
 * ctypedef CUDA_EXTERNAL_MEMORY_HANDLE_DESC_st CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1
 * 
 * ctypedef CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1 CUDA_EXTERNAL_MEMORY_HANDLE_DESC             # <<<<<<<<<<<<<<
 * 
 * cdef struct CUDA_EXTERNAL_MEMORY_BUFFER_DESC_st:
 */
typedef __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1 __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_HANDLE_DESC;

/* "cuda/ccuda.pxd":1218
 * ctypedef CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1 CUDA_EXTERNAL_MEMORY_HANDLE_DESC
 * 
 * cdef struct CUDA_EXTERNAL_MEMORY_BUFFER_DESC_st:             # <<<<<<<<<<<<<<
 *     unsigned long long offset
 *     unsigned long long size
 */
struct __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_BUFFER_DESC_st {
  unsigned PY_LONG_LONG offset;
  unsigned PY_LONG_LONG size;
  unsigned int flags;
  unsigned int reserved[16];
};

/* "cuda/ccuda.pxd":1224
 *     unsigned int reserved[16]
 * 
 * ctypedef CUDA_EXTERNAL_MEMORY_BUFFER_DESC_st CUDA_EXTERNAL_MEMORY_BUFFER_DESC_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUDA_EXTERNAL_MEMORY_BUFFER_DESC_v1 CUDA_EXTERNAL_MEMORY_BUFFER_DESC
 */
typedef struct __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_BUFFER_DESC_st __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_BUFFER_DESC_v1;

/* "cuda/ccuda.pxd":1226
 * ctypedef CUDA_EXTERNAL_MEMORY_BUFFER_DESC_st CUDA_EXTERNAL_MEMORY_BUFFER_DESC_v1
 * 
 * ctypedef CUDA_EXTERNAL_MEMORY_BUFFER_DESC_v1 CUDA_EXTERNAL_MEMORY_BUFFER_DESC             # <<<<<<<<<<<<<<
 * 
 * cdef struct CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC_st:
 */
typedef __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_BUFFER_DESC_v1 __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_BUFFER_DESC;

/* "cuda/ccuda.pxd":1228
 * ctypedef CUDA_EXTERNAL_MEMORY_BUFFER_DESC_v1 CUDA_EXTERNAL_MEMORY_BUFFER_DESC
 * 
 * cdef struct CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC_st:             # <<<<<<<<<<<<<<
 *     unsigned long long offset
 *     CUDA_ARRAY3D_DESCRIPTOR arrayDesc
 */
struct __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC_st {
  unsigned PY_LONG_LONG offset;
  __pyx_t_4cuda_5ccuda_CUDA_ARRAY3D_DESCRIPTOR arrayDesc;
  unsigned int numLevels;
  unsigned int reserved[16];
};

/* "cuda/ccuda.pxd":1234
 *     unsigned int reserved[16]
 * 
 * ctypedef CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC_st CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC_v1 CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC
 */
typedef struct __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC_st __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC_v1;

/* "cuda/ccuda.pxd":1236
 * ctypedef CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC_st CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC_v1
 * 
 * ctypedef CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC_v1 CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUexternalSemaphoreHandleType_enum:
 */
typedef __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC_v1 __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC;

/* "cuda/ccuda.pxd":1250
 *     CU_EXTERNAL_SEMAPHORE_HANDLE_TYPE_TIMELINE_SEMAPHORE_WIN32 = 10
 * 
 * ctypedef CUexternalSemaphoreHandleType_enum CUexternalSemaphoreHandleType             # <<<<<<<<<<<<<<
 * 
 * cdef struct _CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_st_handle_handle_win32_s:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUexternalSemaphoreHandleType_enum __pyx_t_4cuda_5ccuda_CUexternalSemaphoreHandleType;

/* "cuda/ccuda.pxd":1252
 * ctypedef CUexternalSemaphoreHandleType_enum CUexternalSemaphoreHandleType
 * 
 * cdef struct _CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_st_handle_handle_win32_s:             # <<<<<<<<<<<<<<
 *     void* handle
 *     void* name
 */
struct __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_st_handle_handle_win32_s {
  void *handle;
  void *name;
};

/* "cuda/ccuda.pxd":1256
 *     void* name
 * 
 * cdef union _CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_st_handle_u:             # <<<<<<<<<<<<<<
 *     int fd
 *     _CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_st_handle_handle_win32_s win32
 */
union __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_st_handle_u {
  int fd;
  struct __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_st_handle_handle_win32_s win32;
  void *nvSciSyncObj;
};

/* "cuda/ccuda.pxd":1261
 *     void* nvSciSyncObj
 * 
 * cdef struct CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_st:             # <<<<<<<<<<<<<<
 *     CUexternalSemaphoreHandleType type
 *     _CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_st_handle_u handle
 */
struct __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_st {
  __pyx_t_4cuda_5ccuda_CUexternalSemaphoreHandleType type;
  union __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_st_handle_u handle;
  unsigned int flags;
  unsigned int reserved[16];
};

/* "cuda/ccuda.pxd":1267
 *     unsigned int reserved[16]
 * 
 * ctypedef CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_st CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1 CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC
 */
typedef struct __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_st __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1;

/* "cuda/ccuda.pxd":1269
 * ctypedef CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_st CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1
 * 
 * ctypedef CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1 CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC             # <<<<<<<<<<<<<<
 * 
 * cdef struct _CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_st_params_params_fence_s:
 */
typedef __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1 __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC;

/* "cuda/ccuda.pxd":1271
 * ctypedef CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1 CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC
 * 
 * cdef struct _CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_st_params_params_fence_s:             # <<<<<<<<<<<<<<
 *     unsigned long long value
 * 
 */
struct __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_st_params_params_fence_s {
  unsigned PY_LONG_LONG value;
};

/* "cuda/ccuda.pxd":1274
 *     unsigned long long value
 * 
 * cdef union _CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_st_params_params_nvSciSync_u:             # <<<<<<<<<<<<<<
 *     void* fence
 *     unsigned long long reserved
 */
union __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_st_params_params_nvSciSync_u {
  void *fence;
  unsigned PY_LONG_LONG reserved;
};

/* "cuda/ccuda.pxd":1278
 *     unsigned long long reserved
 * 
 * cdef struct _CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_st_params_params_keyedMutex_s:             # <<<<<<<<<<<<<<
 *     unsigned long long key
 * 
 */
struct __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_st_params_params_keyedMutex_s {
  unsigned PY_LONG_LONG key;
};

/* "cuda/ccuda.pxd":1281
 *     unsigned long long key
 * 
 * cdef struct _CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_st_params_s:             # <<<<<<<<<<<<<<
 *     _CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_st_params_params_fence_s fence
 *     _CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_st_params_params_nvSciSync_u nvSciSync
 */
struct __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_st_params_s {
  struct __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_st_params_params_fence_s fence;
  union __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_st_params_params_nvSciSync_u nvSciSync;
  struct __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_st_params_params_keyedMutex_s keyedMutex;
  unsigned int reserved[12];
};

/* "cuda/ccuda.pxd":1287
 *     unsigned int reserved[12]
 * 
 * cdef struct CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_st:             # <<<<<<<<<<<<<<
 *     _CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_st_params_s params
 *     unsigned int flags
 */
struct __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_st {
  struct __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_st_params_s params;
  unsigned int flags;
  unsigned int reserved[16];
};

/* "cuda/ccuda.pxd":1292
 *     unsigned int reserved[16]
 * 
 * ctypedef CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_st CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1 CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS
 */
typedef struct __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_st __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1;

/* "cuda/ccuda.pxd":1294
 * ctypedef CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_st CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1
 * 
 * ctypedef CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1 CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS             # <<<<<<<<<<<<<<
 * 
 * cdef struct _CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_st_params_params_fence_s:
 */
typedef __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1 __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS;

/* "cuda/ccuda.pxd":1296
 * ctypedef CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1 CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS
 * 
 * cdef struct _CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_st_params_params_fence_s:             # <<<<<<<<<<<<<<
 *     unsigned long long value
 * 
 */
struct __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_st_params_params_fence_s {
  unsigned PY_LONG_LONG value;
};

/* "cuda/ccuda.pxd":1299
 *     unsigned long long value
 * 
 * cdef union _CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_st_params_params_nvSciSync_u:             # <<<<<<<<<<<<<<
 *     void* fence
 *     unsigned long long reserved
 */
union __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_st_params_params_nvSciSync_u {
  void *fence;
  unsigned PY_LONG_LONG reserved;
};

/* "cuda/ccuda.pxd":1303
 *     unsigned long long reserved
 * 
 * cdef struct _CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_st_params_params_keyedMutex_s:             # <<<<<<<<<<<<<<
 *     unsigned long long key
 *     unsigned int timeoutMs
 */
struct __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_st_params_params_keyedMutex_s {
  unsigned PY_LONG_LONG key;
  unsigned int timeoutMs;
};

/* "cuda/ccuda.pxd":1307
 *     unsigned int timeoutMs
 * 
 * cdef struct _CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_st_params_s:             # <<<<<<<<<<<<<<
 *     _CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_st_params_params_fence_s fence
 *     _CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_st_params_params_nvSciSync_u nvSciSync
 */
struct __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_st_params_s {
  struct __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_st_params_params_fence_s fence;
  union __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_st_params_params_nvSciSync_u nvSciSync;
  struct __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_st_params_params_keyedMutex_s keyedMutex;
  unsigned int reserved[10];
};

/* "cuda/ccuda.pxd":1313
 *     unsigned int reserved[10]
 * 
 * cdef struct CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_st:             # <<<<<<<<<<<<<<
 *     _CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_st_params_s params
 *     unsigned int flags
 */
struct __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_st {
  struct __pyx_t_4cuda_5ccuda__CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_st_params_s params;
  unsigned int flags;
  unsigned int reserved[16];
};

/* "cuda/ccuda.pxd":1318
 *     unsigned int reserved[16]
 * 
 * ctypedef CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_st CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1 CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS
 */
typedef struct __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_st __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1;

/* "cuda/ccuda.pxd":1320
 * ctypedef CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_st CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1
 * 
 * ctypedef CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1 CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS             # <<<<<<<<<<<<<<
 * 
 * cdef struct CUDA_EXT_SEM_SIGNAL_NODE_PARAMS_st:
 */
typedef __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1 __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS;

/* "cuda/ccuda.pxd":1322
 * ctypedef CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1 CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS
 * 
 * cdef struct CUDA_EXT_SEM_SIGNAL_NODE_PARAMS_st:             # <<<<<<<<<<<<<<
 *     CUexternalSemaphore* extSemArray
 *     const CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS* paramsArray
 */
struct __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_SIGNAL_NODE_PARAMS_st {
  __pyx_t_4cuda_5ccuda_CUexternalSemaphore *extSemArray;
  __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS const *paramsArray;
  unsigned int numExtSems;
};

/* "cuda/ccuda.pxd":1327
 *     unsigned int numExtSems
 * 
 * ctypedef CUDA_EXT_SEM_SIGNAL_NODE_PARAMS_st CUDA_EXT_SEM_SIGNAL_NODE_PARAMS_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUDA_EXT_SEM_SIGNAL_NODE_PARAMS_v1 CUDA_EXT_SEM_SIGNAL_NODE_PARAMS
 */
typedef struct __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_SIGNAL_NODE_PARAMS_st __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_SIGNAL_NODE_PARAMS_v1;

/* "cuda/ccuda.pxd":1329
 * ctypedef CUDA_EXT_SEM_SIGNAL_NODE_PARAMS_st CUDA_EXT_SEM_SIGNAL_NODE_PARAMS_v1
 * 
 * ctypedef CUDA_EXT_SEM_SIGNAL_NODE_PARAMS_v1 CUDA_EXT_SEM_SIGNAL_NODE_PARAMS             # <<<<<<<<<<<<<<
 * 
 * cdef struct CUDA_EXT_SEM_WAIT_NODE_PARAMS_st:
 */
typedef __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_SIGNAL_NODE_PARAMS_v1 __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_SIGNAL_NODE_PARAMS;

/* "cuda/ccuda.pxd":1331
 * ctypedef CUDA_EXT_SEM_SIGNAL_NODE_PARAMS_v1 CUDA_EXT_SEM_SIGNAL_NODE_PARAMS
 * 
 * cdef struct CUDA_EXT_SEM_WAIT_NODE_PARAMS_st:             # <<<<<<<<<<<<<<
 *     CUexternalSemaphore* extSemArray
 *     const CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS* paramsArray
 */
struct __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_WAIT_NODE_PARAMS_st {
  __pyx_t_4cuda_5ccuda_CUexternalSemaphore *extSemArray;
  __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS const *paramsArray;
  unsigned int numExtSems;
};

/* "cuda/ccuda.pxd":1336
 *     unsigned int numExtSems
 * 
 * ctypedef CUDA_EXT_SEM_WAIT_NODE_PARAMS_st CUDA_EXT_SEM_WAIT_NODE_PARAMS_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUDA_EXT_SEM_WAIT_NODE_PARAMS_v1 CUDA_EXT_SEM_WAIT_NODE_PARAMS
 */
typedef struct __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_WAIT_NODE_PARAMS_st __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_WAIT_NODE_PARAMS_v1;

/* "cuda/ccuda.pxd":1338
 * ctypedef CUDA_EXT_SEM_WAIT_NODE_PARAMS_st CUDA_EXT_SEM_WAIT_NODE_PARAMS_v1
 * 
 * ctypedef CUDA_EXT_SEM_WAIT_NODE_PARAMS_v1 CUDA_EXT_SEM_WAIT_NODE_PARAMS             # <<<<<<<<<<<<<<
 * 
 * ctypedef unsigned long long CUmemGenericAllocationHandle_v1
 */
typedef __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_WAIT_NODE_PARAMS_v1 __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_WAIT_NODE_PARAMS;

/* "cuda/ccuda.pxd":1351
 *     CU_MEM_HANDLE_TYPE_MAX = 0x7FFFFFFF
 * 
 * ctypedef CUmemAllocationHandleType_enum CUmemAllocationHandleType             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUmemAccess_flags_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUmemAllocationHandleType_enum __pyx_t_4cuda_5ccuda_CUmemAllocationHandleType;

/* "cuda/ccuda.pxd":1359
 *     CU_MEM_ACCESS_FLAGS_PROT_MAX = 0x7FFFFFFF
 * 
 * ctypedef CUmemAccess_flags_enum CUmemAccess_flags             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUmemLocationType_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUmemAccess_flags_enum __pyx_t_4cuda_5ccuda_CUmemAccess_flags;

/* "cuda/ccuda.pxd":1366
 *     CU_MEM_LOCATION_TYPE_MAX = 0x7FFFFFFF
 * 
 * ctypedef CUmemLocationType_enum CUmemLocationType             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUmemAllocationType_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUmemLocationType_enum __pyx_t_4cuda_5ccuda_CUmemLocationType;

/* "cuda/ccuda.pxd":1373
 *     CU_MEM_ALLOCATION_TYPE_MAX = 0x7FFFFFFF
 * 
 * ctypedef CUmemAllocationType_enum CUmemAllocationType             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUmemAllocationGranularity_flags_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUmemAllocationType_enum __pyx_t_4cuda_5ccuda_CUmemAllocationType;

/* "cuda/ccuda.pxd":1379
 *     CU_MEM_ALLOC_GRANULARITY_RECOMMENDED = 0x1
 * 
 * ctypedef CUmemAllocationGranularity_flags_enum CUmemAllocationGranularity_flags             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUarraySparseSubresourceType_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUmemAllocationGranularity_flags_enum __pyx_t_4cuda_5ccuda_CUmemAllocationGranularity_flags;

/* "cuda/ccuda.pxd":1385
 *     CU_ARRAY_SPARSE_SUBRESOURCE_TYPE_MIPTAIL = 1
 * 
 * ctypedef CUarraySparseSubresourceType_enum CUarraySparseSubresourceType             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUmemOperationType_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUarraySparseSubresourceType_enum __pyx_t_4cuda_5ccuda_CUarraySparseSubresourceType;

/* "cuda/ccuda.pxd":1391
 *     CU_MEM_OPERATION_TYPE_UNMAP = 2
 * 
 * ctypedef CUmemOperationType_enum CUmemOperationType             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUmemHandleType_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUmemOperationType_enum __pyx_t_4cuda_5ccuda_CUmemOperationType;

/* "cuda/ccuda.pxd":1396
 *     CU_MEM_HANDLE_TYPE_GENERIC = 0
 * 
 * ctypedef CUmemHandleType_enum CUmemHandleType             # <<<<<<<<<<<<<<
 * 
 * cdef union _CUarrayMapInfo_v1_CUarrayMapInfo_v1_CUarrayMapInfo_st_resource_u:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUmemHandleType_enum __pyx_t_4cuda_5ccuda_CUmemHandleType;

/* "cuda/ccuda.pxd":1398
 * ctypedef CUmemHandleType_enum CUmemHandleType
 * 
 * cdef union _CUarrayMapInfo_v1_CUarrayMapInfo_v1_CUarrayMapInfo_st_resource_u:             # <<<<<<<<<<<<<<
 *     CUmipmappedArray mipmap
 *     CUarray array
 */
union __pyx_t_4cuda_5ccuda__CUarrayMapInfo_v1_CUarrayMapInfo_v1_CUarrayMapInfo_st_resource_u {
  __pyx_t_4cuda_5ccuda_CUmipmappedArray mipmap;
  __pyx_t_4cuda_5ccuda_CUarray array;
};

/* "cuda/ccuda.pxd":1402
 *     CUarray array
 * 
 * cdef struct _CUarrayMapInfo_v1_CUarrayMapInfo_v1_CUarrayMapInfo_st_subresource_subresource_sparseLevel_s:             # <<<<<<<<<<<<<<
 *     unsigned int level
 *     unsigned int layer
 */
struct __pyx_t_4cuda_5ccuda__CUarrayMapInfo_v1_CUarrayMapInfo_v1_CUarrayMapInfo_st_subresource_subresource_sparseLevel_s {
  unsigned int level;
  unsigned int layer;
  unsigned int offsetX;
  unsigned int offsetY;
  unsigned int offsetZ;
  unsigned int extentWidth;
  unsigned int extentHeight;
  unsigned int extentDepth;
};

/* "cuda/ccuda.pxd":1412
 *     unsigned int extentDepth
 * 
 * cdef struct _CUarrayMapInfo_v1_CUarrayMapInfo_v1_CUarrayMapInfo_st_subresource_subresource_miptail_s:             # <<<<<<<<<<<<<<
 *     unsigned int layer
 *     unsigned long long offset
 */
struct __pyx_t_4cuda_5ccuda__CUarrayMapInfo_v1_CUarrayMapInfo_v1_CUarrayMapInfo_st_subresource_subresource_miptail_s {
  unsigned int layer;
  unsigned PY_LONG_LONG offset;
  unsigned PY_LONG_LONG size;
};

/* "cuda/ccuda.pxd":1417
 *     unsigned long long size
 * 
 * cdef union _CUarrayMapInfo_v1_CUarrayMapInfo_v1_CUarrayMapInfo_st_subresource_u:             # <<<<<<<<<<<<<<
 *     _CUarrayMapInfo_v1_CUarrayMapInfo_v1_CUarrayMapInfo_st_subresource_subresource_sparseLevel_s sparseLevel
 *     _CUarrayMapInfo_v1_CUarrayMapInfo_v1_CUarrayMapInfo_st_subresource_subresource_miptail_s miptail
 */
union __pyx_t_4cuda_5ccuda__CUarrayMapInfo_v1_CUarrayMapInfo_v1_CUarrayMapInfo_st_subresource_u {
  struct __pyx_t_4cuda_5ccuda__CUarrayMapInfo_v1_CUarrayMapInfo_v1_CUarrayMapInfo_st_subresource_subresource_sparseLevel_s sparseLevel;
  struct __pyx_t_4cuda_5ccuda__CUarrayMapInfo_v1_CUarrayMapInfo_v1_CUarrayMapInfo_st_subresource_subresource_miptail_s miptail;
};

/* "cuda/ccuda.pxd":1421
 *     _CUarrayMapInfo_v1_CUarrayMapInfo_v1_CUarrayMapInfo_st_subresource_subresource_miptail_s miptail
 * 
 * cdef union _CUarrayMapInfo_v1_CUarrayMapInfo_v1_CUarrayMapInfo_st_memHandle_u:             # <<<<<<<<<<<<<<
 *     CUmemGenericAllocationHandle memHandle
 * 
 */
union __pyx_t_4cuda_5ccuda__CUarrayMapInfo_v1_CUarrayMapInfo_v1_CUarrayMapInfo_st_memHandle_u {
  __pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle memHandle;
};

/* "cuda/ccuda.pxd":1424
 *     CUmemGenericAllocationHandle memHandle
 * 
 * cdef struct CUarrayMapInfo_st:             # <<<<<<<<<<<<<<
 *     CUresourcetype resourceType
 *     _CUarrayMapInfo_v1_CUarrayMapInfo_v1_CUarrayMapInfo_st_resource_u resource
 */
struct __pyx_t_4cuda_5ccuda_CUarrayMapInfo_st {
  __pyx_t_4cuda_5ccuda_CUresourcetype resourceType;
  union __pyx_t_4cuda_5ccuda__CUarrayMapInfo_v1_CUarrayMapInfo_v1_CUarrayMapInfo_st_resource_u resource;
  __pyx_t_4cuda_5ccuda_CUarraySparseSubresourceType subresourceType;
  union __pyx_t_4cuda_5ccuda__CUarrayMapInfo_v1_CUarrayMapInfo_v1_CUarrayMapInfo_st_subresource_u subresource;
  __pyx_t_4cuda_5ccuda_CUmemOperationType memOperationType;
  __pyx_t_4cuda_5ccuda_CUmemHandleType memHandleType;
  union __pyx_t_4cuda_5ccuda__CUarrayMapInfo_v1_CUarrayMapInfo_v1_CUarrayMapInfo_st_memHandle_u memHandle;
  unsigned PY_LONG_LONG offset;
  unsigned int deviceBitMask;
  unsigned int flags;
  unsigned int reserved[2];
};

/* "cuda/ccuda.pxd":1437
 *     unsigned int reserved[2]
 * 
 * ctypedef CUarrayMapInfo_st CUarrayMapInfo_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUarrayMapInfo_v1 CUarrayMapInfo
 */
typedef struct __pyx_t_4cuda_5ccuda_CUarrayMapInfo_st __pyx_t_4cuda_5ccuda_CUarrayMapInfo_v1;

/* "cuda/ccuda.pxd":1439
 * ctypedef CUarrayMapInfo_st CUarrayMapInfo_v1
 * 
 * ctypedef CUarrayMapInfo_v1 CUarrayMapInfo             # <<<<<<<<<<<<<<
 * 
 * cdef struct CUmemLocation_st:
 */
typedef __pyx_t_4cuda_5ccuda_CUarrayMapInfo_v1 __pyx_t_4cuda_5ccuda_CUarrayMapInfo;

/* "cuda/ccuda.pxd":1441
 * ctypedef CUarrayMapInfo_v1 CUarrayMapInfo
 * 
 * cdef struct CUmemLocation_st:             # <<<<<<<<<<<<<<
 *     CUmemLocationType type
 *     int id
 */
struct __pyx_t_4cuda_5ccuda_CUmemLocation_st {
  __pyx_t_4cuda_5ccuda_CUmemLocationType type;
  int id;
};

/* "cuda/ccuda.pxd":1445
 *     int id
 * 
 * ctypedef CUmemLocation_st CUmemLocation_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUmemLocation_v1 CUmemLocation
 */
typedef struct __pyx_t_4cuda_5ccuda_CUmemLocation_st __pyx_t_4cuda_5ccuda_CUmemLocation_v1;

/* "cuda/ccuda.pxd":1447
 * ctypedef CUmemLocation_st CUmemLocation_v1
 * 
 * ctypedef CUmemLocation_v1 CUmemLocation             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUmemAllocationCompType_enum:
 */
typedef __pyx_t_4cuda_5ccuda_CUmemLocation_v1 __pyx_t_4cuda_5ccuda_CUmemLocation;

/* "cuda/ccuda.pxd":1453
 *     CU_MEM_ALLOCATION_COMP_GENERIC = 0x1
 * 
 * ctypedef CUmemAllocationCompType_enum CUmemAllocationCompType             # <<<<<<<<<<<<<<
 * 
 * cdef struct _CUmemAllocationProp_v1_CUmemAllocationProp_v1_CUmemAllocationProp_st_allocFlags_s:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUmemAllocationCompType_enum __pyx_t_4cuda_5ccuda_CUmemAllocationCompType;

/* "cuda/ccuda.pxd":1455
 * ctypedef CUmemAllocationCompType_enum CUmemAllocationCompType
 * 
 * cdef struct _CUmemAllocationProp_v1_CUmemAllocationProp_v1_CUmemAllocationProp_st_allocFlags_s:             # <<<<<<<<<<<<<<
 *     unsigned char compressionType
 *     unsigned char gpuDirectRDMACapable
 */
struct __pyx_t_4cuda_5ccuda__CUmemAllocationProp_v1_CUmemAllocationProp_v1_CUmemAllocationProp_st_allocFlags_s {
  unsigned char compressionType;
  unsigned char gpuDirectRDMACapable;
  unsigned short usage;
  unsigned char reserved[4];
};

/* "cuda/ccuda.pxd":1461
 *     unsigned char reserved[4]
 * 
 * cdef struct CUmemAllocationProp_st:             # <<<<<<<<<<<<<<
 *     CUmemAllocationType type
 *     CUmemAllocationHandleType requestedHandleTypes
 */
struct __pyx_t_4cuda_5ccuda_CUmemAllocationProp_st {
  __pyx_t_4cuda_5ccuda_CUmemAllocationType type;
  __pyx_t_4cuda_5ccuda_CUmemAllocationHandleType requestedHandleTypes;
  __pyx_t_4cuda_5ccuda_CUmemLocation location;
  void *win32HandleMetaData;
  struct __pyx_t_4cuda_5ccuda__CUmemAllocationProp_v1_CUmemAllocationProp_v1_CUmemAllocationProp_st_allocFlags_s allocFlags;
};

/* "cuda/ccuda.pxd":1468
 *     _CUmemAllocationProp_v1_CUmemAllocationProp_v1_CUmemAllocationProp_st_allocFlags_s allocFlags
 * 
 * ctypedef CUmemAllocationProp_st CUmemAllocationProp_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUmemAllocationProp_v1 CUmemAllocationProp
 */
typedef struct __pyx_t_4cuda_5ccuda_CUmemAllocationProp_st __pyx_t_4cuda_5ccuda_CUmemAllocationProp_v1;

/* "cuda/ccuda.pxd":1470
 * ctypedef CUmemAllocationProp_st CUmemAllocationProp_v1
 * 
 * ctypedef CUmemAllocationProp_v1 CUmemAllocationProp             # <<<<<<<<<<<<<<
 * 
 * cdef struct CUmemAccessDesc_st:
 */
typedef __pyx_t_4cuda_5ccuda_CUmemAllocationProp_v1 __pyx_t_4cuda_5ccuda_CUmemAllocationProp;

/* "cuda/ccuda.pxd":1472
 * ctypedef CUmemAllocationProp_v1 CUmemAllocationProp
 * 
 * cdef struct CUmemAccessDesc_st:             # <<<<<<<<<<<<<<
 *     CUmemLocation location
 *     CUmemAccess_flags flags
 */
struct __pyx_t_4cuda_5ccuda_CUmemAccessDesc_st {
  __pyx_t_4cuda_5ccuda_CUmemLocation location;
  __pyx_t_4cuda_5ccuda_CUmemAccess_flags flags;
};

/* "cuda/ccuda.pxd":1476
 *     CUmemAccess_flags flags
 * 
 * ctypedef CUmemAccessDesc_st CUmemAccessDesc_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUmemAccessDesc_v1 CUmemAccessDesc
 */
typedef struct __pyx_t_4cuda_5ccuda_CUmemAccessDesc_st __pyx_t_4cuda_5ccuda_CUmemAccessDesc_v1;

/* "cuda/ccuda.pxd":1478
 * ctypedef CUmemAccessDesc_st CUmemAccessDesc_v1
 * 
 * ctypedef CUmemAccessDesc_v1 CUmemAccessDesc             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUgraphExecUpdateResult_enum:
 */
typedef __pyx_t_4cuda_5ccuda_CUmemAccessDesc_v1 __pyx_t_4cuda_5ccuda_CUmemAccessDesc;

/* "cuda/ccuda.pxd":1490
 *     CU_GRAPH_EXEC_UPDATE_ERROR_UNSUPPORTED_FUNCTION_CHANGE = 0x7
 * 
 * ctypedef CUgraphExecUpdateResult_enum CUgraphExecUpdateResult             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUmemPool_attribute_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUgraphExecUpdateResult_enum __pyx_t_4cuda_5ccuda_CUgraphExecUpdateResult;

/* "cuda/ccuda.pxd":1502
 *     CU_MEMPOOL_ATTR_USED_MEM_HIGH
 * 
 * ctypedef CUmemPool_attribute_enum CUmemPool_attribute             # <<<<<<<<<<<<<<
 * 
 * cdef struct CUmemPoolProps_st:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUmemPool_attribute_enum __pyx_t_4cuda_5ccuda_CUmemPool_attribute;

/* "cuda/ccuda.pxd":1504
 * ctypedef CUmemPool_attribute_enum CUmemPool_attribute
 * 
 * cdef struct CUmemPoolProps_st:             # <<<<<<<<<<<<<<
 *     CUmemAllocationType allocType
 *     CUmemAllocationHandleType handleTypes
 */
struct __pyx_t_4cuda_5ccuda_CUmemPoolProps_st {
  __pyx_t_4cuda_5ccuda_CUmemAllocationType allocType;
  __pyx_t_4cuda_5ccuda_CUmemAllocationHandleType handleTypes;
  __pyx_t_4cuda_5ccuda_CUmemLocation location;
  void *win32SecurityAttributes;
  unsigned char reserved[64];
};

/* "cuda/ccuda.pxd":1511
 *     unsigned char reserved[64]
 * 
 * ctypedef CUmemPoolProps_st CUmemPoolProps_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUmemPoolProps_v1 CUmemPoolProps
 */
typedef struct __pyx_t_4cuda_5ccuda_CUmemPoolProps_st __pyx_t_4cuda_5ccuda_CUmemPoolProps_v1;

/* "cuda/ccuda.pxd":1513
 * ctypedef CUmemPoolProps_st CUmemPoolProps_v1
 * 
 * ctypedef CUmemPoolProps_v1 CUmemPoolProps             # <<<<<<<<<<<<<<
 * 
 * cdef struct CUmemPoolPtrExportData_st:
 */
typedef __pyx_t_4cuda_5ccuda_CUmemPoolProps_v1 __pyx_t_4cuda_5ccuda_CUmemPoolProps;

/* "cuda/ccuda.pxd":1515
 * ctypedef CUmemPoolProps_v1 CUmemPoolProps
 * 
 * cdef struct CUmemPoolPtrExportData_st:             # <<<<<<<<<<<<<<
 *     unsigned char reserved[64]
 * 
 */
struct __pyx_t_4cuda_5ccuda_CUmemPoolPtrExportData_st {
  unsigned char reserved[64];
};

/* "cuda/ccuda.pxd":1518
 *     unsigned char reserved[64]
 * 
 * ctypedef CUmemPoolPtrExportData_st CUmemPoolPtrExportData_v1             # <<<<<<<<<<<<<<
 * 
 * ctypedef CUmemPoolPtrExportData_v1 CUmemPoolPtrExportData
 */
typedef struct __pyx_t_4cuda_5ccuda_CUmemPoolPtrExportData_st __pyx_t_4cuda_5ccuda_CUmemPoolPtrExportData_v1;

/* "cuda/ccuda.pxd":1520
 * ctypedef CUmemPoolPtrExportData_st CUmemPoolPtrExportData_v1
 * 
 * ctypedef CUmemPoolPtrExportData_v1 CUmemPoolPtrExportData             # <<<<<<<<<<<<<<
 * 
 * cdef struct CUDA_MEM_ALLOC_NODE_PARAMS_st:
 */
typedef __pyx_t_4cuda_5ccuda_CUmemPoolPtrExportData_v1 __pyx_t_4cuda_5ccuda_CUmemPoolPtrExportData;

/* "cuda/ccuda.pxd":1522
 * ctypedef CUmemPoolPtrExportData_v1 CUmemPoolPtrExportData
 * 
 * cdef struct CUDA_MEM_ALLOC_NODE_PARAMS_st:             # <<<<<<<<<<<<<<
 *     CUmemPoolProps poolProps
 *     const CUmemAccessDesc* accessDescs
 */
struct __pyx_t_4cuda_5ccuda_CUDA_MEM_ALLOC_NODE_PARAMS_st {
  __pyx_t_4cuda_5ccuda_CUmemPoolProps poolProps;
  __pyx_t_4cuda_5ccuda_CUmemAccessDesc const *accessDescs;
  size_t accessDescCount;
  size_t bytesize;
  __pyx_t_4cuda_5ccuda_CUdeviceptr dptr;
};

/* "cuda/ccuda.pxd":1529
 *     CUdeviceptr dptr
 * 
 * ctypedef CUDA_MEM_ALLOC_NODE_PARAMS_st CUDA_MEM_ALLOC_NODE_PARAMS             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUgraphMem_attribute_enum:
 */
typedef struct __pyx_t_4cuda_5ccuda_CUDA_MEM_ALLOC_NODE_PARAMS_st __pyx_t_4cuda_5ccuda_CUDA_MEM_ALLOC_NODE_PARAMS;

/* "cuda/ccuda.pxd":1537
 *     CU_GRAPH_MEM_ATTR_RESERVED_MEM_HIGH
 * 
 * ctypedef CUgraphMem_attribute_enum CUgraphMem_attribute             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUflushGPUDirectRDMAWritesOptions_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUgraphMem_attribute_enum __pyx_t_4cuda_5ccuda_CUgraphMem_attribute;

/* "cuda/ccuda.pxd":1543
 *     CU_FLUSH_GPU_DIRECT_RDMA_WRITES_OPTION_MEMOPS = 1<<1
 * 
 * ctypedef CUflushGPUDirectRDMAWritesOptions_enum CUflushGPUDirectRDMAWritesOptions             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUGPUDirectRDMAWritesOrdering_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUflushGPUDirectRDMAWritesOptions_enum __pyx_t_4cuda_5ccuda_CUflushGPUDirectRDMAWritesOptions;

/* "cuda/ccuda.pxd":1550
 *     CU_GPU_DIRECT_RDMA_WRITES_ORDERING_ALL_DEVICES = 200
 * 
 * ctypedef CUGPUDirectRDMAWritesOrdering_enum CUGPUDirectRDMAWritesOrdering             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUflushGPUDirectRDMAWritesScope_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUGPUDirectRDMAWritesOrdering_enum __pyx_t_4cuda_5ccuda_CUGPUDirectRDMAWritesOrdering;

/* "cuda/ccuda.pxd":1556
 *     CU_FLUSH_GPU_DIRECT_RDMA_WRITES_TO_ALL_DEVICES = 200
 * 
 * ctypedef CUflushGPUDirectRDMAWritesScope_enum CUflushGPUDirectRDMAWritesScope             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUflushGPUDirectRDMAWritesTarget_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUflushGPUDirectRDMAWritesScope_enum __pyx_t_4cuda_5ccuda_CUflushGPUDirectRDMAWritesScope;

/* "cuda/ccuda.pxd":1561
 *     CU_FLUSH_GPU_DIRECT_RDMA_WRITES_TARGET_CURRENT_CTX = 0
 * 
 * ctypedef CUflushGPUDirectRDMAWritesTarget_enum CUflushGPUDirectRDMAWritesTarget             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUgraphDebugDot_flags_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUflushGPUDirectRDMAWritesTarget_enum __pyx_t_4cuda_5ccuda_CUflushGPUDirectRDMAWritesTarget;

/* "cuda/ccuda.pxd":1578
 *     CU_GRAPH_DEBUG_DOT_FLAGS_MEM_FREE_NODE_PARAMS = 1<<12
 * 
 * ctypedef CUgraphDebugDot_flags_enum CUgraphDebugDot_flags             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUuserObject_flags_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUgraphDebugDot_flags_enum __pyx_t_4cuda_5ccuda_CUgraphDebugDot_flags;

/* "cuda/ccuda.pxd":1583
 *     CU_USER_OBJECT_NO_DESTRUCTOR_SYNC = 1
 * 
 * ctypedef CUuserObject_flags_enum CUuserObject_flags             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUuserObjectRetain_flags_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUuserObject_flags_enum __pyx_t_4cuda_5ccuda_CUuserObject_flags;

/* "cuda/ccuda.pxd":1588
 *     CU_GRAPH_USER_OBJECT_MOVE = 1
 * 
 * ctypedef CUuserObjectRetain_flags_enum CUuserObjectRetain_flags             # <<<<<<<<<<<<<<
 * 
 * cdef enum CUgraphInstantiate_flags_enum:
 */
typedef enum __pyx_t_4cuda_5ccuda_CUuserObjectRetain_flags_enum __pyx_t_4cuda_5ccuda_CUuserObjectRetain_flags;

/* "cuda/ccuda.pxd":1593
 *     CUDA_GRAPH_INSTANTIATE_FLAG_AUTO_FREE_ON_LAUNCH = 1
 * 
 * ctypedef CUgraphInstantiate_flags_enum CUgraphInstantiate_flags             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGetErrorString(CUresult error, const char** pStr) nogil except ?CUDA_ERROR_NOT_FOUND
 */
typedef enum __pyx_t_4cuda_5ccuda_CUgraphInstantiate_flags_enum __pyx_t_4cuda_5ccuda_CUgraphInstantiate_flags;

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#define __Pyx_PyErr_Occurred()  __pyx_tstate->curexc_type
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* Profile.proto */
#ifndef CYTHON_PROFILE
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_PYSTON
  #define CYTHON_PROFILE 0
#else
  #define CYTHON_PROFILE 1
#endif
#endif
#ifndef CYTHON_TRACE_NOGIL
  #define CYTHON_TRACE_NOGIL 0
#else
  #if CYTHON_TRACE_NOGIL && !defined(CYTHON_TRACE)
    #define CYTHON_TRACE 1
  #endif
#endif
#ifndef CYTHON_TRACE
  #define CYTHON_TRACE 0
#endif
#if CYTHON_TRACE
  #undef CYTHON_PROFILE_REUSE_FRAME
#endif
#ifndef CYTHON_PROFILE_REUSE_FRAME
  #define CYTHON_PROFILE_REUSE_FRAME 0
#endif
#if CYTHON_PROFILE || CYTHON_TRACE
  #include "compile.h"
  #include "frameobject.h"
  #include "traceback.h"
  #if CYTHON_PROFILE_REUSE_FRAME
    #define CYTHON_FRAME_MODIFIER static
    #define CYTHON_FRAME_DEL(frame)
  #else
    #define CYTHON_FRAME_MODIFIER
    #define CYTHON_FRAME_DEL(frame) Py_CLEAR(frame)
  #endif
  #define __Pyx_TraceDeclarations\
      static PyCodeObject *__pyx_frame_code = NULL;\
      CYTHON_FRAME_MODIFIER PyFrameObject *__pyx_frame = NULL;\
      int __Pyx_use_tracing = 0;
  #define __Pyx_TraceFrameInit(codeobj)\
      if (codeobj) __pyx_frame_code = (PyCodeObject*) codeobj;
#if PY_VERSION_HEX >= 0x030a00b1
  #define __Pyx_IsTracing(tstate, check_tracing, check_funcs)\
     (unlikely((tstate)->cframe->use_tracing) &&\
         (!(check_tracing) || !(tstate)->tracing) &&\
         (!(check_funcs) || (tstate)->c_profilefunc || (CYTHON_TRACE && (tstate)->c_tracefunc)))
  #define __Pyx_SetTracing(tstate, enable)\
      (tstate)->cframe->use_tracing = (enable)
#else
  #define __Pyx_IsTracing(tstate, check_tracing, check_funcs)\
     (unlikely((tstate)->use_tracing) &&\
         (!(check_tracing) || !(tstate)->tracing) &&\
         (!(check_funcs) || (tstate)->c_profilefunc || (CYTHON_TRACE && (tstate)->c_tracefunc)))
  #define __Pyx_SetTracing(tstate, enable)\
      (tstate)->use_tracing = (enable)
#endif
  #ifdef WITH_THREAD
  #define __Pyx_TraceCall(funcname, srcfile, firstlineno, nogil, goto_error)\
  if (nogil) {\
      if (CYTHON_TRACE_NOGIL) {\
          PyThreadState *tstate;\
          PyGILState_STATE state = PyGILState_Ensure();\
          tstate = __Pyx_PyThreadState_Current;\
          if (__Pyx_IsTracing(tstate, 1, 1)) {\
              __Pyx_use_tracing = __Pyx_TraceSetupAndCall(&__pyx_frame_code, &__pyx_frame, tstate, funcname, srcfile, firstlineno);\
          }\
          PyGILState_Release(state);\
          if (unlikely(__Pyx_use_tracing < 0)) goto_error;\
      }\
  } else {\
      PyThreadState* tstate = PyThreadState_GET();\
      if (__Pyx_IsTracing(tstate, 1, 1)) {\
          __Pyx_use_tracing = __Pyx_TraceSetupAndCall(&__pyx_frame_code, &__pyx_frame, tstate, funcname, srcfile, firstlineno);\
          if (unlikely(__Pyx_use_tracing < 0)) goto_error;\
      }\
  }
  #else
  #define __Pyx_TraceCall(funcname, srcfile, firstlineno, nogil, goto_error)\
  {   PyThreadState* tstate = PyThreadState_GET();\
      if (__Pyx_IsTracing(tstate, 1, 1)) {\
          __Pyx_use_tracing = __Pyx_TraceSetupAndCall(&__pyx_frame_code, &__pyx_frame, tstate, funcname, srcfile, firstlineno);\
          if (unlikely(__Pyx_use_tracing < 0)) goto_error;\
      }\
  }
  #endif
  #define __Pyx_TraceException()\
  if (likely(!__Pyx_use_tracing)); else {\
      PyThreadState* tstate = __Pyx_PyThreadState_Current;\
      if (__Pyx_IsTracing(tstate, 0, 1)) {\
          tstate->tracing++;\
          __Pyx_SetTracing(tstate, 0);\
          PyObject *exc_info = __Pyx_GetExceptionTuple(tstate);\
          if (exc_info) {\
              if (CYTHON_TRACE && tstate->c_tracefunc)\
                  tstate->c_tracefunc(\
                      tstate->c_traceobj, __pyx_frame, PyTrace_EXCEPTION, exc_info);\
              tstate->c_profilefunc(\
                  tstate->c_profileobj, __pyx_frame, PyTrace_EXCEPTION, exc_info);\
              Py_DECREF(exc_info);\
          }\
          __Pyx_SetTracing(tstate, 1);\
          tstate->tracing--;\
      }\
  }
  static void __Pyx_call_return_trace_func(PyThreadState *tstate, PyFrameObject *frame, PyObject *result) {
      PyObject *type, *value, *traceback;
      __Pyx_ErrFetchInState(tstate, &type, &value, &traceback);
      tstate->tracing++;
      __Pyx_SetTracing(tstate, 0);
      if (CYTHON_TRACE && tstate->c_tracefunc)
          tstate->c_tracefunc(tstate->c_traceobj, frame, PyTrace_RETURN, result);
      if (tstate->c_profilefunc)
          tstate->c_profilefunc(tstate->c_profileobj, frame, PyTrace_RETURN, result);
      CYTHON_FRAME_DEL(frame);
      __Pyx_SetTracing(tstate, 1);
      tstate->tracing--;
      __Pyx_ErrRestoreInState(tstate, type, value, traceback);
  }
  #ifdef WITH_THREAD
  #define __Pyx_TraceReturn(result, nogil)\
  if (likely(!__Pyx_use_tracing)); else {\
      if (nogil) {\
          if (CYTHON_TRACE_NOGIL) {\
              PyThreadState *tstate;\
              PyGILState_STATE state = PyGILState_Ensure();\
              tstate = __Pyx_PyThreadState_Current;\
              if (__Pyx_IsTracing(tstate, 0, 0)) {\
                  __Pyx_call_return_trace_func(tstate, __pyx_frame, (PyObject*)result);\
              }\
              PyGILState_Release(state);\
          }\
      } else {\
          PyThreadState* tstate = __Pyx_PyThreadState_Current;\
          if (__Pyx_IsTracing(tstate, 0, 0)) {\
              __Pyx_call_return_trace_func(tstate, __pyx_frame, (PyObject*)result);\
          }\
      }\
  }
  #else
  #define __Pyx_TraceReturn(result, nogil)\
  if (likely(!__Pyx_use_tracing)); else {\
      PyThreadState* tstate = __Pyx_PyThreadState_Current;\
      if (__Pyx_IsTracing(tstate, 0, 0)) {\
          __Pyx_call_return_trace_func(tstate, __pyx_frame, (PyObject*)result);\
      }\
  }
  #endif
  static PyCodeObject *__Pyx_createFrameCodeObject(const char *funcname, const char *srcfile, int firstlineno);
  static int __Pyx_TraceSetupAndCall(PyCodeObject** code, PyFrameObject** frame, PyThreadState* tstate, const char *funcname, const char *srcfile, int firstlineno);
#else
  #define __Pyx_TraceDeclarations
  #define __Pyx_TraceFrameInit(codeobj)
  #define __Pyx_TraceCall(funcname, srcfile, firstlineno, nogil, goto_error)   if ((1)); else goto_error;
  #define __Pyx_TraceException()
  #define __Pyx_TraceReturn(result, nogil)
#endif
#if CYTHON_TRACE
  static int __Pyx_call_line_trace_func(PyThreadState *tstate, PyFrameObject *frame, int lineno) {
      int ret;
      PyObject *type, *value, *traceback;
      __Pyx_ErrFetchInState(tstate, &type, &value, &traceback);
      __Pyx_PyFrame_SetLineNumber(frame, lineno);
      tstate->tracing++;
      __Pyx_SetTracing(tstate, 0);
      ret = tstate->c_tracefunc(tstate->c_traceobj, frame, PyTrace_LINE, NULL);
      __Pyx_SetTracing(tstate, 1);
      tstate->tracing--;
      if (likely(!ret)) {
          __Pyx_ErrRestoreInState(tstate, type, value, traceback);
      } else {
          Py_XDECREF(type);
          Py_XDECREF(value);
          Py_XDECREF(traceback);
      }
      return ret;
  }
  #ifdef WITH_THREAD
  #define __Pyx_TraceLine(lineno, nogil, goto_error)\
  if (likely(!__Pyx_use_tracing)); else {\
      if (nogil) {\
          if (CYTHON_TRACE_NOGIL) {\
              int ret = 0;\
              PyThreadState *tstate;\
              PyGILState_STATE state = PyGILState_Ensure();\
              tstate = __Pyx_PyThreadState_Current;\
              if (__Pyx_IsTracing(tstate, 0, 0) && tstate->c_tracefunc && __pyx_frame->f_trace) {\
                  ret = __Pyx_call_line_trace_func(tstate, __pyx_frame, lineno);\
              }\
              PyGILState_Release(state);\
              if (unlikely(ret)) goto_error;\
          }\
      } else {\
          PyThreadState* tstate = __Pyx_PyThreadState_Current;\
          if (__Pyx_IsTracing(tstate, 0, 0) && tstate->c_tracefunc && __pyx_frame->f_trace) {\
              int ret = __Pyx_call_line_trace_func(tstate, __pyx_frame, lineno);\
              if (unlikely(ret)) goto_error;\
          }\
      }\
  }
  #else
  #define __Pyx_TraceLine(lineno, nogil, goto_error)\
  if (likely(!__Pyx_use_tracing)); else {\
      PyThreadState* tstate = __Pyx_PyThreadState_Current;\
      if (__Pyx_IsTracing(tstate, 0, 0) && tstate->c_tracefunc && __pyx_frame->f_trace) {\
          int ret = __Pyx_call_line_trace_func(tstate, __pyx_frame, lineno);\
          if (unlikely(ret)) goto_error;\
      }\
  }
  #endif
#else
  #define __Pyx_TraceLine(lineno, nogil, goto_error)   if ((1)); else goto_error;
#endif

/* PyDictVersioning.proto */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
        (VAR) = __pyx_dict_cached_value;\
    } else {\
        (VAR) = __pyx_dict_cached_value = (LOOKUP);\
        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
    }\
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* None.proto */
static CYTHON_INLINE int __Pyx_ErrOccurredWithGIL(void); /* proto */

/* GCCDiagnostics.proto */
#if defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6))
#define __Pyx_HAS_GCC_DIAGNOSTIC
#endif

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* FunctionExport.proto */
static int __Pyx_ExportFunction(const char *name, void (*f)(void), const char *sig);

/* FunctionImport.proto */
static int __Pyx_ImportFunction(PyObject *module, const char *funcname, void (**f)(void), const char *sig);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);


/* Module declarations from 'libc.stdint' */

/* Module declarations from 'cuda._cuda.ccuda' */
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGetErrorString)(__pyx_t_4cuda_5ccuda_CUresult, char const **); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGetErrorName)(__pyx_t_4cuda_5ccuda_CUresult, char const **); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuInit)(unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDriverGetVersion)(int *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGet)(__pyx_t_4cuda_5ccuda_CUdevice *, int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetCount)(int *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetName)(char *, int, __pyx_t_4cuda_5ccuda_CUdevice); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetUuid)(__pyx_t_4cuda_5ccuda_CUuuid *, __pyx_t_4cuda_5ccuda_CUdevice); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetUuid_v2)(__pyx_t_4cuda_5ccuda_CUuuid *, __pyx_t_4cuda_5ccuda_CUdevice); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetLuid)(char *, unsigned int *, __pyx_t_4cuda_5ccuda_CUdevice); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceTotalMem_v2)(size_t *, __pyx_t_4cuda_5ccuda_CUdevice); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetTexture1DLinearMaxWidth)(size_t *, __pyx_t_4cuda_5ccuda_CUarray_format, unsigned int, __pyx_t_4cuda_5ccuda_CUdevice); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetAttribute)(int *, __pyx_t_4cuda_5ccuda_CUdevice_attribute, __pyx_t_4cuda_5ccuda_CUdevice); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetNvSciSyncAttributes)(void *, __pyx_t_4cuda_5ccuda_CUdevice, int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceSetMemPool)(__pyx_t_4cuda_5ccuda_CUdevice, __pyx_t_4cuda_5ccuda_CUmemoryPool); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetMemPool)(__pyx_t_4cuda_5ccuda_CUmemoryPool *, __pyx_t_4cuda_5ccuda_CUdevice); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetDefaultMemPool)(__pyx_t_4cuda_5ccuda_CUmemoryPool *, __pyx_t_4cuda_5ccuda_CUdevice); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuFlushGPUDirectRDMAWrites)(__pyx_t_4cuda_5ccuda_CUflushGPUDirectRDMAWritesTarget, __pyx_t_4cuda_5ccuda_CUflushGPUDirectRDMAWritesScope); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetProperties)(__pyx_t_4cuda_5ccuda_CUdevprop *, __pyx_t_4cuda_5ccuda_CUdevice); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceComputeCapability)(int *, int *, __pyx_t_4cuda_5ccuda_CUdevice); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDevicePrimaryCtxRetain)(__pyx_t_4cuda_5ccuda_CUcontext *, __pyx_t_4cuda_5ccuda_CUdevice); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDevicePrimaryCtxRelease_v2)(__pyx_t_4cuda_5ccuda_CUdevice); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDevicePrimaryCtxSetFlags_v2)(__pyx_t_4cuda_5ccuda_CUdevice, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDevicePrimaryCtxGetState)(__pyx_t_4cuda_5ccuda_CUdevice, unsigned int *, int *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDevicePrimaryCtxReset_v2)(__pyx_t_4cuda_5ccuda_CUdevice); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetExecAffinitySupport)(int *, __pyx_t_4cuda_5ccuda_CUexecAffinityType, __pyx_t_4cuda_5ccuda_CUdevice); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuCtxCreate_v2)(__pyx_t_4cuda_5ccuda_CUcontext *, unsigned int, __pyx_t_4cuda_5ccuda_CUdevice); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuCtxCreate_v3)(__pyx_t_4cuda_5ccuda_CUcontext *, __pyx_t_4cuda_5ccuda_CUexecAffinityParam *, int, unsigned int, __pyx_t_4cuda_5ccuda_CUdevice); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuCtxDestroy_v2)(__pyx_t_4cuda_5ccuda_CUcontext); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuCtxPushCurrent_v2)(__pyx_t_4cuda_5ccuda_CUcontext); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuCtxPopCurrent_v2)(__pyx_t_4cuda_5ccuda_CUcontext *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuCtxSetCurrent)(__pyx_t_4cuda_5ccuda_CUcontext); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuCtxGetCurrent)(__pyx_t_4cuda_5ccuda_CUcontext *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuCtxGetDevice)(__pyx_t_4cuda_5ccuda_CUdevice *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuCtxGetFlags)(unsigned int *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuCtxSynchronize)(void); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuCtxSetLimit)(__pyx_t_4cuda_5ccuda_CUlimit, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuCtxGetLimit)(size_t *, __pyx_t_4cuda_5ccuda_CUlimit); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuCtxGetCacheConfig)(__pyx_t_4cuda_5ccuda_CUfunc_cache *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuCtxSetCacheConfig)(__pyx_t_4cuda_5ccuda_CUfunc_cache); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuCtxGetSharedMemConfig)(__pyx_t_4cuda_5ccuda_CUsharedconfig *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuCtxSetSharedMemConfig)(__pyx_t_4cuda_5ccuda_CUsharedconfig); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuCtxGetApiVersion)(__pyx_t_4cuda_5ccuda_CUcontext, unsigned int *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuCtxGetStreamPriorityRange)(int *, int *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuCtxResetPersistingL2Cache)(void); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuCtxGetExecAffinity)(__pyx_t_4cuda_5ccuda_CUexecAffinityParam *, __pyx_t_4cuda_5ccuda_CUexecAffinityType); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuCtxAttach)(__pyx_t_4cuda_5ccuda_CUcontext *, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuCtxDetach)(__pyx_t_4cuda_5ccuda_CUcontext); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuModuleLoad)(__pyx_t_4cuda_5ccuda_CUmodule *, char const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuModuleLoadData)(__pyx_t_4cuda_5ccuda_CUmodule *, void const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuModuleLoadDataEx)(__pyx_t_4cuda_5ccuda_CUmodule *, void const *, unsigned int, __pyx_t_4cuda_5ccuda_CUjit_option *, void **); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuModuleLoadFatBinary)(__pyx_t_4cuda_5ccuda_CUmodule *, void const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuModuleUnload)(__pyx_t_4cuda_5ccuda_CUmodule); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuModuleGetFunction)(__pyx_t_4cuda_5ccuda_CUfunction *, __pyx_t_4cuda_5ccuda_CUmodule, char const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuModuleGetGlobal_v2)(__pyx_t_4cuda_5ccuda_CUdeviceptr *, size_t *, __pyx_t_4cuda_5ccuda_CUmodule, char const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuModuleGetTexRef)(__pyx_t_4cuda_5ccuda_CUtexref *, __pyx_t_4cuda_5ccuda_CUmodule, char const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuModuleGetSurfRef)(__pyx_t_4cuda_5ccuda_CUsurfref *, __pyx_t_4cuda_5ccuda_CUmodule, char const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuLinkCreate_v2)(unsigned int, __pyx_t_4cuda_5ccuda_CUjit_option *, void **, __pyx_t_4cuda_5ccuda_CUlinkState *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuLinkAddData_v2)(__pyx_t_4cuda_5ccuda_CUlinkState, __pyx_t_4cuda_5ccuda_CUjitInputType, void *, size_t, char const *, unsigned int, __pyx_t_4cuda_5ccuda_CUjit_option *, void **); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuLinkAddFile_v2)(__pyx_t_4cuda_5ccuda_CUlinkState, __pyx_t_4cuda_5ccuda_CUjitInputType, char const *, unsigned int, __pyx_t_4cuda_5ccuda_CUjit_option *, void **); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuLinkComplete)(__pyx_t_4cuda_5ccuda_CUlinkState, void **, size_t *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuLinkDestroy)(__pyx_t_4cuda_5ccuda_CUlinkState); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemGetInfo_v2)(size_t *, size_t *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemAlloc_v2)(__pyx_t_4cuda_5ccuda_CUdeviceptr *, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemAllocPitch_v2)(__pyx_t_4cuda_5ccuda_CUdeviceptr *, size_t *, size_t, size_t, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemFree_v2)(__pyx_t_4cuda_5ccuda_CUdeviceptr); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemGetAddressRange_v2)(__pyx_t_4cuda_5ccuda_CUdeviceptr *, size_t *, __pyx_t_4cuda_5ccuda_CUdeviceptr); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemAllocHost_v2)(void **, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemFreeHost)(void *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemHostAlloc)(void **, size_t, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemHostGetDevicePointer_v2)(__pyx_t_4cuda_5ccuda_CUdeviceptr *, void *, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemHostGetFlags)(unsigned int *, void *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemAllocManaged)(__pyx_t_4cuda_5ccuda_CUdeviceptr *, size_t, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetByPCIBusId)(__pyx_t_4cuda_5ccuda_CUdevice *, char const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetPCIBusId)(char *, int, __pyx_t_4cuda_5ccuda_CUdevice); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuIpcGetEventHandle)(__pyx_t_4cuda_5ccuda_CUipcEventHandle *, __pyx_t_4cuda_5ccuda_CUevent); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuIpcOpenEventHandle)(__pyx_t_4cuda_5ccuda_CUevent *, __pyx_t_4cuda_5ccuda_CUipcEventHandle); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuIpcGetMemHandle)(__pyx_t_4cuda_5ccuda_CUipcMemHandle *, __pyx_t_4cuda_5ccuda_CUdeviceptr); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuIpcOpenMemHandle_v2)(__pyx_t_4cuda_5ccuda_CUdeviceptr *, __pyx_t_4cuda_5ccuda_CUipcMemHandle, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuIpcCloseMemHandle)(__pyx_t_4cuda_5ccuda_CUdeviceptr); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemHostRegister_v2)(void *, size_t, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemHostUnregister)(void *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpy)(__pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyPeer)(__pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_CUcontext, __pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_CUcontext, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyHtoD_v2)(__pyx_t_4cuda_5ccuda_CUdeviceptr, void const *, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyDtoH_v2)(void *, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyDtoD_v2)(__pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyDtoA_v2)(__pyx_t_4cuda_5ccuda_CUarray, size_t, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyAtoD_v2)(__pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_CUarray, size_t, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyHtoA_v2)(__pyx_t_4cuda_5ccuda_CUarray, size_t, void const *, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyAtoH_v2)(void *, __pyx_t_4cuda_5ccuda_CUarray, size_t, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyAtoA_v2)(__pyx_t_4cuda_5ccuda_CUarray, size_t, __pyx_t_4cuda_5ccuda_CUarray, size_t, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpy2D_v2)(__pyx_t_4cuda_5ccuda_CUDA_MEMCPY2D const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpy2DUnaligned_v2)(__pyx_t_4cuda_5ccuda_CUDA_MEMCPY2D const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpy3D_v2)(__pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpy3DPeer)(__pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D_PEER const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyAsync)(__pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, __pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyPeerAsync)(__pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_CUcontext, __pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_CUcontext, size_t, __pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyHtoDAsync_v2)(__pyx_t_4cuda_5ccuda_CUdeviceptr, void const *, size_t, __pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyDtoHAsync_v2)(void *, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, __pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyDtoDAsync_v2)(__pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, __pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyHtoAAsync_v2)(__pyx_t_4cuda_5ccuda_CUarray, size_t, void const *, size_t, __pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyAtoHAsync_v2)(void *, __pyx_t_4cuda_5ccuda_CUarray, size_t, size_t, __pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpy2DAsync_v2)(__pyx_t_4cuda_5ccuda_CUDA_MEMCPY2D const *, __pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpy3DAsync_v2)(__pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D const *, __pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpy3DPeerAsync)(__pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D_PEER const *, __pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD8_v2)(__pyx_t_4cuda_5ccuda_CUdeviceptr, unsigned char, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD16_v2)(__pyx_t_4cuda_5ccuda_CUdeviceptr, unsigned short, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD32_v2)(__pyx_t_4cuda_5ccuda_CUdeviceptr, unsigned int, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD2D8_v2)(__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, unsigned char, size_t, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD2D16_v2)(__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, unsigned short, size_t, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD2D32_v2)(__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, unsigned int, size_t, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD8Async)(__pyx_t_4cuda_5ccuda_CUdeviceptr, unsigned char, size_t, __pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD16Async)(__pyx_t_4cuda_5ccuda_CUdeviceptr, unsigned short, size_t, __pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD32Async)(__pyx_t_4cuda_5ccuda_CUdeviceptr, unsigned int, size_t, __pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD2D8Async)(__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, unsigned char, size_t, size_t, __pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD2D16Async)(__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, unsigned short, size_t, size_t, __pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD2D32Async)(__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, unsigned int, size_t, size_t, __pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuArrayCreate_v2)(__pyx_t_4cuda_5ccuda_CUarray *, __pyx_t_4cuda_5ccuda_CUDA_ARRAY_DESCRIPTOR const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuArrayGetDescriptor_v2)(__pyx_t_4cuda_5ccuda_CUDA_ARRAY_DESCRIPTOR *, __pyx_t_4cuda_5ccuda_CUarray); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuArrayGetSparseProperties)(__pyx_t_4cuda_5ccuda_CUDA_ARRAY_SPARSE_PROPERTIES *, __pyx_t_4cuda_5ccuda_CUarray); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMipmappedArrayGetSparseProperties)(__pyx_t_4cuda_5ccuda_CUDA_ARRAY_SPARSE_PROPERTIES *, __pyx_t_4cuda_5ccuda_CUmipmappedArray); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuArrayGetPlane)(__pyx_t_4cuda_5ccuda_CUarray *, __pyx_t_4cuda_5ccuda_CUarray, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuArrayDestroy)(__pyx_t_4cuda_5ccuda_CUarray); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuArray3DCreate_v2)(__pyx_t_4cuda_5ccuda_CUarray *, __pyx_t_4cuda_5ccuda_CUDA_ARRAY3D_DESCRIPTOR const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuArray3DGetDescriptor_v2)(__pyx_t_4cuda_5ccuda_CUDA_ARRAY3D_DESCRIPTOR *, __pyx_t_4cuda_5ccuda_CUarray); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMipmappedArrayCreate)(__pyx_t_4cuda_5ccuda_CUmipmappedArray *, __pyx_t_4cuda_5ccuda_CUDA_ARRAY3D_DESCRIPTOR const *, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMipmappedArrayGetLevel)(__pyx_t_4cuda_5ccuda_CUarray *, __pyx_t_4cuda_5ccuda_CUmipmappedArray, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMipmappedArrayDestroy)(__pyx_t_4cuda_5ccuda_CUmipmappedArray); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemAddressReserve)(__pyx_t_4cuda_5ccuda_CUdeviceptr *, size_t, size_t, __pyx_t_4cuda_5ccuda_CUdeviceptr, unsigned PY_LONG_LONG); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemAddressFree)(__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemCreate)(__pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle *, size_t, __pyx_t_4cuda_5ccuda_CUmemAllocationProp const *, unsigned PY_LONG_LONG); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemRelease)(__pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemMap)(__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, size_t, __pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle, unsigned PY_LONG_LONG); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemMapArrayAsync)(__pyx_t_4cuda_5ccuda_CUarrayMapInfo *, unsigned int, __pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemUnmap)(__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemSetAccess)(__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, __pyx_t_4cuda_5ccuda_CUmemAccessDesc const *, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemGetAccess)(unsigned PY_LONG_LONG *, __pyx_t_4cuda_5ccuda_CUmemLocation const *, __pyx_t_4cuda_5ccuda_CUdeviceptr); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemExportToShareableHandle)(void *, __pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle, __pyx_t_4cuda_5ccuda_CUmemAllocationHandleType, unsigned PY_LONG_LONG); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemImportFromShareableHandle)(__pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle *, void *, __pyx_t_4cuda_5ccuda_CUmemAllocationHandleType); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemGetAllocationGranularity)(size_t *, __pyx_t_4cuda_5ccuda_CUmemAllocationProp const *, __pyx_t_4cuda_5ccuda_CUmemAllocationGranularity_flags); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemGetAllocationPropertiesFromHandle)(__pyx_t_4cuda_5ccuda_CUmemAllocationProp *, __pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemRetainAllocationHandle)(__pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle *, void *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemFreeAsync)(__pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemAllocAsync)(__pyx_t_4cuda_5ccuda_CUdeviceptr *, size_t, __pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolTrimTo)(__pyx_t_4cuda_5ccuda_CUmemoryPool, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolSetAttribute)(__pyx_t_4cuda_5ccuda_CUmemoryPool, __pyx_t_4cuda_5ccuda_CUmemPool_attribute, void *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolGetAttribute)(__pyx_t_4cuda_5ccuda_CUmemoryPool, __pyx_t_4cuda_5ccuda_CUmemPool_attribute, void *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolSetAccess)(__pyx_t_4cuda_5ccuda_CUmemoryPool, __pyx_t_4cuda_5ccuda_CUmemAccessDesc const *, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolGetAccess)(__pyx_t_4cuda_5ccuda_CUmemAccess_flags *, __pyx_t_4cuda_5ccuda_CUmemoryPool, __pyx_t_4cuda_5ccuda_CUmemLocation *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolCreate)(__pyx_t_4cuda_5ccuda_CUmemoryPool *, __pyx_t_4cuda_5ccuda_CUmemPoolProps const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolDestroy)(__pyx_t_4cuda_5ccuda_CUmemoryPool); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemAllocFromPoolAsync)(__pyx_t_4cuda_5ccuda_CUdeviceptr *, size_t, __pyx_t_4cuda_5ccuda_CUmemoryPool, __pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolExportToShareableHandle)(void *, __pyx_t_4cuda_5ccuda_CUmemoryPool, __pyx_t_4cuda_5ccuda_CUmemAllocationHandleType, unsigned PY_LONG_LONG); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolImportFromShareableHandle)(__pyx_t_4cuda_5ccuda_CUmemoryPool *, void *, __pyx_t_4cuda_5ccuda_CUmemAllocationHandleType, unsigned PY_LONG_LONG); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolExportPointer)(__pyx_t_4cuda_5ccuda_CUmemPoolPtrExportData *, __pyx_t_4cuda_5ccuda_CUdeviceptr); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolImportPointer)(__pyx_t_4cuda_5ccuda_CUdeviceptr *, __pyx_t_4cuda_5ccuda_CUmemoryPool, __pyx_t_4cuda_5ccuda_CUmemPoolPtrExportData *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuPointerGetAttribute)(void *, __pyx_t_4cuda_5ccuda_CUpointer_attribute, __pyx_t_4cuda_5ccuda_CUdeviceptr); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemPrefetchAsync)(__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, __pyx_t_4cuda_5ccuda_CUdevice, __pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemAdvise)(__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, __pyx_t_4cuda_5ccuda_CUmem_advise, __pyx_t_4cuda_5ccuda_CUdevice); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemRangeGetAttribute)(void *, size_t, __pyx_t_4cuda_5ccuda_CUmem_range_attribute, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuMemRangeGetAttributes)(void **, size_t *, __pyx_t_4cuda_5ccuda_CUmem_range_attribute *, size_t, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuPointerSetAttribute)(void const *, __pyx_t_4cuda_5ccuda_CUpointer_attribute, __pyx_t_4cuda_5ccuda_CUdeviceptr); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuPointerGetAttributes)(unsigned int, __pyx_t_4cuda_5ccuda_CUpointer_attribute *, void **, __pyx_t_4cuda_5ccuda_CUdeviceptr); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuStreamCreate)(__pyx_t_4cuda_5ccuda_CUstream *, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuStreamCreateWithPriority)(__pyx_t_4cuda_5ccuda_CUstream *, unsigned int, int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuStreamGetPriority)(__pyx_t_4cuda_5ccuda_CUstream, int *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuStreamGetFlags)(__pyx_t_4cuda_5ccuda_CUstream, unsigned int *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuStreamGetCtx)(__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUcontext *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuStreamWaitEvent)(__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUevent, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuStreamAddCallback)(__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUstreamCallback, void *, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuStreamBeginCapture_v2)(__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUstreamCaptureMode); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuThreadExchangeStreamCaptureMode)(__pyx_t_4cuda_5ccuda_CUstreamCaptureMode *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuStreamEndCapture)(__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUgraph *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuStreamIsCapturing)(__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUstreamCaptureStatus *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuStreamGetCaptureInfo)(__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUstreamCaptureStatus *, __pyx_t_4cuda_5ccuda_cuuint64_t *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuStreamGetCaptureInfo_v2)(__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUstreamCaptureStatus *, __pyx_t_4cuda_5ccuda_cuuint64_t *, __pyx_t_4cuda_5ccuda_CUgraph *, __pyx_t_4cuda_5ccuda_CUgraphNode const **, size_t *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuStreamUpdateCaptureDependencies)(__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUgraphNode *, size_t, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuStreamAttachMemAsync)(__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuStreamQuery)(__pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuStreamSynchronize)(__pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuStreamDestroy_v2)(__pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuStreamCopyAttributes)(__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuStreamGetAttribute)(__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUstreamAttrID, __pyx_t_4cuda_5ccuda_CUstreamAttrValue *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuStreamSetAttribute)(__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUstreamAttrID, __pyx_t_4cuda_5ccuda_CUstreamAttrValue const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuEventCreate)(__pyx_t_4cuda_5ccuda_CUevent *, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuEventRecord)(__pyx_t_4cuda_5ccuda_CUevent, __pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuEventRecordWithFlags)(__pyx_t_4cuda_5ccuda_CUevent, __pyx_t_4cuda_5ccuda_CUstream, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuEventQuery)(__pyx_t_4cuda_5ccuda_CUevent); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuEventSynchronize)(__pyx_t_4cuda_5ccuda_CUevent); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuEventDestroy_v2)(__pyx_t_4cuda_5ccuda_CUevent); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuEventElapsedTime)(float *, __pyx_t_4cuda_5ccuda_CUevent, __pyx_t_4cuda_5ccuda_CUevent); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuImportExternalMemory)(__pyx_t_4cuda_5ccuda_CUexternalMemory *, __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_HANDLE_DESC const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuExternalMemoryGetMappedBuffer)(__pyx_t_4cuda_5ccuda_CUdeviceptr *, __pyx_t_4cuda_5ccuda_CUexternalMemory, __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_BUFFER_DESC const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuExternalMemoryGetMappedMipmappedArray)(__pyx_t_4cuda_5ccuda_CUmipmappedArray *, __pyx_t_4cuda_5ccuda_CUexternalMemory, __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDestroyExternalMemory)(__pyx_t_4cuda_5ccuda_CUexternalMemory); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuImportExternalSemaphore)(__pyx_t_4cuda_5ccuda_CUexternalSemaphore *, __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuSignalExternalSemaphoresAsync)(__pyx_t_4cuda_5ccuda_CUexternalSemaphore const *, __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS const *, unsigned int, __pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuWaitExternalSemaphoresAsync)(__pyx_t_4cuda_5ccuda_CUexternalSemaphore const *, __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS const *, unsigned int, __pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDestroyExternalSemaphore)(__pyx_t_4cuda_5ccuda_CUexternalSemaphore); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuStreamWaitValue32)(__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_cuuint32_t, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuStreamWaitValue64)(__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_cuuint64_t, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuStreamWriteValue32)(__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_cuuint32_t, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuStreamWriteValue64)(__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_cuuint64_t, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuStreamBatchMemOp)(__pyx_t_4cuda_5ccuda_CUstream, unsigned int, __pyx_t_4cuda_5ccuda_CUstreamBatchMemOpParams *, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuFuncGetAttribute)(int *, __pyx_t_4cuda_5ccuda_CUfunction_attribute, __pyx_t_4cuda_5ccuda_CUfunction); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuFuncSetAttribute)(__pyx_t_4cuda_5ccuda_CUfunction, __pyx_t_4cuda_5ccuda_CUfunction_attribute, int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuFuncSetCacheConfig)(__pyx_t_4cuda_5ccuda_CUfunction, __pyx_t_4cuda_5ccuda_CUfunc_cache); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuFuncSetSharedMemConfig)(__pyx_t_4cuda_5ccuda_CUfunction, __pyx_t_4cuda_5ccuda_CUsharedconfig); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuFuncGetModule)(__pyx_t_4cuda_5ccuda_CUmodule *, __pyx_t_4cuda_5ccuda_CUfunction); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuLaunchKernel)(__pyx_t_4cuda_5ccuda_CUfunction, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, __pyx_t_4cuda_5ccuda_CUstream, void **, void **); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuLaunchCooperativeKernel)(__pyx_t_4cuda_5ccuda_CUfunction, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, __pyx_t_4cuda_5ccuda_CUstream, void **); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuLaunchCooperativeKernelMultiDevice)(__pyx_t_4cuda_5ccuda_CUDA_LAUNCH_PARAMS *, unsigned int, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuLaunchHostFunc)(__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUhostFn, void *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuFuncSetBlockShape)(__pyx_t_4cuda_5ccuda_CUfunction, int, int, int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuFuncSetSharedSize)(__pyx_t_4cuda_5ccuda_CUfunction, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuParamSetSize)(__pyx_t_4cuda_5ccuda_CUfunction, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuParamSeti)(__pyx_t_4cuda_5ccuda_CUfunction, int, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuParamSetf)(__pyx_t_4cuda_5ccuda_CUfunction, int, float); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuParamSetv)(__pyx_t_4cuda_5ccuda_CUfunction, int, void *, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuLaunch)(__pyx_t_4cuda_5ccuda_CUfunction); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuLaunchGrid)(__pyx_t_4cuda_5ccuda_CUfunction, int, int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuLaunchGridAsync)(__pyx_t_4cuda_5ccuda_CUfunction, int, int, __pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuParamSetTexRef)(__pyx_t_4cuda_5ccuda_CUfunction, int, __pyx_t_4cuda_5ccuda_CUtexref); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphCreate)(__pyx_t_4cuda_5ccuda_CUgraph *, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddKernelNode)(__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUDA_KERNEL_NODE_PARAMS const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphKernelNodeGetParams)(__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_KERNEL_NODE_PARAMS *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphKernelNodeSetParams)(__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_KERNEL_NODE_PARAMS const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddMemcpyNode)(__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D const *, __pyx_t_4cuda_5ccuda_CUcontext); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphMemcpyNodeGetParams)(__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphMemcpyNodeSetParams)(__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddMemsetNode)(__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUDA_MEMSET_NODE_PARAMS const *, __pyx_t_4cuda_5ccuda_CUcontext); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphMemsetNodeGetParams)(__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_MEMSET_NODE_PARAMS *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphMemsetNodeSetParams)(__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_MEMSET_NODE_PARAMS const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddHostNode)(__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUDA_HOST_NODE_PARAMS const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphHostNodeGetParams)(__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_HOST_NODE_PARAMS *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphHostNodeSetParams)(__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_HOST_NODE_PARAMS const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddChildGraphNode)(__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUgraph); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphChildGraphNodeGetGraph)(__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUgraph *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddEmptyNode)(__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddEventRecordNode)(__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUevent); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphEventRecordNodeGetEvent)(__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUevent *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphEventRecordNodeSetEvent)(__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUevent); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddEventWaitNode)(__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUevent); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphEventWaitNodeGetEvent)(__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUevent *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphEventWaitNodeSetEvent)(__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUevent); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddExternalSemaphoresSignalNode)(__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_SIGNAL_NODE_PARAMS const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphExternalSemaphoresSignalNodeGetParams)(__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_SIGNAL_NODE_PARAMS *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphExternalSemaphoresSignalNodeSetParams)(__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_SIGNAL_NODE_PARAMS const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddExternalSemaphoresWaitNode)(__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_WAIT_NODE_PARAMS const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphExternalSemaphoresWaitNodeGetParams)(__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_WAIT_NODE_PARAMS *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphExternalSemaphoresWaitNodeSetParams)(__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_WAIT_NODE_PARAMS const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddMemAllocNode)(__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUDA_MEM_ALLOC_NODE_PARAMS *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphMemAllocNodeGetParams)(__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_MEM_ALLOC_NODE_PARAMS *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddMemFreeNode)(__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUdeviceptr); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphMemFreeNodeGetParams)(__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUdeviceptr *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGraphMemTrim)(__pyx_t_4cuda_5ccuda_CUdevice); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetGraphMemAttribute)(__pyx_t_4cuda_5ccuda_CUdevice, __pyx_t_4cuda_5ccuda_CUgraphMem_attribute, void *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceSetGraphMemAttribute)(__pyx_t_4cuda_5ccuda_CUdevice, __pyx_t_4cuda_5ccuda_CUgraphMem_attribute, void *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphClone)(__pyx_t_4cuda_5ccuda_CUgraph *, __pyx_t_4cuda_5ccuda_CUgraph); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphNodeFindInClone)(__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUgraph); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphNodeGetType)(__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUgraphNodeType *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphGetNodes)(__pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode *, size_t *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphGetRootNodes)(__pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode *, size_t *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphGetEdges)(__pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraphNode *, size_t *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphNodeGetDependencies)(__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUgraphNode *, size_t *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphNodeGetDependentNodes)(__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUgraphNode *, size_t *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddDependencies)(__pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphRemoveDependencies)(__pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphDestroyNode)(__pyx_t_4cuda_5ccuda_CUgraphNode); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphInstantiate_v2)(__pyx_t_4cuda_5ccuda_CUgraphExec *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode *, char *, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphInstantiateWithFlags)(__pyx_t_4cuda_5ccuda_CUgraphExec *, __pyx_t_4cuda_5ccuda_CUgraph, unsigned PY_LONG_LONG); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecKernelNodeSetParams)(__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_KERNEL_NODE_PARAMS const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecMemcpyNodeSetParams)(__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D const *, __pyx_t_4cuda_5ccuda_CUcontext); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecMemsetNodeSetParams)(__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_MEMSET_NODE_PARAMS const *, __pyx_t_4cuda_5ccuda_CUcontext); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecHostNodeSetParams)(__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_HOST_NODE_PARAMS const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecChildGraphNodeSetParams)(__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUgraph); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecEventRecordNodeSetEvent)(__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUevent); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecEventWaitNodeSetEvent)(__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUevent); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecExternalSemaphoresSignalNodeSetParams)(__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_SIGNAL_NODE_PARAMS const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecExternalSemaphoresWaitNodeSetParams)(__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_WAIT_NODE_PARAMS const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphUpload)(__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphLaunch)(__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecDestroy)(__pyx_t_4cuda_5ccuda_CUgraphExec); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphDestroy)(__pyx_t_4cuda_5ccuda_CUgraph); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecUpdate)(__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraphExecUpdateResult *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphKernelNodeCopyAttributes)(__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUgraphNode); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphKernelNodeGetAttribute)(__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUkernelNodeAttrID, __pyx_t_4cuda_5ccuda_CUkernelNodeAttrValue *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphKernelNodeSetAttribute)(__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUkernelNodeAttrID, __pyx_t_4cuda_5ccuda_CUkernelNodeAttrValue const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphDebugDotPrint)(__pyx_t_4cuda_5ccuda_CUgraph, char const *, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuUserObjectCreate)(__pyx_t_4cuda_5ccuda_CUuserObject *, void *, __pyx_t_4cuda_5ccuda_CUhostFn, unsigned int, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuUserObjectRetain)(__pyx_t_4cuda_5ccuda_CUuserObject, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuUserObjectRelease)(__pyx_t_4cuda_5ccuda_CUuserObject, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphRetainUserObject)(__pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUuserObject, unsigned int, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphReleaseUserObject)(__pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUuserObject, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuOccupancyMaxActiveBlocksPerMultiprocessor)(int *, __pyx_t_4cuda_5ccuda_CUfunction, int, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags)(int *, __pyx_t_4cuda_5ccuda_CUfunction, int, size_t, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuOccupancyMaxPotentialBlockSize)(int *, int *, __pyx_t_4cuda_5ccuda_CUfunction, __pyx_t_4cuda_5ccuda_CUoccupancyB2DSize, size_t, int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuOccupancyMaxPotentialBlockSizeWithFlags)(int *, int *, __pyx_t_4cuda_5ccuda_CUfunction, __pyx_t_4cuda_5ccuda_CUoccupancyB2DSize, size_t, int, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuOccupancyAvailableDynamicSMemPerBlock)(size_t *, __pyx_t_4cuda_5ccuda_CUfunction, int, int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetArray)(__pyx_t_4cuda_5ccuda_CUtexref, __pyx_t_4cuda_5ccuda_CUarray, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetMipmappedArray)(__pyx_t_4cuda_5ccuda_CUtexref, __pyx_t_4cuda_5ccuda_CUmipmappedArray, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetAddress_v2)(size_t *, __pyx_t_4cuda_5ccuda_CUtexref, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetAddress2D_v3)(__pyx_t_4cuda_5ccuda_CUtexref, __pyx_t_4cuda_5ccuda_CUDA_ARRAY_DESCRIPTOR const *, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetFormat)(__pyx_t_4cuda_5ccuda_CUtexref, __pyx_t_4cuda_5ccuda_CUarray_format, int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetAddressMode)(__pyx_t_4cuda_5ccuda_CUtexref, int, __pyx_t_4cuda_5ccuda_CUaddress_mode); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetFilterMode)(__pyx_t_4cuda_5ccuda_CUtexref, __pyx_t_4cuda_5ccuda_CUfilter_mode); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetMipmapFilterMode)(__pyx_t_4cuda_5ccuda_CUtexref, __pyx_t_4cuda_5ccuda_CUfilter_mode); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetMipmapLevelBias)(__pyx_t_4cuda_5ccuda_CUtexref, float); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetMipmapLevelClamp)(__pyx_t_4cuda_5ccuda_CUtexref, float, float); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetMaxAnisotropy)(__pyx_t_4cuda_5ccuda_CUtexref, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetBorderColor)(__pyx_t_4cuda_5ccuda_CUtexref, float *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetFlags)(__pyx_t_4cuda_5ccuda_CUtexref, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetAddress_v2)(__pyx_t_4cuda_5ccuda_CUdeviceptr *, __pyx_t_4cuda_5ccuda_CUtexref); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetArray)(__pyx_t_4cuda_5ccuda_CUarray *, __pyx_t_4cuda_5ccuda_CUtexref); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetMipmappedArray)(__pyx_t_4cuda_5ccuda_CUmipmappedArray *, __pyx_t_4cuda_5ccuda_CUtexref); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetAddressMode)(__pyx_t_4cuda_5ccuda_CUaddress_mode *, __pyx_t_4cuda_5ccuda_CUtexref, int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetFilterMode)(__pyx_t_4cuda_5ccuda_CUfilter_mode *, __pyx_t_4cuda_5ccuda_CUtexref); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetFormat)(__pyx_t_4cuda_5ccuda_CUarray_format *, int *, __pyx_t_4cuda_5ccuda_CUtexref); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetMipmapFilterMode)(__pyx_t_4cuda_5ccuda_CUfilter_mode *, __pyx_t_4cuda_5ccuda_CUtexref); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetMipmapLevelBias)(float *, __pyx_t_4cuda_5ccuda_CUtexref); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetMipmapLevelClamp)(float *, float *, __pyx_t_4cuda_5ccuda_CUtexref); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetMaxAnisotropy)(int *, __pyx_t_4cuda_5ccuda_CUtexref); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetBorderColor)(float *, __pyx_t_4cuda_5ccuda_CUtexref); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetFlags)(unsigned int *, __pyx_t_4cuda_5ccuda_CUtexref); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefCreate)(__pyx_t_4cuda_5ccuda_CUtexref *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefDestroy)(__pyx_t_4cuda_5ccuda_CUtexref); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuSurfRefSetArray)(__pyx_t_4cuda_5ccuda_CUsurfref, __pyx_t_4cuda_5ccuda_CUarray, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuSurfRefGetArray)(__pyx_t_4cuda_5ccuda_CUarray *, __pyx_t_4cuda_5ccuda_CUsurfref); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexObjectCreate)(__pyx_t_4cuda_5ccuda_CUtexObject *, __pyx_t_4cuda_5ccuda_CUDA_RESOURCE_DESC const *, __pyx_t_4cuda_5ccuda_CUDA_TEXTURE_DESC const *, __pyx_t_4cuda_5ccuda_CUDA_RESOURCE_VIEW_DESC const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexObjectDestroy)(__pyx_t_4cuda_5ccuda_CUtexObject); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexObjectGetResourceDesc)(__pyx_t_4cuda_5ccuda_CUDA_RESOURCE_DESC *, __pyx_t_4cuda_5ccuda_CUtexObject); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexObjectGetTextureDesc)(__pyx_t_4cuda_5ccuda_CUDA_TEXTURE_DESC *, __pyx_t_4cuda_5ccuda_CUtexObject); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuTexObjectGetResourceViewDesc)(__pyx_t_4cuda_5ccuda_CUDA_RESOURCE_VIEW_DESC *, __pyx_t_4cuda_5ccuda_CUtexObject); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuSurfObjectCreate)(__pyx_t_4cuda_5ccuda_CUsurfObject *, __pyx_t_4cuda_5ccuda_CUDA_RESOURCE_DESC const *); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuSurfObjectDestroy)(__pyx_t_4cuda_5ccuda_CUsurfObject); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuSurfObjectGetResourceDesc)(__pyx_t_4cuda_5ccuda_CUDA_RESOURCE_DESC *, __pyx_t_4cuda_5ccuda_CUsurfObject); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceCanAccessPeer)(int *, __pyx_t_4cuda_5ccuda_CUdevice, __pyx_t_4cuda_5ccuda_CUdevice); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuCtxEnablePeerAccess)(__pyx_t_4cuda_5ccuda_CUcontext, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuCtxDisablePeerAccess)(__pyx_t_4cuda_5ccuda_CUcontext); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetP2PAttribute)(int *, __pyx_t_4cuda_5ccuda_CUdevice_P2PAttribute, __pyx_t_4cuda_5ccuda_CUdevice, __pyx_t_4cuda_5ccuda_CUdevice); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphicsUnregisterResource)(__pyx_t_4cuda_5ccuda_CUgraphicsResource); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphicsSubResourceGetMappedArray)(__pyx_t_4cuda_5ccuda_CUarray *, __pyx_t_4cuda_5ccuda_CUgraphicsResource, unsigned int, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphicsResourceGetMappedMipmappedArray)(__pyx_t_4cuda_5ccuda_CUmipmappedArray *, __pyx_t_4cuda_5ccuda_CUgraphicsResource); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphicsResourceGetMappedPointer_v2)(__pyx_t_4cuda_5ccuda_CUdeviceptr *, size_t *, __pyx_t_4cuda_5ccuda_CUgraphicsResource); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphicsResourceSetMapFlags_v2)(__pyx_t_4cuda_5ccuda_CUgraphicsResource, unsigned int); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphicsMapResources)(unsigned int, __pyx_t_4cuda_5ccuda_CUgraphicsResource *, __pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGraphicsUnmapResources)(unsigned int, __pyx_t_4cuda_5ccuda_CUgraphicsResource *, __pyx_t_4cuda_5ccuda_CUstream); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGetProcAddress)(char const *, void **, int, __pyx_t_4cuda_5ccuda_cuuint64_t); /*proto*/
static __pyx_t_4cuda_5ccuda_CUresult (*__pyx_f_4cuda_5_cuda_5ccuda__cuGetExportTable)(void const **, __pyx_t_4cuda_5ccuda_CUuuid const *); /*proto*/

/* Module declarations from 'cuda.ccuda' */
#define __Pyx_MODULE_NAME "cuda.ccuda"
extern int __pyx_module_is_main_cuda__ccuda;
int __pyx_module_is_main_cuda__ccuda = 0;

/* Implementation of 'cuda.ccuda' */
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_name[] = "__name__";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static PyObject *__pyx_n_s_cline_in_traceback;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_n_s_test;
/* Late includes */

/* "cuda/ccuda.pyx":10
 * cimport cuda._cuda.ccuda as ccuda
 * 
 * cdef CUresult cuGetErrorString(CUresult error, const char** pStr) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGetErrorString(error, pStr)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGetErrorString(__pyx_t_4cuda_5ccuda_CUresult __pyx_v_error, char const **__pyx_v_pStr) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGetErrorString", __pyx_f[0], 10, 1, __PYX_ERR(0, 10, __pyx_L1_error));

  /* "cuda/ccuda.pyx":11
 * 
 * cdef CUresult cuGetErrorString(CUresult error, const char** pStr) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGetErrorString(error, pStr)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGetErrorName(CUresult error, const char** pStr) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGetErrorString(__pyx_v_error, __pyx_v_pStr); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 11, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":10
 * cimport cuda._cuda.ccuda as ccuda
 * 
 * cdef CUresult cuGetErrorString(CUresult error, const char** pStr) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGetErrorString(error, pStr)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGetErrorString", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":13
 *     return ccuda._cuGetErrorString(error, pStr)
 * 
 * cdef CUresult cuGetErrorName(CUresult error, const char** pStr) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGetErrorName(error, pStr)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGetErrorName(__pyx_t_4cuda_5ccuda_CUresult __pyx_v_error, char const **__pyx_v_pStr) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGetErrorName", __pyx_f[0], 13, 1, __PYX_ERR(0, 13, __pyx_L1_error));

  /* "cuda/ccuda.pyx":14
 * 
 * cdef CUresult cuGetErrorName(CUresult error, const char** pStr) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGetErrorName(error, pStr)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuInit(unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGetErrorName(__pyx_v_error, __pyx_v_pStr); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 14, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":13
 *     return ccuda._cuGetErrorString(error, pStr)
 * 
 * cdef CUresult cuGetErrorName(CUresult error, const char** pStr) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGetErrorName(error, pStr)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGetErrorName", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":16
 *     return ccuda._cuGetErrorName(error, pStr)
 * 
 * cdef CUresult cuInit(unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuInit(Flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuInit(unsigned int __pyx_v_Flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuInit", __pyx_f[0], 16, 1, __PYX_ERR(0, 16, __pyx_L1_error));

  /* "cuda/ccuda.pyx":17
 * 
 * cdef CUresult cuInit(unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuInit(Flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDriverGetVersion(int* driverVersion) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuInit(__pyx_v_Flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 17, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":16
 *     return ccuda._cuGetErrorName(error, pStr)
 * 
 * cdef CUresult cuInit(unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuInit(Flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuInit", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":19
 *     return ccuda._cuInit(Flags)
 * 
 * cdef CUresult cuDriverGetVersion(int* driverVersion) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDriverGetVersion(driverVersion)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDriverGetVersion(int *__pyx_v_driverVersion) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDriverGetVersion", __pyx_f[0], 19, 1, __PYX_ERR(0, 19, __pyx_L1_error));

  /* "cuda/ccuda.pyx":20
 * 
 * cdef CUresult cuDriverGetVersion(int* driverVersion) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDriverGetVersion(driverVersion)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDeviceGet(CUdevice* device, int ordinal) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDriverGetVersion(__pyx_v_driverVersion); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 20, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":19
 *     return ccuda._cuInit(Flags)
 * 
 * cdef CUresult cuDriverGetVersion(int* driverVersion) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDriverGetVersion(driverVersion)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDriverGetVersion", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":22
 *     return ccuda._cuDriverGetVersion(driverVersion)
 * 
 * cdef CUresult cuDeviceGet(CUdevice* device, int ordinal) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGet(device, ordinal)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDeviceGet(__pyx_t_4cuda_5ccuda_CUdevice *__pyx_v_device, int __pyx_v_ordinal) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDeviceGet", __pyx_f[0], 22, 1, __PYX_ERR(0, 22, __pyx_L1_error));

  /* "cuda/ccuda.pyx":23
 * 
 * cdef CUresult cuDeviceGet(CUdevice* device, int ordinal) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDeviceGet(device, ordinal)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDeviceGetCount(int* count) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGet(__pyx_v_device, __pyx_v_ordinal); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 23, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":22
 *     return ccuda._cuDriverGetVersion(driverVersion)
 * 
 * cdef CUresult cuDeviceGet(CUdevice* device, int ordinal) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGet(device, ordinal)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDeviceGet", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":25
 *     return ccuda._cuDeviceGet(device, ordinal)
 * 
 * cdef CUresult cuDeviceGetCount(int* count) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetCount(count)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDeviceGetCount(int *__pyx_v_count) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDeviceGetCount", __pyx_f[0], 25, 1, __PYX_ERR(0, 25, __pyx_L1_error));

  /* "cuda/ccuda.pyx":26
 * 
 * cdef CUresult cuDeviceGetCount(int* count) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDeviceGetCount(count)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDeviceGetName(char* name, int length, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetCount(__pyx_v_count); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 26, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":25
 *     return ccuda._cuDeviceGet(device, ordinal)
 * 
 * cdef CUresult cuDeviceGetCount(int* count) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetCount(count)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDeviceGetCount", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":28
 *     return ccuda._cuDeviceGetCount(count)
 * 
 * cdef CUresult cuDeviceGetName(char* name, int length, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetName(name, length, dev)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDeviceGetName(char *__pyx_v_name, int __pyx_v_length, __pyx_t_4cuda_5ccuda_CUdevice __pyx_v_dev) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDeviceGetName", __pyx_f[0], 28, 1, __PYX_ERR(0, 28, __pyx_L1_error));

  /* "cuda/ccuda.pyx":29
 * 
 * cdef CUresult cuDeviceGetName(char* name, int length, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDeviceGetName(name, length, dev)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDeviceGetUuid(CUuuid* uuid, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetName(__pyx_v_name, __pyx_v_length, __pyx_v_dev); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 29, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":28
 *     return ccuda._cuDeviceGetCount(count)
 * 
 * cdef CUresult cuDeviceGetName(char* name, int length, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetName(name, length, dev)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDeviceGetName", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":31
 *     return ccuda._cuDeviceGetName(name, length, dev)
 * 
 * cdef CUresult cuDeviceGetUuid(CUuuid* uuid, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetUuid(uuid, dev)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDeviceGetUuid(__pyx_t_4cuda_5ccuda_CUuuid *__pyx_v_uuid, __pyx_t_4cuda_5ccuda_CUdevice __pyx_v_dev) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDeviceGetUuid", __pyx_f[0], 31, 1, __PYX_ERR(0, 31, __pyx_L1_error));

  /* "cuda/ccuda.pyx":32
 * 
 * cdef CUresult cuDeviceGetUuid(CUuuid* uuid, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDeviceGetUuid(uuid, dev)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDeviceGetUuid_v2(CUuuid* uuid, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetUuid(__pyx_v_uuid, __pyx_v_dev); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 32, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":31
 *     return ccuda._cuDeviceGetName(name, length, dev)
 * 
 * cdef CUresult cuDeviceGetUuid(CUuuid* uuid, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetUuid(uuid, dev)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDeviceGetUuid", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":34
 *     return ccuda._cuDeviceGetUuid(uuid, dev)
 * 
 * cdef CUresult cuDeviceGetUuid_v2(CUuuid* uuid, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetUuid_v2(uuid, dev)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDeviceGetUuid_v2(__pyx_t_4cuda_5ccuda_CUuuid *__pyx_v_uuid, __pyx_t_4cuda_5ccuda_CUdevice __pyx_v_dev) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDeviceGetUuid_v2", __pyx_f[0], 34, 1, __PYX_ERR(0, 34, __pyx_L1_error));

  /* "cuda/ccuda.pyx":35
 * 
 * cdef CUresult cuDeviceGetUuid_v2(CUuuid* uuid, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDeviceGetUuid_v2(uuid, dev)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDeviceGetLuid(char* luid, unsigned int* deviceNodeMask, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetUuid_v2(__pyx_v_uuid, __pyx_v_dev); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 35, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":34
 *     return ccuda._cuDeviceGetUuid(uuid, dev)
 * 
 * cdef CUresult cuDeviceGetUuid_v2(CUuuid* uuid, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetUuid_v2(uuid, dev)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDeviceGetUuid_v2", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":37
 *     return ccuda._cuDeviceGetUuid_v2(uuid, dev)
 * 
 * cdef CUresult cuDeviceGetLuid(char* luid, unsigned int* deviceNodeMask, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetLuid(luid, deviceNodeMask, dev)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDeviceGetLuid(char *__pyx_v_luid, unsigned int *__pyx_v_deviceNodeMask, __pyx_t_4cuda_5ccuda_CUdevice __pyx_v_dev) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDeviceGetLuid", __pyx_f[0], 37, 1, __PYX_ERR(0, 37, __pyx_L1_error));

  /* "cuda/ccuda.pyx":38
 * 
 * cdef CUresult cuDeviceGetLuid(char* luid, unsigned int* deviceNodeMask, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDeviceGetLuid(luid, deviceNodeMask, dev)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDeviceTotalMem(size_t* numbytes, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetLuid(__pyx_v_luid, __pyx_v_deviceNodeMask, __pyx_v_dev); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 38, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":37
 *     return ccuda._cuDeviceGetUuid_v2(uuid, dev)
 * 
 * cdef CUresult cuDeviceGetLuid(char* luid, unsigned int* deviceNodeMask, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetLuid(luid, deviceNodeMask, dev)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDeviceGetLuid", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":40
 *     return ccuda._cuDeviceGetLuid(luid, deviceNodeMask, dev)
 * 
 * cdef CUresult cuDeviceTotalMem(size_t* numbytes, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceTotalMem_v2(numbytes, dev)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDeviceTotalMem(size_t *__pyx_v_numbytes, __pyx_t_4cuda_5ccuda_CUdevice __pyx_v_dev) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDeviceTotalMem", __pyx_f[0], 40, 1, __PYX_ERR(0, 40, __pyx_L1_error));

  /* "cuda/ccuda.pyx":41
 * 
 * cdef CUresult cuDeviceTotalMem(size_t* numbytes, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDeviceTotalMem_v2(numbytes, dev)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDeviceGetTexture1DLinearMaxWidth(size_t* maxWidthInElements, CUarray_format pformat, unsigned numChannels, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDeviceTotalMem_v2(__pyx_v_numbytes, __pyx_v_dev); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 41, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":40
 *     return ccuda._cuDeviceGetLuid(luid, deviceNodeMask, dev)
 * 
 * cdef CUresult cuDeviceTotalMem(size_t* numbytes, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceTotalMem_v2(numbytes, dev)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDeviceTotalMem", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":43
 *     return ccuda._cuDeviceTotalMem_v2(numbytes, dev)
 * 
 * cdef CUresult cuDeviceGetTexture1DLinearMaxWidth(size_t* maxWidthInElements, CUarray_format pformat, unsigned numChannels, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetTexture1DLinearMaxWidth(maxWidthInElements, pformat, numChannels, dev)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDeviceGetTexture1DLinearMaxWidth(size_t *__pyx_v_maxWidthInElements, __pyx_t_4cuda_5ccuda_CUarray_format __pyx_v_pformat, unsigned int __pyx_v_numChannels, __pyx_t_4cuda_5ccuda_CUdevice __pyx_v_dev) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDeviceGetTexture1DLinearMaxWidth", __pyx_f[0], 43, 1, __PYX_ERR(0, 43, __pyx_L1_error));

  /* "cuda/ccuda.pyx":44
 * 
 * cdef CUresult cuDeviceGetTexture1DLinearMaxWidth(size_t* maxWidthInElements, CUarray_format pformat, unsigned numChannels, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDeviceGetTexture1DLinearMaxWidth(maxWidthInElements, pformat, numChannels, dev)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDeviceGetAttribute(int* pi, CUdevice_attribute attrib, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetTexture1DLinearMaxWidth(__pyx_v_maxWidthInElements, __pyx_v_pformat, __pyx_v_numChannels, __pyx_v_dev); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 44, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":43
 *     return ccuda._cuDeviceTotalMem_v2(numbytes, dev)
 * 
 * cdef CUresult cuDeviceGetTexture1DLinearMaxWidth(size_t* maxWidthInElements, CUarray_format pformat, unsigned numChannels, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetTexture1DLinearMaxWidth(maxWidthInElements, pformat, numChannels, dev)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDeviceGetTexture1DLinearMaxWidth", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":46
 *     return ccuda._cuDeviceGetTexture1DLinearMaxWidth(maxWidthInElements, pformat, numChannels, dev)
 * 
 * cdef CUresult cuDeviceGetAttribute(int* pi, CUdevice_attribute attrib, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetAttribute(pi, attrib, dev)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDeviceGetAttribute(int *__pyx_v_pi, __pyx_t_4cuda_5ccuda_CUdevice_attribute __pyx_v_attrib, __pyx_t_4cuda_5ccuda_CUdevice __pyx_v_dev) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDeviceGetAttribute", __pyx_f[0], 46, 1, __PYX_ERR(0, 46, __pyx_L1_error));

  /* "cuda/ccuda.pyx":47
 * 
 * cdef CUresult cuDeviceGetAttribute(int* pi, CUdevice_attribute attrib, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDeviceGetAttribute(pi, attrib, dev)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDeviceGetNvSciSyncAttributes(void* nvSciSyncAttrList, CUdevice dev, int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetAttribute(__pyx_v_pi, __pyx_v_attrib, __pyx_v_dev); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 47, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":46
 *     return ccuda._cuDeviceGetTexture1DLinearMaxWidth(maxWidthInElements, pformat, numChannels, dev)
 * 
 * cdef CUresult cuDeviceGetAttribute(int* pi, CUdevice_attribute attrib, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetAttribute(pi, attrib, dev)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDeviceGetAttribute", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":49
 *     return ccuda._cuDeviceGetAttribute(pi, attrib, dev)
 * 
 * cdef CUresult cuDeviceGetNvSciSyncAttributes(void* nvSciSyncAttrList, CUdevice dev, int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetNvSciSyncAttributes(nvSciSyncAttrList, dev, flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDeviceGetNvSciSyncAttributes(void *__pyx_v_nvSciSyncAttrList, __pyx_t_4cuda_5ccuda_CUdevice __pyx_v_dev, int __pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDeviceGetNvSciSyncAttributes", __pyx_f[0], 49, 1, __PYX_ERR(0, 49, __pyx_L1_error));

  /* "cuda/ccuda.pyx":50
 * 
 * cdef CUresult cuDeviceGetNvSciSyncAttributes(void* nvSciSyncAttrList, CUdevice dev, int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDeviceGetNvSciSyncAttributes(nvSciSyncAttrList, dev, flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDeviceSetMemPool(CUdevice dev, CUmemoryPool pool) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetNvSciSyncAttributes(__pyx_v_nvSciSyncAttrList, __pyx_v_dev, __pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 50, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":49
 *     return ccuda._cuDeviceGetAttribute(pi, attrib, dev)
 * 
 * cdef CUresult cuDeviceGetNvSciSyncAttributes(void* nvSciSyncAttrList, CUdevice dev, int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetNvSciSyncAttributes(nvSciSyncAttrList, dev, flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDeviceGetNvSciSyncAttributes", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":52
 *     return ccuda._cuDeviceGetNvSciSyncAttributes(nvSciSyncAttrList, dev, flags)
 * 
 * cdef CUresult cuDeviceSetMemPool(CUdevice dev, CUmemoryPool pool) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceSetMemPool(dev, pool)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDeviceSetMemPool(__pyx_t_4cuda_5ccuda_CUdevice __pyx_v_dev, __pyx_t_4cuda_5ccuda_CUmemoryPool __pyx_v_pool) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDeviceSetMemPool", __pyx_f[0], 52, 1, __PYX_ERR(0, 52, __pyx_L1_error));

  /* "cuda/ccuda.pyx":53
 * 
 * cdef CUresult cuDeviceSetMemPool(CUdevice dev, CUmemoryPool pool) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDeviceSetMemPool(dev, pool)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDeviceGetMemPool(CUmemoryPool* pool, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDeviceSetMemPool(__pyx_v_dev, __pyx_v_pool); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 53, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":52
 *     return ccuda._cuDeviceGetNvSciSyncAttributes(nvSciSyncAttrList, dev, flags)
 * 
 * cdef CUresult cuDeviceSetMemPool(CUdevice dev, CUmemoryPool pool) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceSetMemPool(dev, pool)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDeviceSetMemPool", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":55
 *     return ccuda._cuDeviceSetMemPool(dev, pool)
 * 
 * cdef CUresult cuDeviceGetMemPool(CUmemoryPool* pool, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetMemPool(pool, dev)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDeviceGetMemPool(__pyx_t_4cuda_5ccuda_CUmemoryPool *__pyx_v_pool, __pyx_t_4cuda_5ccuda_CUdevice __pyx_v_dev) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDeviceGetMemPool", __pyx_f[0], 55, 1, __PYX_ERR(0, 55, __pyx_L1_error));

  /* "cuda/ccuda.pyx":56
 * 
 * cdef CUresult cuDeviceGetMemPool(CUmemoryPool* pool, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDeviceGetMemPool(pool, dev)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDeviceGetDefaultMemPool(CUmemoryPool* pool_out, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetMemPool(__pyx_v_pool, __pyx_v_dev); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 56, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":55
 *     return ccuda._cuDeviceSetMemPool(dev, pool)
 * 
 * cdef CUresult cuDeviceGetMemPool(CUmemoryPool* pool, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetMemPool(pool, dev)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDeviceGetMemPool", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":58
 *     return ccuda._cuDeviceGetMemPool(pool, dev)
 * 
 * cdef CUresult cuDeviceGetDefaultMemPool(CUmemoryPool* pool_out, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetDefaultMemPool(pool_out, dev)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDeviceGetDefaultMemPool(__pyx_t_4cuda_5ccuda_CUmemoryPool *__pyx_v_pool_out, __pyx_t_4cuda_5ccuda_CUdevice __pyx_v_dev) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDeviceGetDefaultMemPool", __pyx_f[0], 58, 1, __PYX_ERR(0, 58, __pyx_L1_error));

  /* "cuda/ccuda.pyx":59
 * 
 * cdef CUresult cuDeviceGetDefaultMemPool(CUmemoryPool* pool_out, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDeviceGetDefaultMemPool(pool_out, dev)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuFlushGPUDirectRDMAWrites(CUflushGPUDirectRDMAWritesTarget target, CUflushGPUDirectRDMAWritesScope scope) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetDefaultMemPool(__pyx_v_pool_out, __pyx_v_dev); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 59, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":58
 *     return ccuda._cuDeviceGetMemPool(pool, dev)
 * 
 * cdef CUresult cuDeviceGetDefaultMemPool(CUmemoryPool* pool_out, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetDefaultMemPool(pool_out, dev)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDeviceGetDefaultMemPool", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":61
 *     return ccuda._cuDeviceGetDefaultMemPool(pool_out, dev)
 * 
 * cdef CUresult cuFlushGPUDirectRDMAWrites(CUflushGPUDirectRDMAWritesTarget target, CUflushGPUDirectRDMAWritesScope scope) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuFlushGPUDirectRDMAWrites(target, scope)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuFlushGPUDirectRDMAWrites(__pyx_t_4cuda_5ccuda_CUflushGPUDirectRDMAWritesTarget __pyx_v_target, __pyx_t_4cuda_5ccuda_CUflushGPUDirectRDMAWritesScope __pyx_v_scope) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuFlushGPUDirectRDMAWrites", __pyx_f[0], 61, 1, __PYX_ERR(0, 61, __pyx_L1_error));

  /* "cuda/ccuda.pyx":62
 * 
 * cdef CUresult cuFlushGPUDirectRDMAWrites(CUflushGPUDirectRDMAWritesTarget target, CUflushGPUDirectRDMAWritesScope scope) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuFlushGPUDirectRDMAWrites(target, scope)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDeviceGetProperties(CUdevprop* prop, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuFlushGPUDirectRDMAWrites(__pyx_v_target, __pyx_v_scope); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 62, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":61
 *     return ccuda._cuDeviceGetDefaultMemPool(pool_out, dev)
 * 
 * cdef CUresult cuFlushGPUDirectRDMAWrites(CUflushGPUDirectRDMAWritesTarget target, CUflushGPUDirectRDMAWritesScope scope) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuFlushGPUDirectRDMAWrites(target, scope)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuFlushGPUDirectRDMAWrites", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":64
 *     return ccuda._cuFlushGPUDirectRDMAWrites(target, scope)
 * 
 * cdef CUresult cuDeviceGetProperties(CUdevprop* prop, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetProperties(prop, dev)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDeviceGetProperties(__pyx_t_4cuda_5ccuda_CUdevprop *__pyx_v_prop, __pyx_t_4cuda_5ccuda_CUdevice __pyx_v_dev) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDeviceGetProperties", __pyx_f[0], 64, 1, __PYX_ERR(0, 64, __pyx_L1_error));

  /* "cuda/ccuda.pyx":65
 * 
 * cdef CUresult cuDeviceGetProperties(CUdevprop* prop, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDeviceGetProperties(prop, dev)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDeviceComputeCapability(int* major, int* minor, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetProperties(__pyx_v_prop, __pyx_v_dev); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 65, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":64
 *     return ccuda._cuFlushGPUDirectRDMAWrites(target, scope)
 * 
 * cdef CUresult cuDeviceGetProperties(CUdevprop* prop, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetProperties(prop, dev)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDeviceGetProperties", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":67
 *     return ccuda._cuDeviceGetProperties(prop, dev)
 * 
 * cdef CUresult cuDeviceComputeCapability(int* major, int* minor, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceComputeCapability(major, minor, dev)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDeviceComputeCapability(int *__pyx_v_major, int *__pyx_v_minor, __pyx_t_4cuda_5ccuda_CUdevice __pyx_v_dev) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDeviceComputeCapability", __pyx_f[0], 67, 1, __PYX_ERR(0, 67, __pyx_L1_error));

  /* "cuda/ccuda.pyx":68
 * 
 * cdef CUresult cuDeviceComputeCapability(int* major, int* minor, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDeviceComputeCapability(major, minor, dev)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDevicePrimaryCtxRetain(CUcontext* pctx, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDeviceComputeCapability(__pyx_v_major, __pyx_v_minor, __pyx_v_dev); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 68, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":67
 *     return ccuda._cuDeviceGetProperties(prop, dev)
 * 
 * cdef CUresult cuDeviceComputeCapability(int* major, int* minor, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceComputeCapability(major, minor, dev)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDeviceComputeCapability", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":70
 *     return ccuda._cuDeviceComputeCapability(major, minor, dev)
 * 
 * cdef CUresult cuDevicePrimaryCtxRetain(CUcontext* pctx, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDevicePrimaryCtxRetain(pctx, dev)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDevicePrimaryCtxRetain(__pyx_t_4cuda_5ccuda_CUcontext *__pyx_v_pctx, __pyx_t_4cuda_5ccuda_CUdevice __pyx_v_dev) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDevicePrimaryCtxRetain", __pyx_f[0], 70, 1, __PYX_ERR(0, 70, __pyx_L1_error));

  /* "cuda/ccuda.pyx":71
 * 
 * cdef CUresult cuDevicePrimaryCtxRetain(CUcontext* pctx, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDevicePrimaryCtxRetain(pctx, dev)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDevicePrimaryCtxRelease(CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDevicePrimaryCtxRetain(__pyx_v_pctx, __pyx_v_dev); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 71, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":70
 *     return ccuda._cuDeviceComputeCapability(major, minor, dev)
 * 
 * cdef CUresult cuDevicePrimaryCtxRetain(CUcontext* pctx, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDevicePrimaryCtxRetain(pctx, dev)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDevicePrimaryCtxRetain", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":73
 *     return ccuda._cuDevicePrimaryCtxRetain(pctx, dev)
 * 
 * cdef CUresult cuDevicePrimaryCtxRelease(CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDevicePrimaryCtxRelease_v2(dev)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDevicePrimaryCtxRelease(__pyx_t_4cuda_5ccuda_CUdevice __pyx_v_dev) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDevicePrimaryCtxRelease", __pyx_f[0], 73, 1, __PYX_ERR(0, 73, __pyx_L1_error));

  /* "cuda/ccuda.pyx":74
 * 
 * cdef CUresult cuDevicePrimaryCtxRelease(CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDevicePrimaryCtxRelease_v2(dev)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDevicePrimaryCtxSetFlags(CUdevice dev, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDevicePrimaryCtxRelease_v2(__pyx_v_dev); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 74, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":73
 *     return ccuda._cuDevicePrimaryCtxRetain(pctx, dev)
 * 
 * cdef CUresult cuDevicePrimaryCtxRelease(CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDevicePrimaryCtxRelease_v2(dev)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDevicePrimaryCtxRelease", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":76
 *     return ccuda._cuDevicePrimaryCtxRelease_v2(dev)
 * 
 * cdef CUresult cuDevicePrimaryCtxSetFlags(CUdevice dev, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDevicePrimaryCtxSetFlags_v2(dev, flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDevicePrimaryCtxSetFlags(__pyx_t_4cuda_5ccuda_CUdevice __pyx_v_dev, unsigned int __pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDevicePrimaryCtxSetFlags", __pyx_f[0], 76, 1, __PYX_ERR(0, 76, __pyx_L1_error));

  /* "cuda/ccuda.pyx":77
 * 
 * cdef CUresult cuDevicePrimaryCtxSetFlags(CUdevice dev, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDevicePrimaryCtxSetFlags_v2(dev, flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDevicePrimaryCtxGetState(CUdevice dev, unsigned int* flags, int* active) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDevicePrimaryCtxSetFlags_v2(__pyx_v_dev, __pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 77, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":76
 *     return ccuda._cuDevicePrimaryCtxRelease_v2(dev)
 * 
 * cdef CUresult cuDevicePrimaryCtxSetFlags(CUdevice dev, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDevicePrimaryCtxSetFlags_v2(dev, flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDevicePrimaryCtxSetFlags", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":79
 *     return ccuda._cuDevicePrimaryCtxSetFlags_v2(dev, flags)
 * 
 * cdef CUresult cuDevicePrimaryCtxGetState(CUdevice dev, unsigned int* flags, int* active) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDevicePrimaryCtxGetState(dev, flags, active)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDevicePrimaryCtxGetState(__pyx_t_4cuda_5ccuda_CUdevice __pyx_v_dev, unsigned int *__pyx_v_flags, int *__pyx_v_active) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDevicePrimaryCtxGetState", __pyx_f[0], 79, 1, __PYX_ERR(0, 79, __pyx_L1_error));

  /* "cuda/ccuda.pyx":80
 * 
 * cdef CUresult cuDevicePrimaryCtxGetState(CUdevice dev, unsigned int* flags, int* active) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDevicePrimaryCtxGetState(dev, flags, active)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDevicePrimaryCtxReset(CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDevicePrimaryCtxGetState(__pyx_v_dev, __pyx_v_flags, __pyx_v_active); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 80, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":79
 *     return ccuda._cuDevicePrimaryCtxSetFlags_v2(dev, flags)
 * 
 * cdef CUresult cuDevicePrimaryCtxGetState(CUdevice dev, unsigned int* flags, int* active) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDevicePrimaryCtxGetState(dev, flags, active)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDevicePrimaryCtxGetState", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":82
 *     return ccuda._cuDevicePrimaryCtxGetState(dev, flags, active)
 * 
 * cdef CUresult cuDevicePrimaryCtxReset(CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDevicePrimaryCtxReset_v2(dev)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDevicePrimaryCtxReset(__pyx_t_4cuda_5ccuda_CUdevice __pyx_v_dev) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDevicePrimaryCtxReset", __pyx_f[0], 82, 1, __PYX_ERR(0, 82, __pyx_L1_error));

  /* "cuda/ccuda.pyx":83
 * 
 * cdef CUresult cuDevicePrimaryCtxReset(CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDevicePrimaryCtxReset_v2(dev)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDeviceGetExecAffinitySupport(int* pi, CUexecAffinityType typename, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDevicePrimaryCtxReset_v2(__pyx_v_dev); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 83, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":82
 *     return ccuda._cuDevicePrimaryCtxGetState(dev, flags, active)
 * 
 * cdef CUresult cuDevicePrimaryCtxReset(CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDevicePrimaryCtxReset_v2(dev)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDevicePrimaryCtxReset", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":85
 *     return ccuda._cuDevicePrimaryCtxReset_v2(dev)
 * 
 * cdef CUresult cuDeviceGetExecAffinitySupport(int* pi, CUexecAffinityType typename, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetExecAffinitySupport(pi, typename, dev)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDeviceGetExecAffinitySupport(int *__pyx_v_pi, __pyx_t_4cuda_5ccuda_CUexecAffinityType __pyx_v_typename, __pyx_t_4cuda_5ccuda_CUdevice __pyx_v_dev) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDeviceGetExecAffinitySupport", __pyx_f[0], 85, 1, __PYX_ERR(0, 85, __pyx_L1_error));

  /* "cuda/ccuda.pyx":86
 * 
 * cdef CUresult cuDeviceGetExecAffinitySupport(int* pi, CUexecAffinityType typename, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDeviceGetExecAffinitySupport(pi, typename, dev)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuCtxCreate(CUcontext* pctx, unsigned int flags, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetExecAffinitySupport(__pyx_v_pi, __pyx_v_typename, __pyx_v_dev); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 86, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":85
 *     return ccuda._cuDevicePrimaryCtxReset_v2(dev)
 * 
 * cdef CUresult cuDeviceGetExecAffinitySupport(int* pi, CUexecAffinityType typename, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetExecAffinitySupport(pi, typename, dev)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDeviceGetExecAffinitySupport", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":88
 *     return ccuda._cuDeviceGetExecAffinitySupport(pi, typename, dev)
 * 
 * cdef CUresult cuCtxCreate(CUcontext* pctx, unsigned int flags, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxCreate_v2(pctx, flags, dev)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuCtxCreate(__pyx_t_4cuda_5ccuda_CUcontext *__pyx_v_pctx, unsigned int __pyx_v_flags, __pyx_t_4cuda_5ccuda_CUdevice __pyx_v_dev) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuCtxCreate", __pyx_f[0], 88, 1, __PYX_ERR(0, 88, __pyx_L1_error));

  /* "cuda/ccuda.pyx":89
 * 
 * cdef CUresult cuCtxCreate(CUcontext* pctx, unsigned int flags, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuCtxCreate_v2(pctx, flags, dev)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuCtxCreate_v3(CUcontext* pctx, CUexecAffinityParam* paramsArray, int numParams, unsigned int flags, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuCtxCreate_v2(__pyx_v_pctx, __pyx_v_flags, __pyx_v_dev); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 89, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":88
 *     return ccuda._cuDeviceGetExecAffinitySupport(pi, typename, dev)
 * 
 * cdef CUresult cuCtxCreate(CUcontext* pctx, unsigned int flags, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxCreate_v2(pctx, flags, dev)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuCtxCreate", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":91
 *     return ccuda._cuCtxCreate_v2(pctx, flags, dev)
 * 
 * cdef CUresult cuCtxCreate_v3(CUcontext* pctx, CUexecAffinityParam* paramsArray, int numParams, unsigned int flags, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxCreate_v3(pctx, paramsArray, numParams, flags, dev)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuCtxCreate_v3(__pyx_t_4cuda_5ccuda_CUcontext *__pyx_v_pctx, __pyx_t_4cuda_5ccuda_CUexecAffinityParam *__pyx_v_paramsArray, int __pyx_v_numParams, unsigned int __pyx_v_flags, __pyx_t_4cuda_5ccuda_CUdevice __pyx_v_dev) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuCtxCreate_v3", __pyx_f[0], 91, 1, __PYX_ERR(0, 91, __pyx_L1_error));

  /* "cuda/ccuda.pyx":92
 * 
 * cdef CUresult cuCtxCreate_v3(CUcontext* pctx, CUexecAffinityParam* paramsArray, int numParams, unsigned int flags, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuCtxCreate_v3(pctx, paramsArray, numParams, flags, dev)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuCtxDestroy(CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuCtxCreate_v3(__pyx_v_pctx, __pyx_v_paramsArray, __pyx_v_numParams, __pyx_v_flags, __pyx_v_dev); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 92, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":91
 *     return ccuda._cuCtxCreate_v2(pctx, flags, dev)
 * 
 * cdef CUresult cuCtxCreate_v3(CUcontext* pctx, CUexecAffinityParam* paramsArray, int numParams, unsigned int flags, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxCreate_v3(pctx, paramsArray, numParams, flags, dev)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuCtxCreate_v3", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":94
 *     return ccuda._cuCtxCreate_v3(pctx, paramsArray, numParams, flags, dev)
 * 
 * cdef CUresult cuCtxDestroy(CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxDestroy_v2(ctx)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuCtxDestroy(__pyx_t_4cuda_5ccuda_CUcontext __pyx_v_ctx) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuCtxDestroy", __pyx_f[0], 94, 1, __PYX_ERR(0, 94, __pyx_L1_error));

  /* "cuda/ccuda.pyx":95
 * 
 * cdef CUresult cuCtxDestroy(CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuCtxDestroy_v2(ctx)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuCtxPushCurrent(CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuCtxDestroy_v2(__pyx_v_ctx); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 95, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":94
 *     return ccuda._cuCtxCreate_v3(pctx, paramsArray, numParams, flags, dev)
 * 
 * cdef CUresult cuCtxDestroy(CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxDestroy_v2(ctx)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuCtxDestroy", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":97
 *     return ccuda._cuCtxDestroy_v2(ctx)
 * 
 * cdef CUresult cuCtxPushCurrent(CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxPushCurrent_v2(ctx)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuCtxPushCurrent(__pyx_t_4cuda_5ccuda_CUcontext __pyx_v_ctx) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuCtxPushCurrent", __pyx_f[0], 97, 1, __PYX_ERR(0, 97, __pyx_L1_error));

  /* "cuda/ccuda.pyx":98
 * 
 * cdef CUresult cuCtxPushCurrent(CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuCtxPushCurrent_v2(ctx)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuCtxPopCurrent(CUcontext* pctx) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuCtxPushCurrent_v2(__pyx_v_ctx); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 98, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":97
 *     return ccuda._cuCtxDestroy_v2(ctx)
 * 
 * cdef CUresult cuCtxPushCurrent(CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxPushCurrent_v2(ctx)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuCtxPushCurrent", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":100
 *     return ccuda._cuCtxPushCurrent_v2(ctx)
 * 
 * cdef CUresult cuCtxPopCurrent(CUcontext* pctx) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxPopCurrent_v2(pctx)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuCtxPopCurrent(__pyx_t_4cuda_5ccuda_CUcontext *__pyx_v_pctx) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuCtxPopCurrent", __pyx_f[0], 100, 1, __PYX_ERR(0, 100, __pyx_L1_error));

  /* "cuda/ccuda.pyx":101
 * 
 * cdef CUresult cuCtxPopCurrent(CUcontext* pctx) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuCtxPopCurrent_v2(pctx)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuCtxSetCurrent(CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuCtxPopCurrent_v2(__pyx_v_pctx); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 101, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":100
 *     return ccuda._cuCtxPushCurrent_v2(ctx)
 * 
 * cdef CUresult cuCtxPopCurrent(CUcontext* pctx) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxPopCurrent_v2(pctx)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuCtxPopCurrent", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":103
 *     return ccuda._cuCtxPopCurrent_v2(pctx)
 * 
 * cdef CUresult cuCtxSetCurrent(CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxSetCurrent(ctx)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuCtxSetCurrent(__pyx_t_4cuda_5ccuda_CUcontext __pyx_v_ctx) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuCtxSetCurrent", __pyx_f[0], 103, 1, __PYX_ERR(0, 103, __pyx_L1_error));

  /* "cuda/ccuda.pyx":104
 * 
 * cdef CUresult cuCtxSetCurrent(CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuCtxSetCurrent(ctx)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuCtxGetCurrent(CUcontext* pctx) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuCtxSetCurrent(__pyx_v_ctx); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 104, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":103
 *     return ccuda._cuCtxPopCurrent_v2(pctx)
 * 
 * cdef CUresult cuCtxSetCurrent(CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxSetCurrent(ctx)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuCtxSetCurrent", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":106
 *     return ccuda._cuCtxSetCurrent(ctx)
 * 
 * cdef CUresult cuCtxGetCurrent(CUcontext* pctx) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxGetCurrent(pctx)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuCtxGetCurrent(__pyx_t_4cuda_5ccuda_CUcontext *__pyx_v_pctx) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuCtxGetCurrent", __pyx_f[0], 106, 1, __PYX_ERR(0, 106, __pyx_L1_error));

  /* "cuda/ccuda.pyx":107
 * 
 * cdef CUresult cuCtxGetCurrent(CUcontext* pctx) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuCtxGetCurrent(pctx)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuCtxGetDevice(CUdevice* device) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuCtxGetCurrent(__pyx_v_pctx); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 107, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":106
 *     return ccuda._cuCtxSetCurrent(ctx)
 * 
 * cdef CUresult cuCtxGetCurrent(CUcontext* pctx) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxGetCurrent(pctx)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuCtxGetCurrent", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":109
 *     return ccuda._cuCtxGetCurrent(pctx)
 * 
 * cdef CUresult cuCtxGetDevice(CUdevice* device) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxGetDevice(device)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuCtxGetDevice(__pyx_t_4cuda_5ccuda_CUdevice *__pyx_v_device) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuCtxGetDevice", __pyx_f[0], 109, 1, __PYX_ERR(0, 109, __pyx_L1_error));

  /* "cuda/ccuda.pyx":110
 * 
 * cdef CUresult cuCtxGetDevice(CUdevice* device) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuCtxGetDevice(device)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuCtxGetFlags(unsigned int* flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuCtxGetDevice(__pyx_v_device); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 110, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":109
 *     return ccuda._cuCtxGetCurrent(pctx)
 * 
 * cdef CUresult cuCtxGetDevice(CUdevice* device) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxGetDevice(device)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuCtxGetDevice", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":112
 *     return ccuda._cuCtxGetDevice(device)
 * 
 * cdef CUresult cuCtxGetFlags(unsigned int* flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxGetFlags(flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuCtxGetFlags(unsigned int *__pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuCtxGetFlags", __pyx_f[0], 112, 1, __PYX_ERR(0, 112, __pyx_L1_error));

  /* "cuda/ccuda.pyx":113
 * 
 * cdef CUresult cuCtxGetFlags(unsigned int* flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuCtxGetFlags(flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuCtxSynchronize() nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuCtxGetFlags(__pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 113, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":112
 *     return ccuda._cuCtxGetDevice(device)
 * 
 * cdef CUresult cuCtxGetFlags(unsigned int* flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxGetFlags(flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuCtxGetFlags", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":115
 *     return ccuda._cuCtxGetFlags(flags)
 * 
 * cdef CUresult cuCtxSynchronize() nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxSynchronize()
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuCtxSynchronize(void) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuCtxSynchronize", __pyx_f[0], 115, 1, __PYX_ERR(0, 115, __pyx_L1_error));

  /* "cuda/ccuda.pyx":116
 * 
 * cdef CUresult cuCtxSynchronize() nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuCtxSynchronize()             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuCtxSetLimit(CUlimit limit, size_t value) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuCtxSynchronize(); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 116, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":115
 *     return ccuda._cuCtxGetFlags(flags)
 * 
 * cdef CUresult cuCtxSynchronize() nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxSynchronize()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuCtxSynchronize", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":118
 *     return ccuda._cuCtxSynchronize()
 * 
 * cdef CUresult cuCtxSetLimit(CUlimit limit, size_t value) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxSetLimit(limit, value)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuCtxSetLimit(__pyx_t_4cuda_5ccuda_CUlimit __pyx_v_limit, size_t __pyx_v_value) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuCtxSetLimit", __pyx_f[0], 118, 1, __PYX_ERR(0, 118, __pyx_L1_error));

  /* "cuda/ccuda.pyx":119
 * 
 * cdef CUresult cuCtxSetLimit(CUlimit limit, size_t value) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuCtxSetLimit(limit, value)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuCtxGetLimit(size_t* pvalue, CUlimit limit) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuCtxSetLimit(__pyx_v_limit, __pyx_v_value); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 119, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":118
 *     return ccuda._cuCtxSynchronize()
 * 
 * cdef CUresult cuCtxSetLimit(CUlimit limit, size_t value) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxSetLimit(limit, value)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuCtxSetLimit", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":121
 *     return ccuda._cuCtxSetLimit(limit, value)
 * 
 * cdef CUresult cuCtxGetLimit(size_t* pvalue, CUlimit limit) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxGetLimit(pvalue, limit)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuCtxGetLimit(size_t *__pyx_v_pvalue, __pyx_t_4cuda_5ccuda_CUlimit __pyx_v_limit) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuCtxGetLimit", __pyx_f[0], 121, 1, __PYX_ERR(0, 121, __pyx_L1_error));

  /* "cuda/ccuda.pyx":122
 * 
 * cdef CUresult cuCtxGetLimit(size_t* pvalue, CUlimit limit) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuCtxGetLimit(pvalue, limit)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuCtxGetCacheConfig(CUfunc_cache* pconfig) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuCtxGetLimit(__pyx_v_pvalue, __pyx_v_limit); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 122, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":121
 *     return ccuda._cuCtxSetLimit(limit, value)
 * 
 * cdef CUresult cuCtxGetLimit(size_t* pvalue, CUlimit limit) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxGetLimit(pvalue, limit)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuCtxGetLimit", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":124
 *     return ccuda._cuCtxGetLimit(pvalue, limit)
 * 
 * cdef CUresult cuCtxGetCacheConfig(CUfunc_cache* pconfig) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxGetCacheConfig(pconfig)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuCtxGetCacheConfig(__pyx_t_4cuda_5ccuda_CUfunc_cache *__pyx_v_pconfig) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuCtxGetCacheConfig", __pyx_f[0], 124, 1, __PYX_ERR(0, 124, __pyx_L1_error));

  /* "cuda/ccuda.pyx":125
 * 
 * cdef CUresult cuCtxGetCacheConfig(CUfunc_cache* pconfig) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuCtxGetCacheConfig(pconfig)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuCtxSetCacheConfig(CUfunc_cache config) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuCtxGetCacheConfig(__pyx_v_pconfig); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 125, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":124
 *     return ccuda._cuCtxGetLimit(pvalue, limit)
 * 
 * cdef CUresult cuCtxGetCacheConfig(CUfunc_cache* pconfig) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxGetCacheConfig(pconfig)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuCtxGetCacheConfig", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":127
 *     return ccuda._cuCtxGetCacheConfig(pconfig)
 * 
 * cdef CUresult cuCtxSetCacheConfig(CUfunc_cache config) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxSetCacheConfig(config)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuCtxSetCacheConfig(__pyx_t_4cuda_5ccuda_CUfunc_cache __pyx_v_config) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuCtxSetCacheConfig", __pyx_f[0], 127, 1, __PYX_ERR(0, 127, __pyx_L1_error));

  /* "cuda/ccuda.pyx":128
 * 
 * cdef CUresult cuCtxSetCacheConfig(CUfunc_cache config) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuCtxSetCacheConfig(config)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuCtxGetSharedMemConfig(CUsharedconfig* pConfig) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuCtxSetCacheConfig(__pyx_v_config); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 128, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":127
 *     return ccuda._cuCtxGetCacheConfig(pconfig)
 * 
 * cdef CUresult cuCtxSetCacheConfig(CUfunc_cache config) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxSetCacheConfig(config)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuCtxSetCacheConfig", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":130
 *     return ccuda._cuCtxSetCacheConfig(config)
 * 
 * cdef CUresult cuCtxGetSharedMemConfig(CUsharedconfig* pConfig) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxGetSharedMemConfig(pConfig)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuCtxGetSharedMemConfig(__pyx_t_4cuda_5ccuda_CUsharedconfig *__pyx_v_pConfig) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuCtxGetSharedMemConfig", __pyx_f[0], 130, 1, __PYX_ERR(0, 130, __pyx_L1_error));

  /* "cuda/ccuda.pyx":131
 * 
 * cdef CUresult cuCtxGetSharedMemConfig(CUsharedconfig* pConfig) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuCtxGetSharedMemConfig(pConfig)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuCtxSetSharedMemConfig(CUsharedconfig config) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuCtxGetSharedMemConfig(__pyx_v_pConfig); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 131, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":130
 *     return ccuda._cuCtxSetCacheConfig(config)
 * 
 * cdef CUresult cuCtxGetSharedMemConfig(CUsharedconfig* pConfig) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxGetSharedMemConfig(pConfig)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuCtxGetSharedMemConfig", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":133
 *     return ccuda._cuCtxGetSharedMemConfig(pConfig)
 * 
 * cdef CUresult cuCtxSetSharedMemConfig(CUsharedconfig config) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxSetSharedMemConfig(config)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuCtxSetSharedMemConfig(__pyx_t_4cuda_5ccuda_CUsharedconfig __pyx_v_config) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuCtxSetSharedMemConfig", __pyx_f[0], 133, 1, __PYX_ERR(0, 133, __pyx_L1_error));

  /* "cuda/ccuda.pyx":134
 * 
 * cdef CUresult cuCtxSetSharedMemConfig(CUsharedconfig config) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuCtxSetSharedMemConfig(config)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuCtxGetApiVersion(CUcontext ctx, unsigned int* version) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuCtxSetSharedMemConfig(__pyx_v_config); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 134, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":133
 *     return ccuda._cuCtxGetSharedMemConfig(pConfig)
 * 
 * cdef CUresult cuCtxSetSharedMemConfig(CUsharedconfig config) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxSetSharedMemConfig(config)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuCtxSetSharedMemConfig", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":136
 *     return ccuda._cuCtxSetSharedMemConfig(config)
 * 
 * cdef CUresult cuCtxGetApiVersion(CUcontext ctx, unsigned int* version) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxGetApiVersion(ctx, version)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuCtxGetApiVersion(__pyx_t_4cuda_5ccuda_CUcontext __pyx_v_ctx, unsigned int *__pyx_v_version) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuCtxGetApiVersion", __pyx_f[0], 136, 1, __PYX_ERR(0, 136, __pyx_L1_error));

  /* "cuda/ccuda.pyx":137
 * 
 * cdef CUresult cuCtxGetApiVersion(CUcontext ctx, unsigned int* version) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuCtxGetApiVersion(ctx, version)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuCtxGetStreamPriorityRange(int* leastPriority, int* greatestPriority) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuCtxGetApiVersion(__pyx_v_ctx, __pyx_v_version); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 137, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":136
 *     return ccuda._cuCtxSetSharedMemConfig(config)
 * 
 * cdef CUresult cuCtxGetApiVersion(CUcontext ctx, unsigned int* version) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxGetApiVersion(ctx, version)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuCtxGetApiVersion", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":139
 *     return ccuda._cuCtxGetApiVersion(ctx, version)
 * 
 * cdef CUresult cuCtxGetStreamPriorityRange(int* leastPriority, int* greatestPriority) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxGetStreamPriorityRange(leastPriority, greatestPriority)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuCtxGetStreamPriorityRange(int *__pyx_v_leastPriority, int *__pyx_v_greatestPriority) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuCtxGetStreamPriorityRange", __pyx_f[0], 139, 1, __PYX_ERR(0, 139, __pyx_L1_error));

  /* "cuda/ccuda.pyx":140
 * 
 * cdef CUresult cuCtxGetStreamPriorityRange(int* leastPriority, int* greatestPriority) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuCtxGetStreamPriorityRange(leastPriority, greatestPriority)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuCtxResetPersistingL2Cache() nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuCtxGetStreamPriorityRange(__pyx_v_leastPriority, __pyx_v_greatestPriority); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 140, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":139
 *     return ccuda._cuCtxGetApiVersion(ctx, version)
 * 
 * cdef CUresult cuCtxGetStreamPriorityRange(int* leastPriority, int* greatestPriority) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxGetStreamPriorityRange(leastPriority, greatestPriority)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuCtxGetStreamPriorityRange", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":142
 *     return ccuda._cuCtxGetStreamPriorityRange(leastPriority, greatestPriority)
 * 
 * cdef CUresult cuCtxResetPersistingL2Cache() nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxResetPersistingL2Cache()
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuCtxResetPersistingL2Cache(void) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuCtxResetPersistingL2Cache", __pyx_f[0], 142, 1, __PYX_ERR(0, 142, __pyx_L1_error));

  /* "cuda/ccuda.pyx":143
 * 
 * cdef CUresult cuCtxResetPersistingL2Cache() nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuCtxResetPersistingL2Cache()             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuCtxGetExecAffinity(CUexecAffinityParam* pExecAffinity, CUexecAffinityType typename) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuCtxResetPersistingL2Cache(); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 143, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":142
 *     return ccuda._cuCtxGetStreamPriorityRange(leastPriority, greatestPriority)
 * 
 * cdef CUresult cuCtxResetPersistingL2Cache() nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxResetPersistingL2Cache()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuCtxResetPersistingL2Cache", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":145
 *     return ccuda._cuCtxResetPersistingL2Cache()
 * 
 * cdef CUresult cuCtxGetExecAffinity(CUexecAffinityParam* pExecAffinity, CUexecAffinityType typename) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxGetExecAffinity(pExecAffinity, typename)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuCtxGetExecAffinity(__pyx_t_4cuda_5ccuda_CUexecAffinityParam *__pyx_v_pExecAffinity, __pyx_t_4cuda_5ccuda_CUexecAffinityType __pyx_v_typename) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuCtxGetExecAffinity", __pyx_f[0], 145, 1, __PYX_ERR(0, 145, __pyx_L1_error));

  /* "cuda/ccuda.pyx":146
 * 
 * cdef CUresult cuCtxGetExecAffinity(CUexecAffinityParam* pExecAffinity, CUexecAffinityType typename) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuCtxGetExecAffinity(pExecAffinity, typename)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuCtxAttach(CUcontext* pctx, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuCtxGetExecAffinity(__pyx_v_pExecAffinity, __pyx_v_typename); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 146, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":145
 *     return ccuda._cuCtxResetPersistingL2Cache()
 * 
 * cdef CUresult cuCtxGetExecAffinity(CUexecAffinityParam* pExecAffinity, CUexecAffinityType typename) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxGetExecAffinity(pExecAffinity, typename)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuCtxGetExecAffinity", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":148
 *     return ccuda._cuCtxGetExecAffinity(pExecAffinity, typename)
 * 
 * cdef CUresult cuCtxAttach(CUcontext* pctx, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxAttach(pctx, flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuCtxAttach(__pyx_t_4cuda_5ccuda_CUcontext *__pyx_v_pctx, unsigned int __pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuCtxAttach", __pyx_f[0], 148, 1, __PYX_ERR(0, 148, __pyx_L1_error));

  /* "cuda/ccuda.pyx":149
 * 
 * cdef CUresult cuCtxAttach(CUcontext* pctx, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuCtxAttach(pctx, flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuCtxDetach(CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuCtxAttach(__pyx_v_pctx, __pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 149, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":148
 *     return ccuda._cuCtxGetExecAffinity(pExecAffinity, typename)
 * 
 * cdef CUresult cuCtxAttach(CUcontext* pctx, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxAttach(pctx, flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuCtxAttach", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":151
 *     return ccuda._cuCtxAttach(pctx, flags)
 * 
 * cdef CUresult cuCtxDetach(CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxDetach(ctx)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuCtxDetach(__pyx_t_4cuda_5ccuda_CUcontext __pyx_v_ctx) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuCtxDetach", __pyx_f[0], 151, 1, __PYX_ERR(0, 151, __pyx_L1_error));

  /* "cuda/ccuda.pyx":152
 * 
 * cdef CUresult cuCtxDetach(CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuCtxDetach(ctx)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuModuleLoad(CUmodule* module, const char* fname) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuCtxDetach(__pyx_v_ctx); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 152, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":151
 *     return ccuda._cuCtxAttach(pctx, flags)
 * 
 * cdef CUresult cuCtxDetach(CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxDetach(ctx)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuCtxDetach", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":154
 *     return ccuda._cuCtxDetach(ctx)
 * 
 * cdef CUresult cuModuleLoad(CUmodule* module, const char* fname) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuModuleLoad(module, fname)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuModuleLoad(__pyx_t_4cuda_5ccuda_CUmodule *__pyx_v_module, char const *__pyx_v_fname) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuModuleLoad", __pyx_f[0], 154, 1, __PYX_ERR(0, 154, __pyx_L1_error));

  /* "cuda/ccuda.pyx":155
 * 
 * cdef CUresult cuModuleLoad(CUmodule* module, const char* fname) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuModuleLoad(module, fname)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuModuleLoadData(CUmodule* module, const void* image) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuModuleLoad(__pyx_v_module, __pyx_v_fname); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 155, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":154
 *     return ccuda._cuCtxDetach(ctx)
 * 
 * cdef CUresult cuModuleLoad(CUmodule* module, const char* fname) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuModuleLoad(module, fname)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuModuleLoad", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":157
 *     return ccuda._cuModuleLoad(module, fname)
 * 
 * cdef CUresult cuModuleLoadData(CUmodule* module, const void* image) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuModuleLoadData(module, image)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuModuleLoadData(__pyx_t_4cuda_5ccuda_CUmodule *__pyx_v_module, void const *__pyx_v_image) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuModuleLoadData", __pyx_f[0], 157, 1, __PYX_ERR(0, 157, __pyx_L1_error));

  /* "cuda/ccuda.pyx":158
 * 
 * cdef CUresult cuModuleLoadData(CUmodule* module, const void* image) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuModuleLoadData(module, image)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuModuleLoadDataEx(CUmodule* module, const void* image, unsigned int numOptions, CUjit_option* options, void** optionValues) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuModuleLoadData(__pyx_v_module, __pyx_v_image); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 158, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":157
 *     return ccuda._cuModuleLoad(module, fname)
 * 
 * cdef CUresult cuModuleLoadData(CUmodule* module, const void* image) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuModuleLoadData(module, image)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuModuleLoadData", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":160
 *     return ccuda._cuModuleLoadData(module, image)
 * 
 * cdef CUresult cuModuleLoadDataEx(CUmodule* module, const void* image, unsigned int numOptions, CUjit_option* options, void** optionValues) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuModuleLoadDataEx(module, image, numOptions, options, optionValues)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuModuleLoadDataEx(__pyx_t_4cuda_5ccuda_CUmodule *__pyx_v_module, void const *__pyx_v_image, unsigned int __pyx_v_numOptions, __pyx_t_4cuda_5ccuda_CUjit_option *__pyx_v_options, void **__pyx_v_optionValues) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuModuleLoadDataEx", __pyx_f[0], 160, 1, __PYX_ERR(0, 160, __pyx_L1_error));

  /* "cuda/ccuda.pyx":161
 * 
 * cdef CUresult cuModuleLoadDataEx(CUmodule* module, const void* image, unsigned int numOptions, CUjit_option* options, void** optionValues) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuModuleLoadDataEx(module, image, numOptions, options, optionValues)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuModuleLoadFatBinary(CUmodule* module, const void* fatCubin) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuModuleLoadDataEx(__pyx_v_module, __pyx_v_image, __pyx_v_numOptions, __pyx_v_options, __pyx_v_optionValues); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 161, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":160
 *     return ccuda._cuModuleLoadData(module, image)
 * 
 * cdef CUresult cuModuleLoadDataEx(CUmodule* module, const void* image, unsigned int numOptions, CUjit_option* options, void** optionValues) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuModuleLoadDataEx(module, image, numOptions, options, optionValues)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuModuleLoadDataEx", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":163
 *     return ccuda._cuModuleLoadDataEx(module, image, numOptions, options, optionValues)
 * 
 * cdef CUresult cuModuleLoadFatBinary(CUmodule* module, const void* fatCubin) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuModuleLoadFatBinary(module, fatCubin)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuModuleLoadFatBinary(__pyx_t_4cuda_5ccuda_CUmodule *__pyx_v_module, void const *__pyx_v_fatCubin) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuModuleLoadFatBinary", __pyx_f[0], 163, 1, __PYX_ERR(0, 163, __pyx_L1_error));

  /* "cuda/ccuda.pyx":164
 * 
 * cdef CUresult cuModuleLoadFatBinary(CUmodule* module, const void* fatCubin) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuModuleLoadFatBinary(module, fatCubin)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuModuleUnload(CUmodule hmod) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuModuleLoadFatBinary(__pyx_v_module, __pyx_v_fatCubin); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 164, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":163
 *     return ccuda._cuModuleLoadDataEx(module, image, numOptions, options, optionValues)
 * 
 * cdef CUresult cuModuleLoadFatBinary(CUmodule* module, const void* fatCubin) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuModuleLoadFatBinary(module, fatCubin)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuModuleLoadFatBinary", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":166
 *     return ccuda._cuModuleLoadFatBinary(module, fatCubin)
 * 
 * cdef CUresult cuModuleUnload(CUmodule hmod) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuModuleUnload(hmod)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuModuleUnload(__pyx_t_4cuda_5ccuda_CUmodule __pyx_v_hmod) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuModuleUnload", __pyx_f[0], 166, 1, __PYX_ERR(0, 166, __pyx_L1_error));

  /* "cuda/ccuda.pyx":167
 * 
 * cdef CUresult cuModuleUnload(CUmodule hmod) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuModuleUnload(hmod)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuModuleGetFunction(CUfunction* hfunc, CUmodule hmod, const char* name) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuModuleUnload(__pyx_v_hmod); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 167, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":166
 *     return ccuda._cuModuleLoadFatBinary(module, fatCubin)
 * 
 * cdef CUresult cuModuleUnload(CUmodule hmod) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuModuleUnload(hmod)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuModuleUnload", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":169
 *     return ccuda._cuModuleUnload(hmod)
 * 
 * cdef CUresult cuModuleGetFunction(CUfunction* hfunc, CUmodule hmod, const char* name) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuModuleGetFunction(hfunc, hmod, name)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuModuleGetFunction(__pyx_t_4cuda_5ccuda_CUfunction *__pyx_v_hfunc, __pyx_t_4cuda_5ccuda_CUmodule __pyx_v_hmod, char const *__pyx_v_name) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuModuleGetFunction", __pyx_f[0], 169, 1, __PYX_ERR(0, 169, __pyx_L1_error));

  /* "cuda/ccuda.pyx":170
 * 
 * cdef CUresult cuModuleGetFunction(CUfunction* hfunc, CUmodule hmod, const char* name) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuModuleGetFunction(hfunc, hmod, name)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuModuleGetGlobal(CUdeviceptr* dptr, size_t* numbytes, CUmodule hmod, const char* name) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuModuleGetFunction(__pyx_v_hfunc, __pyx_v_hmod, __pyx_v_name); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 170, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":169
 *     return ccuda._cuModuleUnload(hmod)
 * 
 * cdef CUresult cuModuleGetFunction(CUfunction* hfunc, CUmodule hmod, const char* name) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuModuleGetFunction(hfunc, hmod, name)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuModuleGetFunction", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":172
 *     return ccuda._cuModuleGetFunction(hfunc, hmod, name)
 * 
 * cdef CUresult cuModuleGetGlobal(CUdeviceptr* dptr, size_t* numbytes, CUmodule hmod, const char* name) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuModuleGetGlobal_v2(dptr, numbytes, hmod, name)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuModuleGetGlobal(__pyx_t_4cuda_5ccuda_CUdeviceptr *__pyx_v_dptr, size_t *__pyx_v_numbytes, __pyx_t_4cuda_5ccuda_CUmodule __pyx_v_hmod, char const *__pyx_v_name) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuModuleGetGlobal", __pyx_f[0], 172, 1, __PYX_ERR(0, 172, __pyx_L1_error));

  /* "cuda/ccuda.pyx":173
 * 
 * cdef CUresult cuModuleGetGlobal(CUdeviceptr* dptr, size_t* numbytes, CUmodule hmod, const char* name) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuModuleGetGlobal_v2(dptr, numbytes, hmod, name)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuModuleGetTexRef(CUtexref* pTexRef, CUmodule hmod, const char* name) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuModuleGetGlobal_v2(__pyx_v_dptr, __pyx_v_numbytes, __pyx_v_hmod, __pyx_v_name); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 173, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":172
 *     return ccuda._cuModuleGetFunction(hfunc, hmod, name)
 * 
 * cdef CUresult cuModuleGetGlobal(CUdeviceptr* dptr, size_t* numbytes, CUmodule hmod, const char* name) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuModuleGetGlobal_v2(dptr, numbytes, hmod, name)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuModuleGetGlobal", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":175
 *     return ccuda._cuModuleGetGlobal_v2(dptr, numbytes, hmod, name)
 * 
 * cdef CUresult cuModuleGetTexRef(CUtexref* pTexRef, CUmodule hmod, const char* name) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuModuleGetTexRef(pTexRef, hmod, name)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuModuleGetTexRef(__pyx_t_4cuda_5ccuda_CUtexref *__pyx_v_pTexRef, __pyx_t_4cuda_5ccuda_CUmodule __pyx_v_hmod, char const *__pyx_v_name) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuModuleGetTexRef", __pyx_f[0], 175, 1, __PYX_ERR(0, 175, __pyx_L1_error));

  /* "cuda/ccuda.pyx":176
 * 
 * cdef CUresult cuModuleGetTexRef(CUtexref* pTexRef, CUmodule hmod, const char* name) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuModuleGetTexRef(pTexRef, hmod, name)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuModuleGetSurfRef(CUsurfref* pSurfRef, CUmodule hmod, const char* name) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuModuleGetTexRef(__pyx_v_pTexRef, __pyx_v_hmod, __pyx_v_name); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 176, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":175
 *     return ccuda._cuModuleGetGlobal_v2(dptr, numbytes, hmod, name)
 * 
 * cdef CUresult cuModuleGetTexRef(CUtexref* pTexRef, CUmodule hmod, const char* name) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuModuleGetTexRef(pTexRef, hmod, name)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuModuleGetTexRef", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":178
 *     return ccuda._cuModuleGetTexRef(pTexRef, hmod, name)
 * 
 * cdef CUresult cuModuleGetSurfRef(CUsurfref* pSurfRef, CUmodule hmod, const char* name) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuModuleGetSurfRef(pSurfRef, hmod, name)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuModuleGetSurfRef(__pyx_t_4cuda_5ccuda_CUsurfref *__pyx_v_pSurfRef, __pyx_t_4cuda_5ccuda_CUmodule __pyx_v_hmod, char const *__pyx_v_name) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuModuleGetSurfRef", __pyx_f[0], 178, 1, __PYX_ERR(0, 178, __pyx_L1_error));

  /* "cuda/ccuda.pyx":179
 * 
 * cdef CUresult cuModuleGetSurfRef(CUsurfref* pSurfRef, CUmodule hmod, const char* name) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuModuleGetSurfRef(pSurfRef, hmod, name)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuLinkCreate(unsigned int numOptions, CUjit_option* options, void** optionValues, CUlinkState* stateOut) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuModuleGetSurfRef(__pyx_v_pSurfRef, __pyx_v_hmod, __pyx_v_name); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 179, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":178
 *     return ccuda._cuModuleGetTexRef(pTexRef, hmod, name)
 * 
 * cdef CUresult cuModuleGetSurfRef(CUsurfref* pSurfRef, CUmodule hmod, const char* name) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuModuleGetSurfRef(pSurfRef, hmod, name)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuModuleGetSurfRef", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":181
 *     return ccuda._cuModuleGetSurfRef(pSurfRef, hmod, name)
 * 
 * cdef CUresult cuLinkCreate(unsigned int numOptions, CUjit_option* options, void** optionValues, CUlinkState* stateOut) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuLinkCreate_v2(numOptions, options, optionValues, stateOut)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuLinkCreate(unsigned int __pyx_v_numOptions, __pyx_t_4cuda_5ccuda_CUjit_option *__pyx_v_options, void **__pyx_v_optionValues, __pyx_t_4cuda_5ccuda_CUlinkState *__pyx_v_stateOut) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuLinkCreate", __pyx_f[0], 181, 1, __PYX_ERR(0, 181, __pyx_L1_error));

  /* "cuda/ccuda.pyx":182
 * 
 * cdef CUresult cuLinkCreate(unsigned int numOptions, CUjit_option* options, void** optionValues, CUlinkState* stateOut) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuLinkCreate_v2(numOptions, options, optionValues, stateOut)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuLinkAddData(CUlinkState state, CUjitInputType typename, void* data, size_t size, const char* name, unsigned int numOptions, CUjit_option* options, void** optionValues) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuLinkCreate_v2(__pyx_v_numOptions, __pyx_v_options, __pyx_v_optionValues, __pyx_v_stateOut); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 182, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":181
 *     return ccuda._cuModuleGetSurfRef(pSurfRef, hmod, name)
 * 
 * cdef CUresult cuLinkCreate(unsigned int numOptions, CUjit_option* options, void** optionValues, CUlinkState* stateOut) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuLinkCreate_v2(numOptions, options, optionValues, stateOut)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuLinkCreate", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":184
 *     return ccuda._cuLinkCreate_v2(numOptions, options, optionValues, stateOut)
 * 
 * cdef CUresult cuLinkAddData(CUlinkState state, CUjitInputType typename, void* data, size_t size, const char* name, unsigned int numOptions, CUjit_option* options, void** optionValues) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuLinkAddData_v2(state, typename, data, size, name, numOptions, options, optionValues)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuLinkAddData(__pyx_t_4cuda_5ccuda_CUlinkState __pyx_v_state, __pyx_t_4cuda_5ccuda_CUjitInputType __pyx_v_typename, void *__pyx_v_data, size_t __pyx_v_size, char const *__pyx_v_name, unsigned int __pyx_v_numOptions, __pyx_t_4cuda_5ccuda_CUjit_option *__pyx_v_options, void **__pyx_v_optionValues) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuLinkAddData", __pyx_f[0], 184, 1, __PYX_ERR(0, 184, __pyx_L1_error));

  /* "cuda/ccuda.pyx":185
 * 
 * cdef CUresult cuLinkAddData(CUlinkState state, CUjitInputType typename, void* data, size_t size, const char* name, unsigned int numOptions, CUjit_option* options, void** optionValues) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuLinkAddData_v2(state, typename, data, size, name, numOptions, options, optionValues)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuLinkAddFile(CUlinkState state, CUjitInputType typename, const char* path, unsigned int numOptions, CUjit_option* options, void** optionValues) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuLinkAddData_v2(__pyx_v_state, __pyx_v_typename, __pyx_v_data, __pyx_v_size, __pyx_v_name, __pyx_v_numOptions, __pyx_v_options, __pyx_v_optionValues); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 185, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":184
 *     return ccuda._cuLinkCreate_v2(numOptions, options, optionValues, stateOut)
 * 
 * cdef CUresult cuLinkAddData(CUlinkState state, CUjitInputType typename, void* data, size_t size, const char* name, unsigned int numOptions, CUjit_option* options, void** optionValues) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuLinkAddData_v2(state, typename, data, size, name, numOptions, options, optionValues)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuLinkAddData", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":187
 *     return ccuda._cuLinkAddData_v2(state, typename, data, size, name, numOptions, options, optionValues)
 * 
 * cdef CUresult cuLinkAddFile(CUlinkState state, CUjitInputType typename, const char* path, unsigned int numOptions, CUjit_option* options, void** optionValues) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuLinkAddFile_v2(state, typename, path, numOptions, options, optionValues)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuLinkAddFile(__pyx_t_4cuda_5ccuda_CUlinkState __pyx_v_state, __pyx_t_4cuda_5ccuda_CUjitInputType __pyx_v_typename, char const *__pyx_v_path, unsigned int __pyx_v_numOptions, __pyx_t_4cuda_5ccuda_CUjit_option *__pyx_v_options, void **__pyx_v_optionValues) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuLinkAddFile", __pyx_f[0], 187, 1, __PYX_ERR(0, 187, __pyx_L1_error));

  /* "cuda/ccuda.pyx":188
 * 
 * cdef CUresult cuLinkAddFile(CUlinkState state, CUjitInputType typename, const char* path, unsigned int numOptions, CUjit_option* options, void** optionValues) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuLinkAddFile_v2(state, typename, path, numOptions, options, optionValues)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuLinkComplete(CUlinkState state, void** cubinOut, size_t* sizeOut) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuLinkAddFile_v2(__pyx_v_state, __pyx_v_typename, __pyx_v_path, __pyx_v_numOptions, __pyx_v_options, __pyx_v_optionValues); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 188, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":187
 *     return ccuda._cuLinkAddData_v2(state, typename, data, size, name, numOptions, options, optionValues)
 * 
 * cdef CUresult cuLinkAddFile(CUlinkState state, CUjitInputType typename, const char* path, unsigned int numOptions, CUjit_option* options, void** optionValues) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuLinkAddFile_v2(state, typename, path, numOptions, options, optionValues)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuLinkAddFile", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":190
 *     return ccuda._cuLinkAddFile_v2(state, typename, path, numOptions, options, optionValues)
 * 
 * cdef CUresult cuLinkComplete(CUlinkState state, void** cubinOut, size_t* sizeOut) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuLinkComplete(state, cubinOut, sizeOut)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuLinkComplete(__pyx_t_4cuda_5ccuda_CUlinkState __pyx_v_state, void **__pyx_v_cubinOut, size_t *__pyx_v_sizeOut) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuLinkComplete", __pyx_f[0], 190, 1, __PYX_ERR(0, 190, __pyx_L1_error));

  /* "cuda/ccuda.pyx":191
 * 
 * cdef CUresult cuLinkComplete(CUlinkState state, void** cubinOut, size_t* sizeOut) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuLinkComplete(state, cubinOut, sizeOut)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuLinkDestroy(CUlinkState state) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuLinkComplete(__pyx_v_state, __pyx_v_cubinOut, __pyx_v_sizeOut); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 191, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":190
 *     return ccuda._cuLinkAddFile_v2(state, typename, path, numOptions, options, optionValues)
 * 
 * cdef CUresult cuLinkComplete(CUlinkState state, void** cubinOut, size_t* sizeOut) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuLinkComplete(state, cubinOut, sizeOut)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuLinkComplete", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":193
 *     return ccuda._cuLinkComplete(state, cubinOut, sizeOut)
 * 
 * cdef CUresult cuLinkDestroy(CUlinkState state) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuLinkDestroy(state)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuLinkDestroy(__pyx_t_4cuda_5ccuda_CUlinkState __pyx_v_state) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuLinkDestroy", __pyx_f[0], 193, 1, __PYX_ERR(0, 193, __pyx_L1_error));

  /* "cuda/ccuda.pyx":194
 * 
 * cdef CUresult cuLinkDestroy(CUlinkState state) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuLinkDestroy(state)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemGetInfo(size_t* free, size_t* total) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuLinkDestroy(__pyx_v_state); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 194, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":193
 *     return ccuda._cuLinkComplete(state, cubinOut, sizeOut)
 * 
 * cdef CUresult cuLinkDestroy(CUlinkState state) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuLinkDestroy(state)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuLinkDestroy", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":196
 *     return ccuda._cuLinkDestroy(state)
 * 
 * cdef CUresult cuMemGetInfo(size_t* free, size_t* total) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemGetInfo_v2(free, total)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemGetInfo(size_t *__pyx_v_free, size_t *__pyx_v_total) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemGetInfo", __pyx_f[0], 196, 1, __PYX_ERR(0, 196, __pyx_L1_error));

  /* "cuda/ccuda.pyx":197
 * 
 * cdef CUresult cuMemGetInfo(size_t* free, size_t* total) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemGetInfo_v2(free, total)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemAlloc(CUdeviceptr* dptr, size_t bytesize) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemGetInfo_v2(__pyx_v_free, __pyx_v_total); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 197, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":196
 *     return ccuda._cuLinkDestroy(state)
 * 
 * cdef CUresult cuMemGetInfo(size_t* free, size_t* total) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemGetInfo_v2(free, total)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemGetInfo", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":199
 *     return ccuda._cuMemGetInfo_v2(free, total)
 * 
 * cdef CUresult cuMemAlloc(CUdeviceptr* dptr, size_t bytesize) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemAlloc_v2(dptr, bytesize)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemAlloc(__pyx_t_4cuda_5ccuda_CUdeviceptr *__pyx_v_dptr, size_t __pyx_v_bytesize) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemAlloc", __pyx_f[0], 199, 1, __PYX_ERR(0, 199, __pyx_L1_error));

  /* "cuda/ccuda.pyx":200
 * 
 * cdef CUresult cuMemAlloc(CUdeviceptr* dptr, size_t bytesize) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemAlloc_v2(dptr, bytesize)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemAllocPitch(CUdeviceptr* dptr, size_t* pPitch, size_t WidthInBytes, size_t Height, unsigned int ElementSizeBytes) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemAlloc_v2(__pyx_v_dptr, __pyx_v_bytesize); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 200, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":199
 *     return ccuda._cuMemGetInfo_v2(free, total)
 * 
 * cdef CUresult cuMemAlloc(CUdeviceptr* dptr, size_t bytesize) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemAlloc_v2(dptr, bytesize)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemAlloc", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":202
 *     return ccuda._cuMemAlloc_v2(dptr, bytesize)
 * 
 * cdef CUresult cuMemAllocPitch(CUdeviceptr* dptr, size_t* pPitch, size_t WidthInBytes, size_t Height, unsigned int ElementSizeBytes) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemAllocPitch_v2(dptr, pPitch, WidthInBytes, Height, ElementSizeBytes)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemAllocPitch(__pyx_t_4cuda_5ccuda_CUdeviceptr *__pyx_v_dptr, size_t *__pyx_v_pPitch, size_t __pyx_v_WidthInBytes, size_t __pyx_v_Height, unsigned int __pyx_v_ElementSizeBytes) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemAllocPitch", __pyx_f[0], 202, 1, __PYX_ERR(0, 202, __pyx_L1_error));

  /* "cuda/ccuda.pyx":203
 * 
 * cdef CUresult cuMemAllocPitch(CUdeviceptr* dptr, size_t* pPitch, size_t WidthInBytes, size_t Height, unsigned int ElementSizeBytes) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemAllocPitch_v2(dptr, pPitch, WidthInBytes, Height, ElementSizeBytes)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemFree(CUdeviceptr dptr) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemAllocPitch_v2(__pyx_v_dptr, __pyx_v_pPitch, __pyx_v_WidthInBytes, __pyx_v_Height, __pyx_v_ElementSizeBytes); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 203, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":202
 *     return ccuda._cuMemAlloc_v2(dptr, bytesize)
 * 
 * cdef CUresult cuMemAllocPitch(CUdeviceptr* dptr, size_t* pPitch, size_t WidthInBytes, size_t Height, unsigned int ElementSizeBytes) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemAllocPitch_v2(dptr, pPitch, WidthInBytes, Height, ElementSizeBytes)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemAllocPitch", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":205
 *     return ccuda._cuMemAllocPitch_v2(dptr, pPitch, WidthInBytes, Height, ElementSizeBytes)
 * 
 * cdef CUresult cuMemFree(CUdeviceptr dptr) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemFree_v2(dptr)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemFree(__pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_dptr) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemFree", __pyx_f[0], 205, 1, __PYX_ERR(0, 205, __pyx_L1_error));

  /* "cuda/ccuda.pyx":206
 * 
 * cdef CUresult cuMemFree(CUdeviceptr dptr) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemFree_v2(dptr)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemGetAddressRange(CUdeviceptr* pbase, size_t* psize, CUdeviceptr dptr) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemFree_v2(__pyx_v_dptr); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 206, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":205
 *     return ccuda._cuMemAllocPitch_v2(dptr, pPitch, WidthInBytes, Height, ElementSizeBytes)
 * 
 * cdef CUresult cuMemFree(CUdeviceptr dptr) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemFree_v2(dptr)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemFree", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":208
 *     return ccuda._cuMemFree_v2(dptr)
 * 
 * cdef CUresult cuMemGetAddressRange(CUdeviceptr* pbase, size_t* psize, CUdeviceptr dptr) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemGetAddressRange_v2(pbase, psize, dptr)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemGetAddressRange(__pyx_t_4cuda_5ccuda_CUdeviceptr *__pyx_v_pbase, size_t *__pyx_v_psize, __pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_dptr) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemGetAddressRange", __pyx_f[0], 208, 1, __PYX_ERR(0, 208, __pyx_L1_error));

  /* "cuda/ccuda.pyx":209
 * 
 * cdef CUresult cuMemGetAddressRange(CUdeviceptr* pbase, size_t* psize, CUdeviceptr dptr) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemGetAddressRange_v2(pbase, psize, dptr)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemAllocHost(void** pp, size_t bytesize) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemGetAddressRange_v2(__pyx_v_pbase, __pyx_v_psize, __pyx_v_dptr); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 209, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":208
 *     return ccuda._cuMemFree_v2(dptr)
 * 
 * cdef CUresult cuMemGetAddressRange(CUdeviceptr* pbase, size_t* psize, CUdeviceptr dptr) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemGetAddressRange_v2(pbase, psize, dptr)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemGetAddressRange", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":211
 *     return ccuda._cuMemGetAddressRange_v2(pbase, psize, dptr)
 * 
 * cdef CUresult cuMemAllocHost(void** pp, size_t bytesize) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemAllocHost_v2(pp, bytesize)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemAllocHost(void **__pyx_v_pp, size_t __pyx_v_bytesize) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemAllocHost", __pyx_f[0], 211, 1, __PYX_ERR(0, 211, __pyx_L1_error));

  /* "cuda/ccuda.pyx":212
 * 
 * cdef CUresult cuMemAllocHost(void** pp, size_t bytesize) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemAllocHost_v2(pp, bytesize)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemFreeHost(void* p) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemAllocHost_v2(__pyx_v_pp, __pyx_v_bytesize); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 212, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":211
 *     return ccuda._cuMemGetAddressRange_v2(pbase, psize, dptr)
 * 
 * cdef CUresult cuMemAllocHost(void** pp, size_t bytesize) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemAllocHost_v2(pp, bytesize)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemAllocHost", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":214
 *     return ccuda._cuMemAllocHost_v2(pp, bytesize)
 * 
 * cdef CUresult cuMemFreeHost(void* p) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemFreeHost(p)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemFreeHost(void *__pyx_v_p) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemFreeHost", __pyx_f[0], 214, 1, __PYX_ERR(0, 214, __pyx_L1_error));

  /* "cuda/ccuda.pyx":215
 * 
 * cdef CUresult cuMemFreeHost(void* p) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemFreeHost(p)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemHostAlloc(void** pp, size_t bytesize, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemFreeHost(__pyx_v_p); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 215, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":214
 *     return ccuda._cuMemAllocHost_v2(pp, bytesize)
 * 
 * cdef CUresult cuMemFreeHost(void* p) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemFreeHost(p)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemFreeHost", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":217
 *     return ccuda._cuMemFreeHost(p)
 * 
 * cdef CUresult cuMemHostAlloc(void** pp, size_t bytesize, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemHostAlloc(pp, bytesize, Flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemHostAlloc(void **__pyx_v_pp, size_t __pyx_v_bytesize, unsigned int __pyx_v_Flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemHostAlloc", __pyx_f[0], 217, 1, __PYX_ERR(0, 217, __pyx_L1_error));

  /* "cuda/ccuda.pyx":218
 * 
 * cdef CUresult cuMemHostAlloc(void** pp, size_t bytesize, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemHostAlloc(pp, bytesize, Flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemHostGetDevicePointer(CUdeviceptr* pdptr, void* p, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemHostAlloc(__pyx_v_pp, __pyx_v_bytesize, __pyx_v_Flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 218, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":217
 *     return ccuda._cuMemFreeHost(p)
 * 
 * cdef CUresult cuMemHostAlloc(void** pp, size_t bytesize, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemHostAlloc(pp, bytesize, Flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemHostAlloc", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":220
 *     return ccuda._cuMemHostAlloc(pp, bytesize, Flags)
 * 
 * cdef CUresult cuMemHostGetDevicePointer(CUdeviceptr* pdptr, void* p, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemHostGetDevicePointer_v2(pdptr, p, Flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemHostGetDevicePointer(__pyx_t_4cuda_5ccuda_CUdeviceptr *__pyx_v_pdptr, void *__pyx_v_p, unsigned int __pyx_v_Flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemHostGetDevicePointer", __pyx_f[0], 220, 1, __PYX_ERR(0, 220, __pyx_L1_error));

  /* "cuda/ccuda.pyx":221
 * 
 * cdef CUresult cuMemHostGetDevicePointer(CUdeviceptr* pdptr, void* p, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemHostGetDevicePointer_v2(pdptr, p, Flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemHostGetFlags(unsigned int* pFlags, void* p) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemHostGetDevicePointer_v2(__pyx_v_pdptr, __pyx_v_p, __pyx_v_Flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 221, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":220
 *     return ccuda._cuMemHostAlloc(pp, bytesize, Flags)
 * 
 * cdef CUresult cuMemHostGetDevicePointer(CUdeviceptr* pdptr, void* p, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemHostGetDevicePointer_v2(pdptr, p, Flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemHostGetDevicePointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":223
 *     return ccuda._cuMemHostGetDevicePointer_v2(pdptr, p, Flags)
 * 
 * cdef CUresult cuMemHostGetFlags(unsigned int* pFlags, void* p) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemHostGetFlags(pFlags, p)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemHostGetFlags(unsigned int *__pyx_v_pFlags, void *__pyx_v_p) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemHostGetFlags", __pyx_f[0], 223, 1, __PYX_ERR(0, 223, __pyx_L1_error));

  /* "cuda/ccuda.pyx":224
 * 
 * cdef CUresult cuMemHostGetFlags(unsigned int* pFlags, void* p) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemHostGetFlags(pFlags, p)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemAllocManaged(CUdeviceptr* dptr, size_t bytesize, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemHostGetFlags(__pyx_v_pFlags, __pyx_v_p); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 224, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":223
 *     return ccuda._cuMemHostGetDevicePointer_v2(pdptr, p, Flags)
 * 
 * cdef CUresult cuMemHostGetFlags(unsigned int* pFlags, void* p) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemHostGetFlags(pFlags, p)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemHostGetFlags", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":226
 *     return ccuda._cuMemHostGetFlags(pFlags, p)
 * 
 * cdef CUresult cuMemAllocManaged(CUdeviceptr* dptr, size_t bytesize, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemAllocManaged(dptr, bytesize, flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemAllocManaged(__pyx_t_4cuda_5ccuda_CUdeviceptr *__pyx_v_dptr, size_t __pyx_v_bytesize, unsigned int __pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemAllocManaged", __pyx_f[0], 226, 1, __PYX_ERR(0, 226, __pyx_L1_error));

  /* "cuda/ccuda.pyx":227
 * 
 * cdef CUresult cuMemAllocManaged(CUdeviceptr* dptr, size_t bytesize, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemAllocManaged(dptr, bytesize, flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDeviceGetByPCIBusId(CUdevice* dev, const char* pciBusId) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemAllocManaged(__pyx_v_dptr, __pyx_v_bytesize, __pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 227, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":226
 *     return ccuda._cuMemHostGetFlags(pFlags, p)
 * 
 * cdef CUresult cuMemAllocManaged(CUdeviceptr* dptr, size_t bytesize, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemAllocManaged(dptr, bytesize, flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemAllocManaged", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":229
 *     return ccuda._cuMemAllocManaged(dptr, bytesize, flags)
 * 
 * cdef CUresult cuDeviceGetByPCIBusId(CUdevice* dev, const char* pciBusId) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetByPCIBusId(dev, pciBusId)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDeviceGetByPCIBusId(__pyx_t_4cuda_5ccuda_CUdevice *__pyx_v_dev, char const *__pyx_v_pciBusId) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDeviceGetByPCIBusId", __pyx_f[0], 229, 1, __PYX_ERR(0, 229, __pyx_L1_error));

  /* "cuda/ccuda.pyx":230
 * 
 * cdef CUresult cuDeviceGetByPCIBusId(CUdevice* dev, const char* pciBusId) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDeviceGetByPCIBusId(dev, pciBusId)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDeviceGetPCIBusId(char* pciBusId, int length, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetByPCIBusId(__pyx_v_dev, __pyx_v_pciBusId); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 230, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":229
 *     return ccuda._cuMemAllocManaged(dptr, bytesize, flags)
 * 
 * cdef CUresult cuDeviceGetByPCIBusId(CUdevice* dev, const char* pciBusId) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetByPCIBusId(dev, pciBusId)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDeviceGetByPCIBusId", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":232
 *     return ccuda._cuDeviceGetByPCIBusId(dev, pciBusId)
 * 
 * cdef CUresult cuDeviceGetPCIBusId(char* pciBusId, int length, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetPCIBusId(pciBusId, length, dev)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDeviceGetPCIBusId(char *__pyx_v_pciBusId, int __pyx_v_length, __pyx_t_4cuda_5ccuda_CUdevice __pyx_v_dev) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDeviceGetPCIBusId", __pyx_f[0], 232, 1, __PYX_ERR(0, 232, __pyx_L1_error));

  /* "cuda/ccuda.pyx":233
 * 
 * cdef CUresult cuDeviceGetPCIBusId(char* pciBusId, int length, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDeviceGetPCIBusId(pciBusId, length, dev)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuIpcGetEventHandle(CUipcEventHandle* pHandle, CUevent event) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetPCIBusId(__pyx_v_pciBusId, __pyx_v_length, __pyx_v_dev); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 233, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":232
 *     return ccuda._cuDeviceGetByPCIBusId(dev, pciBusId)
 * 
 * cdef CUresult cuDeviceGetPCIBusId(char* pciBusId, int length, CUdevice dev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetPCIBusId(pciBusId, length, dev)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDeviceGetPCIBusId", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":235
 *     return ccuda._cuDeviceGetPCIBusId(pciBusId, length, dev)
 * 
 * cdef CUresult cuIpcGetEventHandle(CUipcEventHandle* pHandle, CUevent event) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuIpcGetEventHandle(pHandle, event)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuIpcGetEventHandle(__pyx_t_4cuda_5ccuda_CUipcEventHandle *__pyx_v_pHandle, __pyx_t_4cuda_5ccuda_CUevent __pyx_v_event) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuIpcGetEventHandle", __pyx_f[0], 235, 1, __PYX_ERR(0, 235, __pyx_L1_error));

  /* "cuda/ccuda.pyx":236
 * 
 * cdef CUresult cuIpcGetEventHandle(CUipcEventHandle* pHandle, CUevent event) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuIpcGetEventHandle(pHandle, event)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuIpcOpenEventHandle(CUevent* phEvent, CUipcEventHandle handle) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuIpcGetEventHandle(__pyx_v_pHandle, __pyx_v_event); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 236, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":235
 *     return ccuda._cuDeviceGetPCIBusId(pciBusId, length, dev)
 * 
 * cdef CUresult cuIpcGetEventHandle(CUipcEventHandle* pHandle, CUevent event) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuIpcGetEventHandle(pHandle, event)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuIpcGetEventHandle", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":238
 *     return ccuda._cuIpcGetEventHandle(pHandle, event)
 * 
 * cdef CUresult cuIpcOpenEventHandle(CUevent* phEvent, CUipcEventHandle handle) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuIpcOpenEventHandle(phEvent, handle)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuIpcOpenEventHandle(__pyx_t_4cuda_5ccuda_CUevent *__pyx_v_phEvent, __pyx_t_4cuda_5ccuda_CUipcEventHandle __pyx_v_handle) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuIpcOpenEventHandle", __pyx_f[0], 238, 1, __PYX_ERR(0, 238, __pyx_L1_error));

  /* "cuda/ccuda.pyx":239
 * 
 * cdef CUresult cuIpcOpenEventHandle(CUevent* phEvent, CUipcEventHandle handle) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuIpcOpenEventHandle(phEvent, handle)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuIpcGetMemHandle(CUipcMemHandle* pHandle, CUdeviceptr dptr) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuIpcOpenEventHandle(__pyx_v_phEvent, __pyx_v_handle); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 239, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":238
 *     return ccuda._cuIpcGetEventHandle(pHandle, event)
 * 
 * cdef CUresult cuIpcOpenEventHandle(CUevent* phEvent, CUipcEventHandle handle) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuIpcOpenEventHandle(phEvent, handle)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuIpcOpenEventHandle", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":241
 *     return ccuda._cuIpcOpenEventHandle(phEvent, handle)
 * 
 * cdef CUresult cuIpcGetMemHandle(CUipcMemHandle* pHandle, CUdeviceptr dptr) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuIpcGetMemHandle(pHandle, dptr)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuIpcGetMemHandle(__pyx_t_4cuda_5ccuda_CUipcMemHandle *__pyx_v_pHandle, __pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_dptr) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuIpcGetMemHandle", __pyx_f[0], 241, 1, __PYX_ERR(0, 241, __pyx_L1_error));

  /* "cuda/ccuda.pyx":242
 * 
 * cdef CUresult cuIpcGetMemHandle(CUipcMemHandle* pHandle, CUdeviceptr dptr) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuIpcGetMemHandle(pHandle, dptr)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuIpcOpenMemHandle(CUdeviceptr* pdptr, CUipcMemHandle handle, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuIpcGetMemHandle(__pyx_v_pHandle, __pyx_v_dptr); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 242, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":241
 *     return ccuda._cuIpcOpenEventHandle(phEvent, handle)
 * 
 * cdef CUresult cuIpcGetMemHandle(CUipcMemHandle* pHandle, CUdeviceptr dptr) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuIpcGetMemHandle(pHandle, dptr)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuIpcGetMemHandle", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":244
 *     return ccuda._cuIpcGetMemHandle(pHandle, dptr)
 * 
 * cdef CUresult cuIpcOpenMemHandle(CUdeviceptr* pdptr, CUipcMemHandle handle, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuIpcOpenMemHandle_v2(pdptr, handle, Flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuIpcOpenMemHandle(__pyx_t_4cuda_5ccuda_CUdeviceptr *__pyx_v_pdptr, __pyx_t_4cuda_5ccuda_CUipcMemHandle __pyx_v_handle, unsigned int __pyx_v_Flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuIpcOpenMemHandle", __pyx_f[0], 244, 1, __PYX_ERR(0, 244, __pyx_L1_error));

  /* "cuda/ccuda.pyx":245
 * 
 * cdef CUresult cuIpcOpenMemHandle(CUdeviceptr* pdptr, CUipcMemHandle handle, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuIpcOpenMemHandle_v2(pdptr, handle, Flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuIpcCloseMemHandle(CUdeviceptr dptr) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuIpcOpenMemHandle_v2(__pyx_v_pdptr, __pyx_v_handle, __pyx_v_Flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 245, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":244
 *     return ccuda._cuIpcGetMemHandle(pHandle, dptr)
 * 
 * cdef CUresult cuIpcOpenMemHandle(CUdeviceptr* pdptr, CUipcMemHandle handle, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuIpcOpenMemHandle_v2(pdptr, handle, Flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuIpcOpenMemHandle", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":247
 *     return ccuda._cuIpcOpenMemHandle_v2(pdptr, handle, Flags)
 * 
 * cdef CUresult cuIpcCloseMemHandle(CUdeviceptr dptr) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuIpcCloseMemHandle(dptr)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuIpcCloseMemHandle(__pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_dptr) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuIpcCloseMemHandle", __pyx_f[0], 247, 1, __PYX_ERR(0, 247, __pyx_L1_error));

  /* "cuda/ccuda.pyx":248
 * 
 * cdef CUresult cuIpcCloseMemHandle(CUdeviceptr dptr) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuIpcCloseMemHandle(dptr)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemHostRegister(void* p, size_t bytesize, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuIpcCloseMemHandle(__pyx_v_dptr); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 248, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":247
 *     return ccuda._cuIpcOpenMemHandle_v2(pdptr, handle, Flags)
 * 
 * cdef CUresult cuIpcCloseMemHandle(CUdeviceptr dptr) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuIpcCloseMemHandle(dptr)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuIpcCloseMemHandle", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":250
 *     return ccuda._cuIpcCloseMemHandle(dptr)
 * 
 * cdef CUresult cuMemHostRegister(void* p, size_t bytesize, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemHostRegister_v2(p, bytesize, Flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemHostRegister(void *__pyx_v_p, size_t __pyx_v_bytesize, unsigned int __pyx_v_Flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemHostRegister", __pyx_f[0], 250, 1, __PYX_ERR(0, 250, __pyx_L1_error));

  /* "cuda/ccuda.pyx":251
 * 
 * cdef CUresult cuMemHostRegister(void* p, size_t bytesize, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemHostRegister_v2(p, bytesize, Flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemHostUnregister(void* p) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemHostRegister_v2(__pyx_v_p, __pyx_v_bytesize, __pyx_v_Flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 251, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":250
 *     return ccuda._cuIpcCloseMemHandle(dptr)
 * 
 * cdef CUresult cuMemHostRegister(void* p, size_t bytesize, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemHostRegister_v2(p, bytesize, Flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemHostRegister", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":253
 *     return ccuda._cuMemHostRegister_v2(p, bytesize, Flags)
 * 
 * cdef CUresult cuMemHostUnregister(void* p) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemHostUnregister(p)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemHostUnregister(void *__pyx_v_p) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemHostUnregister", __pyx_f[0], 253, 1, __PYX_ERR(0, 253, __pyx_L1_error));

  /* "cuda/ccuda.pyx":254
 * 
 * cdef CUresult cuMemHostUnregister(void* p) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemHostUnregister(p)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemcpy(CUdeviceptr dst, CUdeviceptr src, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemHostUnregister(__pyx_v_p); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 254, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":253
 *     return ccuda._cuMemHostRegister_v2(p, bytesize, Flags)
 * 
 * cdef CUresult cuMemHostUnregister(void* p) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemHostUnregister(p)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemHostUnregister", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":256
 *     return ccuda._cuMemHostUnregister(p)
 * 
 * cdef CUresult cuMemcpy(CUdeviceptr dst, CUdeviceptr src, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpy(dst, src, ByteCount)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemcpy(__pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_dst, __pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_src, size_t __pyx_v_ByteCount) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemcpy", __pyx_f[0], 256, 1, __PYX_ERR(0, 256, __pyx_L1_error));

  /* "cuda/ccuda.pyx":257
 * 
 * cdef CUresult cuMemcpy(CUdeviceptr dst, CUdeviceptr src, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemcpy(dst, src, ByteCount)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemcpyPeer(CUdeviceptr dstDevice, CUcontext dstContext, CUdeviceptr srcDevice, CUcontext srcContext, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemcpy(__pyx_v_dst, __pyx_v_src, __pyx_v_ByteCount); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 257, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":256
 *     return ccuda._cuMemHostUnregister(p)
 * 
 * cdef CUresult cuMemcpy(CUdeviceptr dst, CUdeviceptr src, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpy(dst, src, ByteCount)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemcpy", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":259
 *     return ccuda._cuMemcpy(dst, src, ByteCount)
 * 
 * cdef CUresult cuMemcpyPeer(CUdeviceptr dstDevice, CUcontext dstContext, CUdeviceptr srcDevice, CUcontext srcContext, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyPeer(dstDevice, dstContext, srcDevice, srcContext, ByteCount)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemcpyPeer(__pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_dstDevice, __pyx_t_4cuda_5ccuda_CUcontext __pyx_v_dstContext, __pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_srcDevice, __pyx_t_4cuda_5ccuda_CUcontext __pyx_v_srcContext, size_t __pyx_v_ByteCount) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemcpyPeer", __pyx_f[0], 259, 1, __PYX_ERR(0, 259, __pyx_L1_error));

  /* "cuda/ccuda.pyx":260
 * 
 * cdef CUresult cuMemcpyPeer(CUdeviceptr dstDevice, CUcontext dstContext, CUdeviceptr srcDevice, CUcontext srcContext, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemcpyPeer(dstDevice, dstContext, srcDevice, srcContext, ByteCount)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemcpyHtoD(CUdeviceptr dstDevice, const void* srcHost, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyPeer(__pyx_v_dstDevice, __pyx_v_dstContext, __pyx_v_srcDevice, __pyx_v_srcContext, __pyx_v_ByteCount); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 260, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":259
 *     return ccuda._cuMemcpy(dst, src, ByteCount)
 * 
 * cdef CUresult cuMemcpyPeer(CUdeviceptr dstDevice, CUcontext dstContext, CUdeviceptr srcDevice, CUcontext srcContext, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyPeer(dstDevice, dstContext, srcDevice, srcContext, ByteCount)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemcpyPeer", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":262
 *     return ccuda._cuMemcpyPeer(dstDevice, dstContext, srcDevice, srcContext, ByteCount)
 * 
 * cdef CUresult cuMemcpyHtoD(CUdeviceptr dstDevice, const void* srcHost, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyHtoD_v2(dstDevice, srcHost, ByteCount)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemcpyHtoD(__pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_dstDevice, void const *__pyx_v_srcHost, size_t __pyx_v_ByteCount) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemcpyHtoD", __pyx_f[0], 262, 1, __PYX_ERR(0, 262, __pyx_L1_error));

  /* "cuda/ccuda.pyx":263
 * 
 * cdef CUresult cuMemcpyHtoD(CUdeviceptr dstDevice, const void* srcHost, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemcpyHtoD_v2(dstDevice, srcHost, ByteCount)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemcpyDtoH(void* dstHost, CUdeviceptr srcDevice, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyHtoD_v2(__pyx_v_dstDevice, __pyx_v_srcHost, __pyx_v_ByteCount); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 263, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":262
 *     return ccuda._cuMemcpyPeer(dstDevice, dstContext, srcDevice, srcContext, ByteCount)
 * 
 * cdef CUresult cuMemcpyHtoD(CUdeviceptr dstDevice, const void* srcHost, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyHtoD_v2(dstDevice, srcHost, ByteCount)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemcpyHtoD", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":265
 *     return ccuda._cuMemcpyHtoD_v2(dstDevice, srcHost, ByteCount)
 * 
 * cdef CUresult cuMemcpyDtoH(void* dstHost, CUdeviceptr srcDevice, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyDtoH_v2(dstHost, srcDevice, ByteCount)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemcpyDtoH(void *__pyx_v_dstHost, __pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_srcDevice, size_t __pyx_v_ByteCount) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemcpyDtoH", __pyx_f[0], 265, 1, __PYX_ERR(0, 265, __pyx_L1_error));

  /* "cuda/ccuda.pyx":266
 * 
 * cdef CUresult cuMemcpyDtoH(void* dstHost, CUdeviceptr srcDevice, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemcpyDtoH_v2(dstHost, srcDevice, ByteCount)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemcpyDtoD(CUdeviceptr dstDevice, CUdeviceptr srcDevice, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyDtoH_v2(__pyx_v_dstHost, __pyx_v_srcDevice, __pyx_v_ByteCount); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 266, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":265
 *     return ccuda._cuMemcpyHtoD_v2(dstDevice, srcHost, ByteCount)
 * 
 * cdef CUresult cuMemcpyDtoH(void* dstHost, CUdeviceptr srcDevice, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyDtoH_v2(dstHost, srcDevice, ByteCount)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemcpyDtoH", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":268
 *     return ccuda._cuMemcpyDtoH_v2(dstHost, srcDevice, ByteCount)
 * 
 * cdef CUresult cuMemcpyDtoD(CUdeviceptr dstDevice, CUdeviceptr srcDevice, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyDtoD_v2(dstDevice, srcDevice, ByteCount)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemcpyDtoD(__pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_dstDevice, __pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_srcDevice, size_t __pyx_v_ByteCount) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemcpyDtoD", __pyx_f[0], 268, 1, __PYX_ERR(0, 268, __pyx_L1_error));

  /* "cuda/ccuda.pyx":269
 * 
 * cdef CUresult cuMemcpyDtoD(CUdeviceptr dstDevice, CUdeviceptr srcDevice, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemcpyDtoD_v2(dstDevice, srcDevice, ByteCount)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemcpyDtoA(CUarray dstArray, size_t dstOffset, CUdeviceptr srcDevice, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyDtoD_v2(__pyx_v_dstDevice, __pyx_v_srcDevice, __pyx_v_ByteCount); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 269, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":268
 *     return ccuda._cuMemcpyDtoH_v2(dstHost, srcDevice, ByteCount)
 * 
 * cdef CUresult cuMemcpyDtoD(CUdeviceptr dstDevice, CUdeviceptr srcDevice, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyDtoD_v2(dstDevice, srcDevice, ByteCount)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemcpyDtoD", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":271
 *     return ccuda._cuMemcpyDtoD_v2(dstDevice, srcDevice, ByteCount)
 * 
 * cdef CUresult cuMemcpyDtoA(CUarray dstArray, size_t dstOffset, CUdeviceptr srcDevice, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyDtoA_v2(dstArray, dstOffset, srcDevice, ByteCount)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemcpyDtoA(__pyx_t_4cuda_5ccuda_CUarray __pyx_v_dstArray, size_t __pyx_v_dstOffset, __pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_srcDevice, size_t __pyx_v_ByteCount) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemcpyDtoA", __pyx_f[0], 271, 1, __PYX_ERR(0, 271, __pyx_L1_error));

  /* "cuda/ccuda.pyx":272
 * 
 * cdef CUresult cuMemcpyDtoA(CUarray dstArray, size_t dstOffset, CUdeviceptr srcDevice, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemcpyDtoA_v2(dstArray, dstOffset, srcDevice, ByteCount)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemcpyAtoD(CUdeviceptr dstDevice, CUarray srcArray, size_t srcOffset, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyDtoA_v2(__pyx_v_dstArray, __pyx_v_dstOffset, __pyx_v_srcDevice, __pyx_v_ByteCount); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 272, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":271
 *     return ccuda._cuMemcpyDtoD_v2(dstDevice, srcDevice, ByteCount)
 * 
 * cdef CUresult cuMemcpyDtoA(CUarray dstArray, size_t dstOffset, CUdeviceptr srcDevice, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyDtoA_v2(dstArray, dstOffset, srcDevice, ByteCount)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemcpyDtoA", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":274
 *     return ccuda._cuMemcpyDtoA_v2(dstArray, dstOffset, srcDevice, ByteCount)
 * 
 * cdef CUresult cuMemcpyAtoD(CUdeviceptr dstDevice, CUarray srcArray, size_t srcOffset, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyAtoD_v2(dstDevice, srcArray, srcOffset, ByteCount)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemcpyAtoD(__pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_dstDevice, __pyx_t_4cuda_5ccuda_CUarray __pyx_v_srcArray, size_t __pyx_v_srcOffset, size_t __pyx_v_ByteCount) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemcpyAtoD", __pyx_f[0], 274, 1, __PYX_ERR(0, 274, __pyx_L1_error));

  /* "cuda/ccuda.pyx":275
 * 
 * cdef CUresult cuMemcpyAtoD(CUdeviceptr dstDevice, CUarray srcArray, size_t srcOffset, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemcpyAtoD_v2(dstDevice, srcArray, srcOffset, ByteCount)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemcpyHtoA(CUarray dstArray, size_t dstOffset, const void* srcHost, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyAtoD_v2(__pyx_v_dstDevice, __pyx_v_srcArray, __pyx_v_srcOffset, __pyx_v_ByteCount); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 275, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":274
 *     return ccuda._cuMemcpyDtoA_v2(dstArray, dstOffset, srcDevice, ByteCount)
 * 
 * cdef CUresult cuMemcpyAtoD(CUdeviceptr dstDevice, CUarray srcArray, size_t srcOffset, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyAtoD_v2(dstDevice, srcArray, srcOffset, ByteCount)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemcpyAtoD", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":277
 *     return ccuda._cuMemcpyAtoD_v2(dstDevice, srcArray, srcOffset, ByteCount)
 * 
 * cdef CUresult cuMemcpyHtoA(CUarray dstArray, size_t dstOffset, const void* srcHost, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyHtoA_v2(dstArray, dstOffset, srcHost, ByteCount)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemcpyHtoA(__pyx_t_4cuda_5ccuda_CUarray __pyx_v_dstArray, size_t __pyx_v_dstOffset, void const *__pyx_v_srcHost, size_t __pyx_v_ByteCount) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemcpyHtoA", __pyx_f[0], 277, 1, __PYX_ERR(0, 277, __pyx_L1_error));

  /* "cuda/ccuda.pyx":278
 * 
 * cdef CUresult cuMemcpyHtoA(CUarray dstArray, size_t dstOffset, const void* srcHost, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemcpyHtoA_v2(dstArray, dstOffset, srcHost, ByteCount)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemcpyAtoH(void* dstHost, CUarray srcArray, size_t srcOffset, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyHtoA_v2(__pyx_v_dstArray, __pyx_v_dstOffset, __pyx_v_srcHost, __pyx_v_ByteCount); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 278, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":277
 *     return ccuda._cuMemcpyAtoD_v2(dstDevice, srcArray, srcOffset, ByteCount)
 * 
 * cdef CUresult cuMemcpyHtoA(CUarray dstArray, size_t dstOffset, const void* srcHost, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyHtoA_v2(dstArray, dstOffset, srcHost, ByteCount)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemcpyHtoA", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":280
 *     return ccuda._cuMemcpyHtoA_v2(dstArray, dstOffset, srcHost, ByteCount)
 * 
 * cdef CUresult cuMemcpyAtoH(void* dstHost, CUarray srcArray, size_t srcOffset, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyAtoH_v2(dstHost, srcArray, srcOffset, ByteCount)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemcpyAtoH(void *__pyx_v_dstHost, __pyx_t_4cuda_5ccuda_CUarray __pyx_v_srcArray, size_t __pyx_v_srcOffset, size_t __pyx_v_ByteCount) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemcpyAtoH", __pyx_f[0], 280, 1, __PYX_ERR(0, 280, __pyx_L1_error));

  /* "cuda/ccuda.pyx":281
 * 
 * cdef CUresult cuMemcpyAtoH(void* dstHost, CUarray srcArray, size_t srcOffset, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemcpyAtoH_v2(dstHost, srcArray, srcOffset, ByteCount)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemcpyAtoA(CUarray dstArray, size_t dstOffset, CUarray srcArray, size_t srcOffset, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyAtoH_v2(__pyx_v_dstHost, __pyx_v_srcArray, __pyx_v_srcOffset, __pyx_v_ByteCount); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 281, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":280
 *     return ccuda._cuMemcpyHtoA_v2(dstArray, dstOffset, srcHost, ByteCount)
 * 
 * cdef CUresult cuMemcpyAtoH(void* dstHost, CUarray srcArray, size_t srcOffset, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyAtoH_v2(dstHost, srcArray, srcOffset, ByteCount)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemcpyAtoH", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":283
 *     return ccuda._cuMemcpyAtoH_v2(dstHost, srcArray, srcOffset, ByteCount)
 * 
 * cdef CUresult cuMemcpyAtoA(CUarray dstArray, size_t dstOffset, CUarray srcArray, size_t srcOffset, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyAtoA_v2(dstArray, dstOffset, srcArray, srcOffset, ByteCount)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemcpyAtoA(__pyx_t_4cuda_5ccuda_CUarray __pyx_v_dstArray, size_t __pyx_v_dstOffset, __pyx_t_4cuda_5ccuda_CUarray __pyx_v_srcArray, size_t __pyx_v_srcOffset, size_t __pyx_v_ByteCount) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemcpyAtoA", __pyx_f[0], 283, 1, __PYX_ERR(0, 283, __pyx_L1_error));

  /* "cuda/ccuda.pyx":284
 * 
 * cdef CUresult cuMemcpyAtoA(CUarray dstArray, size_t dstOffset, CUarray srcArray, size_t srcOffset, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemcpyAtoA_v2(dstArray, dstOffset, srcArray, srcOffset, ByteCount)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemcpy2D(const CUDA_MEMCPY2D* pCopy) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyAtoA_v2(__pyx_v_dstArray, __pyx_v_dstOffset, __pyx_v_srcArray, __pyx_v_srcOffset, __pyx_v_ByteCount); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 284, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":283
 *     return ccuda._cuMemcpyAtoH_v2(dstHost, srcArray, srcOffset, ByteCount)
 * 
 * cdef CUresult cuMemcpyAtoA(CUarray dstArray, size_t dstOffset, CUarray srcArray, size_t srcOffset, size_t ByteCount) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyAtoA_v2(dstArray, dstOffset, srcArray, srcOffset, ByteCount)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemcpyAtoA", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":286
 *     return ccuda._cuMemcpyAtoA_v2(dstArray, dstOffset, srcArray, srcOffset, ByteCount)
 * 
 * cdef CUresult cuMemcpy2D(const CUDA_MEMCPY2D* pCopy) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpy2D_v2(pCopy)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemcpy2D(__pyx_t_4cuda_5ccuda_CUDA_MEMCPY2D const *__pyx_v_pCopy) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemcpy2D", __pyx_f[0], 286, 1, __PYX_ERR(0, 286, __pyx_L1_error));

  /* "cuda/ccuda.pyx":287
 * 
 * cdef CUresult cuMemcpy2D(const CUDA_MEMCPY2D* pCopy) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemcpy2D_v2(pCopy)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemcpy2DUnaligned(const CUDA_MEMCPY2D* pCopy) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemcpy2D_v2(__pyx_v_pCopy); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 287, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":286
 *     return ccuda._cuMemcpyAtoA_v2(dstArray, dstOffset, srcArray, srcOffset, ByteCount)
 * 
 * cdef CUresult cuMemcpy2D(const CUDA_MEMCPY2D* pCopy) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpy2D_v2(pCopy)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemcpy2D", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":289
 *     return ccuda._cuMemcpy2D_v2(pCopy)
 * 
 * cdef CUresult cuMemcpy2DUnaligned(const CUDA_MEMCPY2D* pCopy) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpy2DUnaligned_v2(pCopy)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemcpy2DUnaligned(__pyx_t_4cuda_5ccuda_CUDA_MEMCPY2D const *__pyx_v_pCopy) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemcpy2DUnaligned", __pyx_f[0], 289, 1, __PYX_ERR(0, 289, __pyx_L1_error));

  /* "cuda/ccuda.pyx":290
 * 
 * cdef CUresult cuMemcpy2DUnaligned(const CUDA_MEMCPY2D* pCopy) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemcpy2DUnaligned_v2(pCopy)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemcpy3D(const CUDA_MEMCPY3D* pCopy) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemcpy2DUnaligned_v2(__pyx_v_pCopy); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 290, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":289
 *     return ccuda._cuMemcpy2D_v2(pCopy)
 * 
 * cdef CUresult cuMemcpy2DUnaligned(const CUDA_MEMCPY2D* pCopy) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpy2DUnaligned_v2(pCopy)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemcpy2DUnaligned", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":292
 *     return ccuda._cuMemcpy2DUnaligned_v2(pCopy)
 * 
 * cdef CUresult cuMemcpy3D(const CUDA_MEMCPY3D* pCopy) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpy3D_v2(pCopy)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemcpy3D(__pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D const *__pyx_v_pCopy) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemcpy3D", __pyx_f[0], 292, 1, __PYX_ERR(0, 292, __pyx_L1_error));

  /* "cuda/ccuda.pyx":293
 * 
 * cdef CUresult cuMemcpy3D(const CUDA_MEMCPY3D* pCopy) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemcpy3D_v2(pCopy)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemcpy3DPeer(const CUDA_MEMCPY3D_PEER* pCopy) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemcpy3D_v2(__pyx_v_pCopy); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 293, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":292
 *     return ccuda._cuMemcpy2DUnaligned_v2(pCopy)
 * 
 * cdef CUresult cuMemcpy3D(const CUDA_MEMCPY3D* pCopy) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpy3D_v2(pCopy)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemcpy3D", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":295
 *     return ccuda._cuMemcpy3D_v2(pCopy)
 * 
 * cdef CUresult cuMemcpy3DPeer(const CUDA_MEMCPY3D_PEER* pCopy) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpy3DPeer(pCopy)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemcpy3DPeer(__pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D_PEER const *__pyx_v_pCopy) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemcpy3DPeer", __pyx_f[0], 295, 1, __PYX_ERR(0, 295, __pyx_L1_error));

  /* "cuda/ccuda.pyx":296
 * 
 * cdef CUresult cuMemcpy3DPeer(const CUDA_MEMCPY3D_PEER* pCopy) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemcpy3DPeer(pCopy)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemcpyAsync(CUdeviceptr dst, CUdeviceptr src, size_t ByteCount, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemcpy3DPeer(__pyx_v_pCopy); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 296, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":295
 *     return ccuda._cuMemcpy3D_v2(pCopy)
 * 
 * cdef CUresult cuMemcpy3DPeer(const CUDA_MEMCPY3D_PEER* pCopy) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpy3DPeer(pCopy)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemcpy3DPeer", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":298
 *     return ccuda._cuMemcpy3DPeer(pCopy)
 * 
 * cdef CUresult cuMemcpyAsync(CUdeviceptr dst, CUdeviceptr src, size_t ByteCount, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyAsync(dst, src, ByteCount, hStream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemcpyAsync(__pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_dst, __pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_src, size_t __pyx_v_ByteCount, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemcpyAsync", __pyx_f[0], 298, 1, __PYX_ERR(0, 298, __pyx_L1_error));

  /* "cuda/ccuda.pyx":299
 * 
 * cdef CUresult cuMemcpyAsync(CUdeviceptr dst, CUdeviceptr src, size_t ByteCount, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemcpyAsync(dst, src, ByteCount, hStream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemcpyPeerAsync(CUdeviceptr dstDevice, CUcontext dstContext, CUdeviceptr srcDevice, CUcontext srcContext, size_t ByteCount, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyAsync(__pyx_v_dst, __pyx_v_src, __pyx_v_ByteCount, __pyx_v_hStream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 299, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":298
 *     return ccuda._cuMemcpy3DPeer(pCopy)
 * 
 * cdef CUresult cuMemcpyAsync(CUdeviceptr dst, CUdeviceptr src, size_t ByteCount, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyAsync(dst, src, ByteCount, hStream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemcpyAsync", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":301
 *     return ccuda._cuMemcpyAsync(dst, src, ByteCount, hStream)
 * 
 * cdef CUresult cuMemcpyPeerAsync(CUdeviceptr dstDevice, CUcontext dstContext, CUdeviceptr srcDevice, CUcontext srcContext, size_t ByteCount, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyPeerAsync(dstDevice, dstContext, srcDevice, srcContext, ByteCount, hStream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemcpyPeerAsync(__pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_dstDevice, __pyx_t_4cuda_5ccuda_CUcontext __pyx_v_dstContext, __pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_srcDevice, __pyx_t_4cuda_5ccuda_CUcontext __pyx_v_srcContext, size_t __pyx_v_ByteCount, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemcpyPeerAsync", __pyx_f[0], 301, 1, __PYX_ERR(0, 301, __pyx_L1_error));

  /* "cuda/ccuda.pyx":302
 * 
 * cdef CUresult cuMemcpyPeerAsync(CUdeviceptr dstDevice, CUcontext dstContext, CUdeviceptr srcDevice, CUcontext srcContext, size_t ByteCount, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemcpyPeerAsync(dstDevice, dstContext, srcDevice, srcContext, ByteCount, hStream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemcpyHtoDAsync(CUdeviceptr dstDevice, const void* srcHost, size_t ByteCount, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyPeerAsync(__pyx_v_dstDevice, __pyx_v_dstContext, __pyx_v_srcDevice, __pyx_v_srcContext, __pyx_v_ByteCount, __pyx_v_hStream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 302, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":301
 *     return ccuda._cuMemcpyAsync(dst, src, ByteCount, hStream)
 * 
 * cdef CUresult cuMemcpyPeerAsync(CUdeviceptr dstDevice, CUcontext dstContext, CUdeviceptr srcDevice, CUcontext srcContext, size_t ByteCount, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyPeerAsync(dstDevice, dstContext, srcDevice, srcContext, ByteCount, hStream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemcpyPeerAsync", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":304
 *     return ccuda._cuMemcpyPeerAsync(dstDevice, dstContext, srcDevice, srcContext, ByteCount, hStream)
 * 
 * cdef CUresult cuMemcpyHtoDAsync(CUdeviceptr dstDevice, const void* srcHost, size_t ByteCount, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyHtoDAsync_v2(dstDevice, srcHost, ByteCount, hStream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemcpyHtoDAsync(__pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_dstDevice, void const *__pyx_v_srcHost, size_t __pyx_v_ByteCount, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemcpyHtoDAsync", __pyx_f[0], 304, 1, __PYX_ERR(0, 304, __pyx_L1_error));

  /* "cuda/ccuda.pyx":305
 * 
 * cdef CUresult cuMemcpyHtoDAsync(CUdeviceptr dstDevice, const void* srcHost, size_t ByteCount, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemcpyHtoDAsync_v2(dstDevice, srcHost, ByteCount, hStream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemcpyDtoHAsync(void* dstHost, CUdeviceptr srcDevice, size_t ByteCount, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyHtoDAsync_v2(__pyx_v_dstDevice, __pyx_v_srcHost, __pyx_v_ByteCount, __pyx_v_hStream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 305, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":304
 *     return ccuda._cuMemcpyPeerAsync(dstDevice, dstContext, srcDevice, srcContext, ByteCount, hStream)
 * 
 * cdef CUresult cuMemcpyHtoDAsync(CUdeviceptr dstDevice, const void* srcHost, size_t ByteCount, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyHtoDAsync_v2(dstDevice, srcHost, ByteCount, hStream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemcpyHtoDAsync", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":307
 *     return ccuda._cuMemcpyHtoDAsync_v2(dstDevice, srcHost, ByteCount, hStream)
 * 
 * cdef CUresult cuMemcpyDtoHAsync(void* dstHost, CUdeviceptr srcDevice, size_t ByteCount, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyDtoHAsync_v2(dstHost, srcDevice, ByteCount, hStream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemcpyDtoHAsync(void *__pyx_v_dstHost, __pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_srcDevice, size_t __pyx_v_ByteCount, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemcpyDtoHAsync", __pyx_f[0], 307, 1, __PYX_ERR(0, 307, __pyx_L1_error));

  /* "cuda/ccuda.pyx":308
 * 
 * cdef CUresult cuMemcpyDtoHAsync(void* dstHost, CUdeviceptr srcDevice, size_t ByteCount, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemcpyDtoHAsync_v2(dstHost, srcDevice, ByteCount, hStream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemcpyDtoDAsync(CUdeviceptr dstDevice, CUdeviceptr srcDevice, size_t ByteCount, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyDtoHAsync_v2(__pyx_v_dstHost, __pyx_v_srcDevice, __pyx_v_ByteCount, __pyx_v_hStream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 308, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":307
 *     return ccuda._cuMemcpyHtoDAsync_v2(dstDevice, srcHost, ByteCount, hStream)
 * 
 * cdef CUresult cuMemcpyDtoHAsync(void* dstHost, CUdeviceptr srcDevice, size_t ByteCount, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyDtoHAsync_v2(dstHost, srcDevice, ByteCount, hStream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemcpyDtoHAsync", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":310
 *     return ccuda._cuMemcpyDtoHAsync_v2(dstHost, srcDevice, ByteCount, hStream)
 * 
 * cdef CUresult cuMemcpyDtoDAsync(CUdeviceptr dstDevice, CUdeviceptr srcDevice, size_t ByteCount, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyDtoDAsync_v2(dstDevice, srcDevice, ByteCount, hStream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemcpyDtoDAsync(__pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_dstDevice, __pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_srcDevice, size_t __pyx_v_ByteCount, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemcpyDtoDAsync", __pyx_f[0], 310, 1, __PYX_ERR(0, 310, __pyx_L1_error));

  /* "cuda/ccuda.pyx":311
 * 
 * cdef CUresult cuMemcpyDtoDAsync(CUdeviceptr dstDevice, CUdeviceptr srcDevice, size_t ByteCount, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemcpyDtoDAsync_v2(dstDevice, srcDevice, ByteCount, hStream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemcpyHtoAAsync(CUarray dstArray, size_t dstOffset, const void* srcHost, size_t ByteCount, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyDtoDAsync_v2(__pyx_v_dstDevice, __pyx_v_srcDevice, __pyx_v_ByteCount, __pyx_v_hStream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 311, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":310
 *     return ccuda._cuMemcpyDtoHAsync_v2(dstHost, srcDevice, ByteCount, hStream)
 * 
 * cdef CUresult cuMemcpyDtoDAsync(CUdeviceptr dstDevice, CUdeviceptr srcDevice, size_t ByteCount, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyDtoDAsync_v2(dstDevice, srcDevice, ByteCount, hStream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemcpyDtoDAsync", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":313
 *     return ccuda._cuMemcpyDtoDAsync_v2(dstDevice, srcDevice, ByteCount, hStream)
 * 
 * cdef CUresult cuMemcpyHtoAAsync(CUarray dstArray, size_t dstOffset, const void* srcHost, size_t ByteCount, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyHtoAAsync_v2(dstArray, dstOffset, srcHost, ByteCount, hStream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemcpyHtoAAsync(__pyx_t_4cuda_5ccuda_CUarray __pyx_v_dstArray, size_t __pyx_v_dstOffset, void const *__pyx_v_srcHost, size_t __pyx_v_ByteCount, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemcpyHtoAAsync", __pyx_f[0], 313, 1, __PYX_ERR(0, 313, __pyx_L1_error));

  /* "cuda/ccuda.pyx":314
 * 
 * cdef CUresult cuMemcpyHtoAAsync(CUarray dstArray, size_t dstOffset, const void* srcHost, size_t ByteCount, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemcpyHtoAAsync_v2(dstArray, dstOffset, srcHost, ByteCount, hStream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemcpyAtoHAsync(void* dstHost, CUarray srcArray, size_t srcOffset, size_t ByteCount, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyHtoAAsync_v2(__pyx_v_dstArray, __pyx_v_dstOffset, __pyx_v_srcHost, __pyx_v_ByteCount, __pyx_v_hStream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 314, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":313
 *     return ccuda._cuMemcpyDtoDAsync_v2(dstDevice, srcDevice, ByteCount, hStream)
 * 
 * cdef CUresult cuMemcpyHtoAAsync(CUarray dstArray, size_t dstOffset, const void* srcHost, size_t ByteCount, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyHtoAAsync_v2(dstArray, dstOffset, srcHost, ByteCount, hStream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemcpyHtoAAsync", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":316
 *     return ccuda._cuMemcpyHtoAAsync_v2(dstArray, dstOffset, srcHost, ByteCount, hStream)
 * 
 * cdef CUresult cuMemcpyAtoHAsync(void* dstHost, CUarray srcArray, size_t srcOffset, size_t ByteCount, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyAtoHAsync_v2(dstHost, srcArray, srcOffset, ByteCount, hStream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemcpyAtoHAsync(void *__pyx_v_dstHost, __pyx_t_4cuda_5ccuda_CUarray __pyx_v_srcArray, size_t __pyx_v_srcOffset, size_t __pyx_v_ByteCount, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemcpyAtoHAsync", __pyx_f[0], 316, 1, __PYX_ERR(0, 316, __pyx_L1_error));

  /* "cuda/ccuda.pyx":317
 * 
 * cdef CUresult cuMemcpyAtoHAsync(void* dstHost, CUarray srcArray, size_t srcOffset, size_t ByteCount, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemcpyAtoHAsync_v2(dstHost, srcArray, srcOffset, ByteCount, hStream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemcpy2DAsync(const CUDA_MEMCPY2D* pCopy, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyAtoHAsync_v2(__pyx_v_dstHost, __pyx_v_srcArray, __pyx_v_srcOffset, __pyx_v_ByteCount, __pyx_v_hStream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 317, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":316
 *     return ccuda._cuMemcpyHtoAAsync_v2(dstArray, dstOffset, srcHost, ByteCount, hStream)
 * 
 * cdef CUresult cuMemcpyAtoHAsync(void* dstHost, CUarray srcArray, size_t srcOffset, size_t ByteCount, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpyAtoHAsync_v2(dstHost, srcArray, srcOffset, ByteCount, hStream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemcpyAtoHAsync", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":319
 *     return ccuda._cuMemcpyAtoHAsync_v2(dstHost, srcArray, srcOffset, ByteCount, hStream)
 * 
 * cdef CUresult cuMemcpy2DAsync(const CUDA_MEMCPY2D* pCopy, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpy2DAsync_v2(pCopy, hStream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemcpy2DAsync(__pyx_t_4cuda_5ccuda_CUDA_MEMCPY2D const *__pyx_v_pCopy, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemcpy2DAsync", __pyx_f[0], 319, 1, __PYX_ERR(0, 319, __pyx_L1_error));

  /* "cuda/ccuda.pyx":320
 * 
 * cdef CUresult cuMemcpy2DAsync(const CUDA_MEMCPY2D* pCopy, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemcpy2DAsync_v2(pCopy, hStream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemcpy3DAsync(const CUDA_MEMCPY3D* pCopy, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemcpy2DAsync_v2(__pyx_v_pCopy, __pyx_v_hStream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 320, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":319
 *     return ccuda._cuMemcpyAtoHAsync_v2(dstHost, srcArray, srcOffset, ByteCount, hStream)
 * 
 * cdef CUresult cuMemcpy2DAsync(const CUDA_MEMCPY2D* pCopy, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpy2DAsync_v2(pCopy, hStream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemcpy2DAsync", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":322
 *     return ccuda._cuMemcpy2DAsync_v2(pCopy, hStream)
 * 
 * cdef CUresult cuMemcpy3DAsync(const CUDA_MEMCPY3D* pCopy, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpy3DAsync_v2(pCopy, hStream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemcpy3DAsync(__pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D const *__pyx_v_pCopy, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemcpy3DAsync", __pyx_f[0], 322, 1, __PYX_ERR(0, 322, __pyx_L1_error));

  /* "cuda/ccuda.pyx":323
 * 
 * cdef CUresult cuMemcpy3DAsync(const CUDA_MEMCPY3D* pCopy, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemcpy3DAsync_v2(pCopy, hStream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemcpy3DPeerAsync(const CUDA_MEMCPY3D_PEER* pCopy, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemcpy3DAsync_v2(__pyx_v_pCopy, __pyx_v_hStream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 323, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":322
 *     return ccuda._cuMemcpy2DAsync_v2(pCopy, hStream)
 * 
 * cdef CUresult cuMemcpy3DAsync(const CUDA_MEMCPY3D* pCopy, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpy3DAsync_v2(pCopy, hStream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemcpy3DAsync", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":325
 *     return ccuda._cuMemcpy3DAsync_v2(pCopy, hStream)
 * 
 * cdef CUresult cuMemcpy3DPeerAsync(const CUDA_MEMCPY3D_PEER* pCopy, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpy3DPeerAsync(pCopy, hStream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemcpy3DPeerAsync(__pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D_PEER const *__pyx_v_pCopy, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemcpy3DPeerAsync", __pyx_f[0], 325, 1, __PYX_ERR(0, 325, __pyx_L1_error));

  /* "cuda/ccuda.pyx":326
 * 
 * cdef CUresult cuMemcpy3DPeerAsync(const CUDA_MEMCPY3D_PEER* pCopy, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemcpy3DPeerAsync(pCopy, hStream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemsetD8(CUdeviceptr dstDevice, unsigned char uc, size_t N) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemcpy3DPeerAsync(__pyx_v_pCopy, __pyx_v_hStream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 326, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":325
 *     return ccuda._cuMemcpy3DAsync_v2(pCopy, hStream)
 * 
 * cdef CUresult cuMemcpy3DPeerAsync(const CUDA_MEMCPY3D_PEER* pCopy, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemcpy3DPeerAsync(pCopy, hStream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemcpy3DPeerAsync", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":328
 *     return ccuda._cuMemcpy3DPeerAsync(pCopy, hStream)
 * 
 * cdef CUresult cuMemsetD8(CUdeviceptr dstDevice, unsigned char uc, size_t N) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemsetD8_v2(dstDevice, uc, N)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemsetD8(__pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_dstDevice, unsigned char __pyx_v_uc, size_t __pyx_v_N) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemsetD8", __pyx_f[0], 328, 1, __PYX_ERR(0, 328, __pyx_L1_error));

  /* "cuda/ccuda.pyx":329
 * 
 * cdef CUresult cuMemsetD8(CUdeviceptr dstDevice, unsigned char uc, size_t N) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemsetD8_v2(dstDevice, uc, N)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemsetD16(CUdeviceptr dstDevice, unsigned short us, size_t N) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD8_v2(__pyx_v_dstDevice, __pyx_v_uc, __pyx_v_N); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 329, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":328
 *     return ccuda._cuMemcpy3DPeerAsync(pCopy, hStream)
 * 
 * cdef CUresult cuMemsetD8(CUdeviceptr dstDevice, unsigned char uc, size_t N) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemsetD8_v2(dstDevice, uc, N)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemsetD8", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":331
 *     return ccuda._cuMemsetD8_v2(dstDevice, uc, N)
 * 
 * cdef CUresult cuMemsetD16(CUdeviceptr dstDevice, unsigned short us, size_t N) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemsetD16_v2(dstDevice, us, N)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemsetD16(__pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_dstDevice, unsigned short __pyx_v_us, size_t __pyx_v_N) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemsetD16", __pyx_f[0], 331, 1, __PYX_ERR(0, 331, __pyx_L1_error));

  /* "cuda/ccuda.pyx":332
 * 
 * cdef CUresult cuMemsetD16(CUdeviceptr dstDevice, unsigned short us, size_t N) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemsetD16_v2(dstDevice, us, N)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemsetD32(CUdeviceptr dstDevice, unsigned int ui, size_t N) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD16_v2(__pyx_v_dstDevice, __pyx_v_us, __pyx_v_N); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 332, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":331
 *     return ccuda._cuMemsetD8_v2(dstDevice, uc, N)
 * 
 * cdef CUresult cuMemsetD16(CUdeviceptr dstDevice, unsigned short us, size_t N) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemsetD16_v2(dstDevice, us, N)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemsetD16", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":334
 *     return ccuda._cuMemsetD16_v2(dstDevice, us, N)
 * 
 * cdef CUresult cuMemsetD32(CUdeviceptr dstDevice, unsigned int ui, size_t N) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemsetD32_v2(dstDevice, ui, N)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemsetD32(__pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_dstDevice, unsigned int __pyx_v_ui, size_t __pyx_v_N) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemsetD32", __pyx_f[0], 334, 1, __PYX_ERR(0, 334, __pyx_L1_error));

  /* "cuda/ccuda.pyx":335
 * 
 * cdef CUresult cuMemsetD32(CUdeviceptr dstDevice, unsigned int ui, size_t N) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemsetD32_v2(dstDevice, ui, N)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemsetD2D8(CUdeviceptr dstDevice, size_t dstPitch, unsigned char uc, size_t Width, size_t Height) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD32_v2(__pyx_v_dstDevice, __pyx_v_ui, __pyx_v_N); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 335, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":334
 *     return ccuda._cuMemsetD16_v2(dstDevice, us, N)
 * 
 * cdef CUresult cuMemsetD32(CUdeviceptr dstDevice, unsigned int ui, size_t N) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemsetD32_v2(dstDevice, ui, N)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemsetD32", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":337
 *     return ccuda._cuMemsetD32_v2(dstDevice, ui, N)
 * 
 * cdef CUresult cuMemsetD2D8(CUdeviceptr dstDevice, size_t dstPitch, unsigned char uc, size_t Width, size_t Height) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemsetD2D8_v2(dstDevice, dstPitch, uc, Width, Height)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemsetD2D8(__pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_dstDevice, size_t __pyx_v_dstPitch, unsigned char __pyx_v_uc, size_t __pyx_v_Width, size_t __pyx_v_Height) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemsetD2D8", __pyx_f[0], 337, 1, __PYX_ERR(0, 337, __pyx_L1_error));

  /* "cuda/ccuda.pyx":338
 * 
 * cdef CUresult cuMemsetD2D8(CUdeviceptr dstDevice, size_t dstPitch, unsigned char uc, size_t Width, size_t Height) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemsetD2D8_v2(dstDevice, dstPitch, uc, Width, Height)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemsetD2D16(CUdeviceptr dstDevice, size_t dstPitch, unsigned short us, size_t Width, size_t Height) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD2D8_v2(__pyx_v_dstDevice, __pyx_v_dstPitch, __pyx_v_uc, __pyx_v_Width, __pyx_v_Height); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 338, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":337
 *     return ccuda._cuMemsetD32_v2(dstDevice, ui, N)
 * 
 * cdef CUresult cuMemsetD2D8(CUdeviceptr dstDevice, size_t dstPitch, unsigned char uc, size_t Width, size_t Height) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemsetD2D8_v2(dstDevice, dstPitch, uc, Width, Height)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemsetD2D8", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":340
 *     return ccuda._cuMemsetD2D8_v2(dstDevice, dstPitch, uc, Width, Height)
 * 
 * cdef CUresult cuMemsetD2D16(CUdeviceptr dstDevice, size_t dstPitch, unsigned short us, size_t Width, size_t Height) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemsetD2D16_v2(dstDevice, dstPitch, us, Width, Height)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemsetD2D16(__pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_dstDevice, size_t __pyx_v_dstPitch, unsigned short __pyx_v_us, size_t __pyx_v_Width, size_t __pyx_v_Height) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemsetD2D16", __pyx_f[0], 340, 1, __PYX_ERR(0, 340, __pyx_L1_error));

  /* "cuda/ccuda.pyx":341
 * 
 * cdef CUresult cuMemsetD2D16(CUdeviceptr dstDevice, size_t dstPitch, unsigned short us, size_t Width, size_t Height) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemsetD2D16_v2(dstDevice, dstPitch, us, Width, Height)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemsetD2D32(CUdeviceptr dstDevice, size_t dstPitch, unsigned int ui, size_t Width, size_t Height) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD2D16_v2(__pyx_v_dstDevice, __pyx_v_dstPitch, __pyx_v_us, __pyx_v_Width, __pyx_v_Height); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 341, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":340
 *     return ccuda._cuMemsetD2D8_v2(dstDevice, dstPitch, uc, Width, Height)
 * 
 * cdef CUresult cuMemsetD2D16(CUdeviceptr dstDevice, size_t dstPitch, unsigned short us, size_t Width, size_t Height) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemsetD2D16_v2(dstDevice, dstPitch, us, Width, Height)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemsetD2D16", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":343
 *     return ccuda._cuMemsetD2D16_v2(dstDevice, dstPitch, us, Width, Height)
 * 
 * cdef CUresult cuMemsetD2D32(CUdeviceptr dstDevice, size_t dstPitch, unsigned int ui, size_t Width, size_t Height) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemsetD2D32_v2(dstDevice, dstPitch, ui, Width, Height)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemsetD2D32(__pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_dstDevice, size_t __pyx_v_dstPitch, unsigned int __pyx_v_ui, size_t __pyx_v_Width, size_t __pyx_v_Height) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemsetD2D32", __pyx_f[0], 343, 1, __PYX_ERR(0, 343, __pyx_L1_error));

  /* "cuda/ccuda.pyx":344
 * 
 * cdef CUresult cuMemsetD2D32(CUdeviceptr dstDevice, size_t dstPitch, unsigned int ui, size_t Width, size_t Height) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemsetD2D32_v2(dstDevice, dstPitch, ui, Width, Height)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemsetD8Async(CUdeviceptr dstDevice, unsigned char uc, size_t N, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD2D32_v2(__pyx_v_dstDevice, __pyx_v_dstPitch, __pyx_v_ui, __pyx_v_Width, __pyx_v_Height); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 344, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":343
 *     return ccuda._cuMemsetD2D16_v2(dstDevice, dstPitch, us, Width, Height)
 * 
 * cdef CUresult cuMemsetD2D32(CUdeviceptr dstDevice, size_t dstPitch, unsigned int ui, size_t Width, size_t Height) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemsetD2D32_v2(dstDevice, dstPitch, ui, Width, Height)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemsetD2D32", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":346
 *     return ccuda._cuMemsetD2D32_v2(dstDevice, dstPitch, ui, Width, Height)
 * 
 * cdef CUresult cuMemsetD8Async(CUdeviceptr dstDevice, unsigned char uc, size_t N, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemsetD8Async(dstDevice, uc, N, hStream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemsetD8Async(__pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_dstDevice, unsigned char __pyx_v_uc, size_t __pyx_v_N, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemsetD8Async", __pyx_f[0], 346, 1, __PYX_ERR(0, 346, __pyx_L1_error));

  /* "cuda/ccuda.pyx":347
 * 
 * cdef CUresult cuMemsetD8Async(CUdeviceptr dstDevice, unsigned char uc, size_t N, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemsetD8Async(dstDevice, uc, N, hStream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemsetD16Async(CUdeviceptr dstDevice, unsigned short us, size_t N, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD8Async(__pyx_v_dstDevice, __pyx_v_uc, __pyx_v_N, __pyx_v_hStream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 347, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":346
 *     return ccuda._cuMemsetD2D32_v2(dstDevice, dstPitch, ui, Width, Height)
 * 
 * cdef CUresult cuMemsetD8Async(CUdeviceptr dstDevice, unsigned char uc, size_t N, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemsetD8Async(dstDevice, uc, N, hStream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemsetD8Async", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":349
 *     return ccuda._cuMemsetD8Async(dstDevice, uc, N, hStream)
 * 
 * cdef CUresult cuMemsetD16Async(CUdeviceptr dstDevice, unsigned short us, size_t N, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemsetD16Async(dstDevice, us, N, hStream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemsetD16Async(__pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_dstDevice, unsigned short __pyx_v_us, size_t __pyx_v_N, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemsetD16Async", __pyx_f[0], 349, 1, __PYX_ERR(0, 349, __pyx_L1_error));

  /* "cuda/ccuda.pyx":350
 * 
 * cdef CUresult cuMemsetD16Async(CUdeviceptr dstDevice, unsigned short us, size_t N, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemsetD16Async(dstDevice, us, N, hStream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemsetD32Async(CUdeviceptr dstDevice, unsigned int ui, size_t N, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD16Async(__pyx_v_dstDevice, __pyx_v_us, __pyx_v_N, __pyx_v_hStream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 350, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":349
 *     return ccuda._cuMemsetD8Async(dstDevice, uc, N, hStream)
 * 
 * cdef CUresult cuMemsetD16Async(CUdeviceptr dstDevice, unsigned short us, size_t N, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemsetD16Async(dstDevice, us, N, hStream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemsetD16Async", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":352
 *     return ccuda._cuMemsetD16Async(dstDevice, us, N, hStream)
 * 
 * cdef CUresult cuMemsetD32Async(CUdeviceptr dstDevice, unsigned int ui, size_t N, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemsetD32Async(dstDevice, ui, N, hStream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemsetD32Async(__pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_dstDevice, unsigned int __pyx_v_ui, size_t __pyx_v_N, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemsetD32Async", __pyx_f[0], 352, 1, __PYX_ERR(0, 352, __pyx_L1_error));

  /* "cuda/ccuda.pyx":353
 * 
 * cdef CUresult cuMemsetD32Async(CUdeviceptr dstDevice, unsigned int ui, size_t N, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemsetD32Async(dstDevice, ui, N, hStream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemsetD2D8Async(CUdeviceptr dstDevice, size_t dstPitch, unsigned char uc, size_t Width, size_t Height, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD32Async(__pyx_v_dstDevice, __pyx_v_ui, __pyx_v_N, __pyx_v_hStream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 353, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":352
 *     return ccuda._cuMemsetD16Async(dstDevice, us, N, hStream)
 * 
 * cdef CUresult cuMemsetD32Async(CUdeviceptr dstDevice, unsigned int ui, size_t N, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemsetD32Async(dstDevice, ui, N, hStream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemsetD32Async", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":355
 *     return ccuda._cuMemsetD32Async(dstDevice, ui, N, hStream)
 * 
 * cdef CUresult cuMemsetD2D8Async(CUdeviceptr dstDevice, size_t dstPitch, unsigned char uc, size_t Width, size_t Height, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemsetD2D8Async(dstDevice, dstPitch, uc, Width, Height, hStream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemsetD2D8Async(__pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_dstDevice, size_t __pyx_v_dstPitch, unsigned char __pyx_v_uc, size_t __pyx_v_Width, size_t __pyx_v_Height, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemsetD2D8Async", __pyx_f[0], 355, 1, __PYX_ERR(0, 355, __pyx_L1_error));

  /* "cuda/ccuda.pyx":356
 * 
 * cdef CUresult cuMemsetD2D8Async(CUdeviceptr dstDevice, size_t dstPitch, unsigned char uc, size_t Width, size_t Height, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemsetD2D8Async(dstDevice, dstPitch, uc, Width, Height, hStream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemsetD2D16Async(CUdeviceptr dstDevice, size_t dstPitch, unsigned short us, size_t Width, size_t Height, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD2D8Async(__pyx_v_dstDevice, __pyx_v_dstPitch, __pyx_v_uc, __pyx_v_Width, __pyx_v_Height, __pyx_v_hStream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 356, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":355
 *     return ccuda._cuMemsetD32Async(dstDevice, ui, N, hStream)
 * 
 * cdef CUresult cuMemsetD2D8Async(CUdeviceptr dstDevice, size_t dstPitch, unsigned char uc, size_t Width, size_t Height, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemsetD2D8Async(dstDevice, dstPitch, uc, Width, Height, hStream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemsetD2D8Async", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":358
 *     return ccuda._cuMemsetD2D8Async(dstDevice, dstPitch, uc, Width, Height, hStream)
 * 
 * cdef CUresult cuMemsetD2D16Async(CUdeviceptr dstDevice, size_t dstPitch, unsigned short us, size_t Width, size_t Height, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemsetD2D16Async(dstDevice, dstPitch, us, Width, Height, hStream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemsetD2D16Async(__pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_dstDevice, size_t __pyx_v_dstPitch, unsigned short __pyx_v_us, size_t __pyx_v_Width, size_t __pyx_v_Height, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemsetD2D16Async", __pyx_f[0], 358, 1, __PYX_ERR(0, 358, __pyx_L1_error));

  /* "cuda/ccuda.pyx":359
 * 
 * cdef CUresult cuMemsetD2D16Async(CUdeviceptr dstDevice, size_t dstPitch, unsigned short us, size_t Width, size_t Height, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemsetD2D16Async(dstDevice, dstPitch, us, Width, Height, hStream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemsetD2D32Async(CUdeviceptr dstDevice, size_t dstPitch, unsigned int ui, size_t Width, size_t Height, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD2D16Async(__pyx_v_dstDevice, __pyx_v_dstPitch, __pyx_v_us, __pyx_v_Width, __pyx_v_Height, __pyx_v_hStream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 359, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":358
 *     return ccuda._cuMemsetD2D8Async(dstDevice, dstPitch, uc, Width, Height, hStream)
 * 
 * cdef CUresult cuMemsetD2D16Async(CUdeviceptr dstDevice, size_t dstPitch, unsigned short us, size_t Width, size_t Height, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemsetD2D16Async(dstDevice, dstPitch, us, Width, Height, hStream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemsetD2D16Async", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":361
 *     return ccuda._cuMemsetD2D16Async(dstDevice, dstPitch, us, Width, Height, hStream)
 * 
 * cdef CUresult cuMemsetD2D32Async(CUdeviceptr dstDevice, size_t dstPitch, unsigned int ui, size_t Width, size_t Height, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemsetD2D32Async(dstDevice, dstPitch, ui, Width, Height, hStream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemsetD2D32Async(__pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_dstDevice, size_t __pyx_v_dstPitch, unsigned int __pyx_v_ui, size_t __pyx_v_Width, size_t __pyx_v_Height, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemsetD2D32Async", __pyx_f[0], 361, 1, __PYX_ERR(0, 361, __pyx_L1_error));

  /* "cuda/ccuda.pyx":362
 * 
 * cdef CUresult cuMemsetD2D32Async(CUdeviceptr dstDevice, size_t dstPitch, unsigned int ui, size_t Width, size_t Height, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemsetD2D32Async(dstDevice, dstPitch, ui, Width, Height, hStream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuArrayCreate(CUarray* pHandle, const CUDA_ARRAY_DESCRIPTOR* pAllocateArray) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD2D32Async(__pyx_v_dstDevice, __pyx_v_dstPitch, __pyx_v_ui, __pyx_v_Width, __pyx_v_Height, __pyx_v_hStream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 362, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":361
 *     return ccuda._cuMemsetD2D16Async(dstDevice, dstPitch, us, Width, Height, hStream)
 * 
 * cdef CUresult cuMemsetD2D32Async(CUdeviceptr dstDevice, size_t dstPitch, unsigned int ui, size_t Width, size_t Height, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemsetD2D32Async(dstDevice, dstPitch, ui, Width, Height, hStream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemsetD2D32Async", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":364
 *     return ccuda._cuMemsetD2D32Async(dstDevice, dstPitch, ui, Width, Height, hStream)
 * 
 * cdef CUresult cuArrayCreate(CUarray* pHandle, const CUDA_ARRAY_DESCRIPTOR* pAllocateArray) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuArrayCreate_v2(pHandle, pAllocateArray)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuArrayCreate(__pyx_t_4cuda_5ccuda_CUarray *__pyx_v_pHandle, __pyx_t_4cuda_5ccuda_CUDA_ARRAY_DESCRIPTOR const *__pyx_v_pAllocateArray) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuArrayCreate", __pyx_f[0], 364, 1, __PYX_ERR(0, 364, __pyx_L1_error));

  /* "cuda/ccuda.pyx":365
 * 
 * cdef CUresult cuArrayCreate(CUarray* pHandle, const CUDA_ARRAY_DESCRIPTOR* pAllocateArray) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuArrayCreate_v2(pHandle, pAllocateArray)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuArrayGetDescriptor(CUDA_ARRAY_DESCRIPTOR* pArrayDescriptor, CUarray hArray) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuArrayCreate_v2(__pyx_v_pHandle, __pyx_v_pAllocateArray); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 365, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":364
 *     return ccuda._cuMemsetD2D32Async(dstDevice, dstPitch, ui, Width, Height, hStream)
 * 
 * cdef CUresult cuArrayCreate(CUarray* pHandle, const CUDA_ARRAY_DESCRIPTOR* pAllocateArray) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuArrayCreate_v2(pHandle, pAllocateArray)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuArrayCreate", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":367
 *     return ccuda._cuArrayCreate_v2(pHandle, pAllocateArray)
 * 
 * cdef CUresult cuArrayGetDescriptor(CUDA_ARRAY_DESCRIPTOR* pArrayDescriptor, CUarray hArray) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuArrayGetDescriptor_v2(pArrayDescriptor, hArray)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuArrayGetDescriptor(__pyx_t_4cuda_5ccuda_CUDA_ARRAY_DESCRIPTOR *__pyx_v_pArrayDescriptor, __pyx_t_4cuda_5ccuda_CUarray __pyx_v_hArray) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuArrayGetDescriptor", __pyx_f[0], 367, 1, __PYX_ERR(0, 367, __pyx_L1_error));

  /* "cuda/ccuda.pyx":368
 * 
 * cdef CUresult cuArrayGetDescriptor(CUDA_ARRAY_DESCRIPTOR* pArrayDescriptor, CUarray hArray) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuArrayGetDescriptor_v2(pArrayDescriptor, hArray)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuArrayGetSparseProperties(CUDA_ARRAY_SPARSE_PROPERTIES* sparseProperties, CUarray array) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuArrayGetDescriptor_v2(__pyx_v_pArrayDescriptor, __pyx_v_hArray); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 368, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":367
 *     return ccuda._cuArrayCreate_v2(pHandle, pAllocateArray)
 * 
 * cdef CUresult cuArrayGetDescriptor(CUDA_ARRAY_DESCRIPTOR* pArrayDescriptor, CUarray hArray) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuArrayGetDescriptor_v2(pArrayDescriptor, hArray)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuArrayGetDescriptor", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":370
 *     return ccuda._cuArrayGetDescriptor_v2(pArrayDescriptor, hArray)
 * 
 * cdef CUresult cuArrayGetSparseProperties(CUDA_ARRAY_SPARSE_PROPERTIES* sparseProperties, CUarray array) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuArrayGetSparseProperties(sparseProperties, array)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuArrayGetSparseProperties(__pyx_t_4cuda_5ccuda_CUDA_ARRAY_SPARSE_PROPERTIES *__pyx_v_sparseProperties, __pyx_t_4cuda_5ccuda_CUarray __pyx_v_array) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuArrayGetSparseProperties", __pyx_f[0], 370, 1, __PYX_ERR(0, 370, __pyx_L1_error));

  /* "cuda/ccuda.pyx":371
 * 
 * cdef CUresult cuArrayGetSparseProperties(CUDA_ARRAY_SPARSE_PROPERTIES* sparseProperties, CUarray array) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuArrayGetSparseProperties(sparseProperties, array)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMipmappedArrayGetSparseProperties(CUDA_ARRAY_SPARSE_PROPERTIES* sparseProperties, CUmipmappedArray mipmap) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuArrayGetSparseProperties(__pyx_v_sparseProperties, __pyx_v_array); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 371, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":370
 *     return ccuda._cuArrayGetDescriptor_v2(pArrayDescriptor, hArray)
 * 
 * cdef CUresult cuArrayGetSparseProperties(CUDA_ARRAY_SPARSE_PROPERTIES* sparseProperties, CUarray array) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuArrayGetSparseProperties(sparseProperties, array)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuArrayGetSparseProperties", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":373
 *     return ccuda._cuArrayGetSparseProperties(sparseProperties, array)
 * 
 * cdef CUresult cuMipmappedArrayGetSparseProperties(CUDA_ARRAY_SPARSE_PROPERTIES* sparseProperties, CUmipmappedArray mipmap) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMipmappedArrayGetSparseProperties(sparseProperties, mipmap)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMipmappedArrayGetSparseProperties(__pyx_t_4cuda_5ccuda_CUDA_ARRAY_SPARSE_PROPERTIES *__pyx_v_sparseProperties, __pyx_t_4cuda_5ccuda_CUmipmappedArray __pyx_v_mipmap) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMipmappedArrayGetSparseProperties", __pyx_f[0], 373, 1, __PYX_ERR(0, 373, __pyx_L1_error));

  /* "cuda/ccuda.pyx":374
 * 
 * cdef CUresult cuMipmappedArrayGetSparseProperties(CUDA_ARRAY_SPARSE_PROPERTIES* sparseProperties, CUmipmappedArray mipmap) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMipmappedArrayGetSparseProperties(sparseProperties, mipmap)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuArrayGetPlane(CUarray* pPlaneArray, CUarray hArray, unsigned int planeIdx) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMipmappedArrayGetSparseProperties(__pyx_v_sparseProperties, __pyx_v_mipmap); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 374, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":373
 *     return ccuda._cuArrayGetSparseProperties(sparseProperties, array)
 * 
 * cdef CUresult cuMipmappedArrayGetSparseProperties(CUDA_ARRAY_SPARSE_PROPERTIES* sparseProperties, CUmipmappedArray mipmap) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMipmappedArrayGetSparseProperties(sparseProperties, mipmap)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMipmappedArrayGetSparseProperties", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":376
 *     return ccuda._cuMipmappedArrayGetSparseProperties(sparseProperties, mipmap)
 * 
 * cdef CUresult cuArrayGetPlane(CUarray* pPlaneArray, CUarray hArray, unsigned int planeIdx) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuArrayGetPlane(pPlaneArray, hArray, planeIdx)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuArrayGetPlane(__pyx_t_4cuda_5ccuda_CUarray *__pyx_v_pPlaneArray, __pyx_t_4cuda_5ccuda_CUarray __pyx_v_hArray, unsigned int __pyx_v_planeIdx) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuArrayGetPlane", __pyx_f[0], 376, 1, __PYX_ERR(0, 376, __pyx_L1_error));

  /* "cuda/ccuda.pyx":377
 * 
 * cdef CUresult cuArrayGetPlane(CUarray* pPlaneArray, CUarray hArray, unsigned int planeIdx) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuArrayGetPlane(pPlaneArray, hArray, planeIdx)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuArrayDestroy(CUarray hArray) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuArrayGetPlane(__pyx_v_pPlaneArray, __pyx_v_hArray, __pyx_v_planeIdx); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 377, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":376
 *     return ccuda._cuMipmappedArrayGetSparseProperties(sparseProperties, mipmap)
 * 
 * cdef CUresult cuArrayGetPlane(CUarray* pPlaneArray, CUarray hArray, unsigned int planeIdx) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuArrayGetPlane(pPlaneArray, hArray, planeIdx)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuArrayGetPlane", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":379
 *     return ccuda._cuArrayGetPlane(pPlaneArray, hArray, planeIdx)
 * 
 * cdef CUresult cuArrayDestroy(CUarray hArray) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuArrayDestroy(hArray)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuArrayDestroy(__pyx_t_4cuda_5ccuda_CUarray __pyx_v_hArray) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuArrayDestroy", __pyx_f[0], 379, 1, __PYX_ERR(0, 379, __pyx_L1_error));

  /* "cuda/ccuda.pyx":380
 * 
 * cdef CUresult cuArrayDestroy(CUarray hArray) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuArrayDestroy(hArray)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuArray3DCreate(CUarray* pHandle, const CUDA_ARRAY3D_DESCRIPTOR* pAllocateArray) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuArrayDestroy(__pyx_v_hArray); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 380, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":379
 *     return ccuda._cuArrayGetPlane(pPlaneArray, hArray, planeIdx)
 * 
 * cdef CUresult cuArrayDestroy(CUarray hArray) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuArrayDestroy(hArray)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuArrayDestroy", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":382
 *     return ccuda._cuArrayDestroy(hArray)
 * 
 * cdef CUresult cuArray3DCreate(CUarray* pHandle, const CUDA_ARRAY3D_DESCRIPTOR* pAllocateArray) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuArray3DCreate_v2(pHandle, pAllocateArray)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuArray3DCreate(__pyx_t_4cuda_5ccuda_CUarray *__pyx_v_pHandle, __pyx_t_4cuda_5ccuda_CUDA_ARRAY3D_DESCRIPTOR const *__pyx_v_pAllocateArray) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuArray3DCreate", __pyx_f[0], 382, 1, __PYX_ERR(0, 382, __pyx_L1_error));

  /* "cuda/ccuda.pyx":383
 * 
 * cdef CUresult cuArray3DCreate(CUarray* pHandle, const CUDA_ARRAY3D_DESCRIPTOR* pAllocateArray) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuArray3DCreate_v2(pHandle, pAllocateArray)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuArray3DGetDescriptor(CUDA_ARRAY3D_DESCRIPTOR* pArrayDescriptor, CUarray hArray) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuArray3DCreate_v2(__pyx_v_pHandle, __pyx_v_pAllocateArray); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 383, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":382
 *     return ccuda._cuArrayDestroy(hArray)
 * 
 * cdef CUresult cuArray3DCreate(CUarray* pHandle, const CUDA_ARRAY3D_DESCRIPTOR* pAllocateArray) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuArray3DCreate_v2(pHandle, pAllocateArray)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuArray3DCreate", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":385
 *     return ccuda._cuArray3DCreate_v2(pHandle, pAllocateArray)
 * 
 * cdef CUresult cuArray3DGetDescriptor(CUDA_ARRAY3D_DESCRIPTOR* pArrayDescriptor, CUarray hArray) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuArray3DGetDescriptor_v2(pArrayDescriptor, hArray)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuArray3DGetDescriptor(__pyx_t_4cuda_5ccuda_CUDA_ARRAY3D_DESCRIPTOR *__pyx_v_pArrayDescriptor, __pyx_t_4cuda_5ccuda_CUarray __pyx_v_hArray) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuArray3DGetDescriptor", __pyx_f[0], 385, 1, __PYX_ERR(0, 385, __pyx_L1_error));

  /* "cuda/ccuda.pyx":386
 * 
 * cdef CUresult cuArray3DGetDescriptor(CUDA_ARRAY3D_DESCRIPTOR* pArrayDescriptor, CUarray hArray) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuArray3DGetDescriptor_v2(pArrayDescriptor, hArray)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMipmappedArrayCreate(CUmipmappedArray* pHandle, const CUDA_ARRAY3D_DESCRIPTOR* pMipmappedArrayDesc, unsigned int numMipmapLevels) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuArray3DGetDescriptor_v2(__pyx_v_pArrayDescriptor, __pyx_v_hArray); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 386, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":385
 *     return ccuda._cuArray3DCreate_v2(pHandle, pAllocateArray)
 * 
 * cdef CUresult cuArray3DGetDescriptor(CUDA_ARRAY3D_DESCRIPTOR* pArrayDescriptor, CUarray hArray) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuArray3DGetDescriptor_v2(pArrayDescriptor, hArray)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuArray3DGetDescriptor", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":388
 *     return ccuda._cuArray3DGetDescriptor_v2(pArrayDescriptor, hArray)
 * 
 * cdef CUresult cuMipmappedArrayCreate(CUmipmappedArray* pHandle, const CUDA_ARRAY3D_DESCRIPTOR* pMipmappedArrayDesc, unsigned int numMipmapLevels) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMipmappedArrayCreate(pHandle, pMipmappedArrayDesc, numMipmapLevels)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMipmappedArrayCreate(__pyx_t_4cuda_5ccuda_CUmipmappedArray *__pyx_v_pHandle, __pyx_t_4cuda_5ccuda_CUDA_ARRAY3D_DESCRIPTOR const *__pyx_v_pMipmappedArrayDesc, unsigned int __pyx_v_numMipmapLevels) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMipmappedArrayCreate", __pyx_f[0], 388, 1, __PYX_ERR(0, 388, __pyx_L1_error));

  /* "cuda/ccuda.pyx":389
 * 
 * cdef CUresult cuMipmappedArrayCreate(CUmipmappedArray* pHandle, const CUDA_ARRAY3D_DESCRIPTOR* pMipmappedArrayDesc, unsigned int numMipmapLevels) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMipmappedArrayCreate(pHandle, pMipmappedArrayDesc, numMipmapLevels)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMipmappedArrayGetLevel(CUarray* pLevelArray, CUmipmappedArray hMipmappedArray, unsigned int level) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMipmappedArrayCreate(__pyx_v_pHandle, __pyx_v_pMipmappedArrayDesc, __pyx_v_numMipmapLevels); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 389, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":388
 *     return ccuda._cuArray3DGetDescriptor_v2(pArrayDescriptor, hArray)
 * 
 * cdef CUresult cuMipmappedArrayCreate(CUmipmappedArray* pHandle, const CUDA_ARRAY3D_DESCRIPTOR* pMipmappedArrayDesc, unsigned int numMipmapLevels) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMipmappedArrayCreate(pHandle, pMipmappedArrayDesc, numMipmapLevels)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMipmappedArrayCreate", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":391
 *     return ccuda._cuMipmappedArrayCreate(pHandle, pMipmappedArrayDesc, numMipmapLevels)
 * 
 * cdef CUresult cuMipmappedArrayGetLevel(CUarray* pLevelArray, CUmipmappedArray hMipmappedArray, unsigned int level) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMipmappedArrayGetLevel(pLevelArray, hMipmappedArray, level)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMipmappedArrayGetLevel(__pyx_t_4cuda_5ccuda_CUarray *__pyx_v_pLevelArray, __pyx_t_4cuda_5ccuda_CUmipmappedArray __pyx_v_hMipmappedArray, unsigned int __pyx_v_level) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMipmappedArrayGetLevel", __pyx_f[0], 391, 1, __PYX_ERR(0, 391, __pyx_L1_error));

  /* "cuda/ccuda.pyx":392
 * 
 * cdef CUresult cuMipmappedArrayGetLevel(CUarray* pLevelArray, CUmipmappedArray hMipmappedArray, unsigned int level) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMipmappedArrayGetLevel(pLevelArray, hMipmappedArray, level)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMipmappedArrayDestroy(CUmipmappedArray hMipmappedArray) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMipmappedArrayGetLevel(__pyx_v_pLevelArray, __pyx_v_hMipmappedArray, __pyx_v_level); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 392, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":391
 *     return ccuda._cuMipmappedArrayCreate(pHandle, pMipmappedArrayDesc, numMipmapLevels)
 * 
 * cdef CUresult cuMipmappedArrayGetLevel(CUarray* pLevelArray, CUmipmappedArray hMipmappedArray, unsigned int level) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMipmappedArrayGetLevel(pLevelArray, hMipmappedArray, level)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMipmappedArrayGetLevel", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":394
 *     return ccuda._cuMipmappedArrayGetLevel(pLevelArray, hMipmappedArray, level)
 * 
 * cdef CUresult cuMipmappedArrayDestroy(CUmipmappedArray hMipmappedArray) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMipmappedArrayDestroy(hMipmappedArray)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMipmappedArrayDestroy(__pyx_t_4cuda_5ccuda_CUmipmappedArray __pyx_v_hMipmappedArray) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMipmappedArrayDestroy", __pyx_f[0], 394, 1, __PYX_ERR(0, 394, __pyx_L1_error));

  /* "cuda/ccuda.pyx":395
 * 
 * cdef CUresult cuMipmappedArrayDestroy(CUmipmappedArray hMipmappedArray) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMipmappedArrayDestroy(hMipmappedArray)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemAddressReserve(CUdeviceptr* ptr, size_t size, size_t alignment, CUdeviceptr addr, unsigned long long flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMipmappedArrayDestroy(__pyx_v_hMipmappedArray); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 395, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":394
 *     return ccuda._cuMipmappedArrayGetLevel(pLevelArray, hMipmappedArray, level)
 * 
 * cdef CUresult cuMipmappedArrayDestroy(CUmipmappedArray hMipmappedArray) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMipmappedArrayDestroy(hMipmappedArray)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMipmappedArrayDestroy", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":397
 *     return ccuda._cuMipmappedArrayDestroy(hMipmappedArray)
 * 
 * cdef CUresult cuMemAddressReserve(CUdeviceptr* ptr, size_t size, size_t alignment, CUdeviceptr addr, unsigned long long flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemAddressReserve(ptr, size, alignment, addr, flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemAddressReserve(__pyx_t_4cuda_5ccuda_CUdeviceptr *__pyx_v_ptr, size_t __pyx_v_size, size_t __pyx_v_alignment, __pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_addr, unsigned PY_LONG_LONG __pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemAddressReserve", __pyx_f[0], 397, 1, __PYX_ERR(0, 397, __pyx_L1_error));

  /* "cuda/ccuda.pyx":398
 * 
 * cdef CUresult cuMemAddressReserve(CUdeviceptr* ptr, size_t size, size_t alignment, CUdeviceptr addr, unsigned long long flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemAddressReserve(ptr, size, alignment, addr, flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemAddressFree(CUdeviceptr ptr, size_t size) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemAddressReserve(__pyx_v_ptr, __pyx_v_size, __pyx_v_alignment, __pyx_v_addr, __pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 398, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":397
 *     return ccuda._cuMipmappedArrayDestroy(hMipmappedArray)
 * 
 * cdef CUresult cuMemAddressReserve(CUdeviceptr* ptr, size_t size, size_t alignment, CUdeviceptr addr, unsigned long long flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemAddressReserve(ptr, size, alignment, addr, flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemAddressReserve", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":400
 *     return ccuda._cuMemAddressReserve(ptr, size, alignment, addr, flags)
 * 
 * cdef CUresult cuMemAddressFree(CUdeviceptr ptr, size_t size) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemAddressFree(ptr, size)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemAddressFree(__pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_ptr, size_t __pyx_v_size) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemAddressFree", __pyx_f[0], 400, 1, __PYX_ERR(0, 400, __pyx_L1_error));

  /* "cuda/ccuda.pyx":401
 * 
 * cdef CUresult cuMemAddressFree(CUdeviceptr ptr, size_t size) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemAddressFree(ptr, size)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemCreate(CUmemGenericAllocationHandle* handle, size_t size, const CUmemAllocationProp* prop, unsigned long long flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemAddressFree(__pyx_v_ptr, __pyx_v_size); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 401, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":400
 *     return ccuda._cuMemAddressReserve(ptr, size, alignment, addr, flags)
 * 
 * cdef CUresult cuMemAddressFree(CUdeviceptr ptr, size_t size) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemAddressFree(ptr, size)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemAddressFree", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":403
 *     return ccuda._cuMemAddressFree(ptr, size)
 * 
 * cdef CUresult cuMemCreate(CUmemGenericAllocationHandle* handle, size_t size, const CUmemAllocationProp* prop, unsigned long long flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemCreate(handle, size, prop, flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemCreate(__pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle *__pyx_v_handle, size_t __pyx_v_size, __pyx_t_4cuda_5ccuda_CUmemAllocationProp const *__pyx_v_prop, unsigned PY_LONG_LONG __pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemCreate", __pyx_f[0], 403, 1, __PYX_ERR(0, 403, __pyx_L1_error));

  /* "cuda/ccuda.pyx":404
 * 
 * cdef CUresult cuMemCreate(CUmemGenericAllocationHandle* handle, size_t size, const CUmemAllocationProp* prop, unsigned long long flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemCreate(handle, size, prop, flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemRelease(CUmemGenericAllocationHandle handle) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemCreate(__pyx_v_handle, __pyx_v_size, __pyx_v_prop, __pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 404, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":403
 *     return ccuda._cuMemAddressFree(ptr, size)
 * 
 * cdef CUresult cuMemCreate(CUmemGenericAllocationHandle* handle, size_t size, const CUmemAllocationProp* prop, unsigned long long flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemCreate(handle, size, prop, flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemCreate", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":406
 *     return ccuda._cuMemCreate(handle, size, prop, flags)
 * 
 * cdef CUresult cuMemRelease(CUmemGenericAllocationHandle handle) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemRelease(handle)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemRelease(__pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle __pyx_v_handle) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemRelease", __pyx_f[0], 406, 1, __PYX_ERR(0, 406, __pyx_L1_error));

  /* "cuda/ccuda.pyx":407
 * 
 * cdef CUresult cuMemRelease(CUmemGenericAllocationHandle handle) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemRelease(handle)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemMap(CUdeviceptr ptr, size_t size, size_t offset, CUmemGenericAllocationHandle handle, unsigned long long flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemRelease(__pyx_v_handle); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 407, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":406
 *     return ccuda._cuMemCreate(handle, size, prop, flags)
 * 
 * cdef CUresult cuMemRelease(CUmemGenericAllocationHandle handle) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemRelease(handle)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemRelease", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":409
 *     return ccuda._cuMemRelease(handle)
 * 
 * cdef CUresult cuMemMap(CUdeviceptr ptr, size_t size, size_t offset, CUmemGenericAllocationHandle handle, unsigned long long flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemMap(ptr, size, offset, handle, flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemMap(__pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_ptr, size_t __pyx_v_size, size_t __pyx_v_offset, __pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle __pyx_v_handle, unsigned PY_LONG_LONG __pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemMap", __pyx_f[0], 409, 1, __PYX_ERR(0, 409, __pyx_L1_error));

  /* "cuda/ccuda.pyx":410
 * 
 * cdef CUresult cuMemMap(CUdeviceptr ptr, size_t size, size_t offset, CUmemGenericAllocationHandle handle, unsigned long long flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemMap(ptr, size, offset, handle, flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemMapArrayAsync(CUarrayMapInfo* mapInfoList, unsigned int count, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemMap(__pyx_v_ptr, __pyx_v_size, __pyx_v_offset, __pyx_v_handle, __pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 410, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":409
 *     return ccuda._cuMemRelease(handle)
 * 
 * cdef CUresult cuMemMap(CUdeviceptr ptr, size_t size, size_t offset, CUmemGenericAllocationHandle handle, unsigned long long flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemMap(ptr, size, offset, handle, flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemMap", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":412
 *     return ccuda._cuMemMap(ptr, size, offset, handle, flags)
 * 
 * cdef CUresult cuMemMapArrayAsync(CUarrayMapInfo* mapInfoList, unsigned int count, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemMapArrayAsync(mapInfoList, count, hStream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemMapArrayAsync(__pyx_t_4cuda_5ccuda_CUarrayMapInfo *__pyx_v_mapInfoList, unsigned int __pyx_v_count, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemMapArrayAsync", __pyx_f[0], 412, 1, __PYX_ERR(0, 412, __pyx_L1_error));

  /* "cuda/ccuda.pyx":413
 * 
 * cdef CUresult cuMemMapArrayAsync(CUarrayMapInfo* mapInfoList, unsigned int count, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemMapArrayAsync(mapInfoList, count, hStream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemUnmap(CUdeviceptr ptr, size_t size) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemMapArrayAsync(__pyx_v_mapInfoList, __pyx_v_count, __pyx_v_hStream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 413, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":412
 *     return ccuda._cuMemMap(ptr, size, offset, handle, flags)
 * 
 * cdef CUresult cuMemMapArrayAsync(CUarrayMapInfo* mapInfoList, unsigned int count, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemMapArrayAsync(mapInfoList, count, hStream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemMapArrayAsync", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":415
 *     return ccuda._cuMemMapArrayAsync(mapInfoList, count, hStream)
 * 
 * cdef CUresult cuMemUnmap(CUdeviceptr ptr, size_t size) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemUnmap(ptr, size)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemUnmap(__pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_ptr, size_t __pyx_v_size) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemUnmap", __pyx_f[0], 415, 1, __PYX_ERR(0, 415, __pyx_L1_error));

  /* "cuda/ccuda.pyx":416
 * 
 * cdef CUresult cuMemUnmap(CUdeviceptr ptr, size_t size) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemUnmap(ptr, size)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemSetAccess(CUdeviceptr ptr, size_t size, const CUmemAccessDesc* desc, size_t count) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemUnmap(__pyx_v_ptr, __pyx_v_size); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 416, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":415
 *     return ccuda._cuMemMapArrayAsync(mapInfoList, count, hStream)
 * 
 * cdef CUresult cuMemUnmap(CUdeviceptr ptr, size_t size) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemUnmap(ptr, size)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemUnmap", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":418
 *     return ccuda._cuMemUnmap(ptr, size)
 * 
 * cdef CUresult cuMemSetAccess(CUdeviceptr ptr, size_t size, const CUmemAccessDesc* desc, size_t count) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemSetAccess(ptr, size, desc, count)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemSetAccess(__pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_ptr, size_t __pyx_v_size, __pyx_t_4cuda_5ccuda_CUmemAccessDesc const *__pyx_v_desc, size_t __pyx_v_count) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemSetAccess", __pyx_f[0], 418, 1, __PYX_ERR(0, 418, __pyx_L1_error));

  /* "cuda/ccuda.pyx":419
 * 
 * cdef CUresult cuMemSetAccess(CUdeviceptr ptr, size_t size, const CUmemAccessDesc* desc, size_t count) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemSetAccess(ptr, size, desc, count)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemGetAccess(unsigned long long* flags, const CUmemLocation* location, CUdeviceptr ptr) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemSetAccess(__pyx_v_ptr, __pyx_v_size, __pyx_v_desc, __pyx_v_count); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 419, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":418
 *     return ccuda._cuMemUnmap(ptr, size)
 * 
 * cdef CUresult cuMemSetAccess(CUdeviceptr ptr, size_t size, const CUmemAccessDesc* desc, size_t count) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemSetAccess(ptr, size, desc, count)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemSetAccess", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":421
 *     return ccuda._cuMemSetAccess(ptr, size, desc, count)
 * 
 * cdef CUresult cuMemGetAccess(unsigned long long* flags, const CUmemLocation* location, CUdeviceptr ptr) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemGetAccess(flags, location, ptr)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemGetAccess(unsigned PY_LONG_LONG *__pyx_v_flags, __pyx_t_4cuda_5ccuda_CUmemLocation const *__pyx_v_location, __pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_ptr) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemGetAccess", __pyx_f[0], 421, 1, __PYX_ERR(0, 421, __pyx_L1_error));

  /* "cuda/ccuda.pyx":422
 * 
 * cdef CUresult cuMemGetAccess(unsigned long long* flags, const CUmemLocation* location, CUdeviceptr ptr) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemGetAccess(flags, location, ptr)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemExportToShareableHandle(void* shareableHandle, CUmemGenericAllocationHandle handle, CUmemAllocationHandleType handleType, unsigned long long flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemGetAccess(__pyx_v_flags, __pyx_v_location, __pyx_v_ptr); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 422, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":421
 *     return ccuda._cuMemSetAccess(ptr, size, desc, count)
 * 
 * cdef CUresult cuMemGetAccess(unsigned long long* flags, const CUmemLocation* location, CUdeviceptr ptr) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemGetAccess(flags, location, ptr)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemGetAccess", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":424
 *     return ccuda._cuMemGetAccess(flags, location, ptr)
 * 
 * cdef CUresult cuMemExportToShareableHandle(void* shareableHandle, CUmemGenericAllocationHandle handle, CUmemAllocationHandleType handleType, unsigned long long flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemExportToShareableHandle(shareableHandle, handle, handleType, flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemExportToShareableHandle(void *__pyx_v_shareableHandle, __pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle __pyx_v_handle, __pyx_t_4cuda_5ccuda_CUmemAllocationHandleType __pyx_v_handleType, unsigned PY_LONG_LONG __pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemExportToShareableHandle", __pyx_f[0], 424, 1, __PYX_ERR(0, 424, __pyx_L1_error));

  /* "cuda/ccuda.pyx":425
 * 
 * cdef CUresult cuMemExportToShareableHandle(void* shareableHandle, CUmemGenericAllocationHandle handle, CUmemAllocationHandleType handleType, unsigned long long flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemExportToShareableHandle(shareableHandle, handle, handleType, flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemImportFromShareableHandle(CUmemGenericAllocationHandle* handle, void* osHandle, CUmemAllocationHandleType shHandleType) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemExportToShareableHandle(__pyx_v_shareableHandle, __pyx_v_handle, __pyx_v_handleType, __pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 425, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":424
 *     return ccuda._cuMemGetAccess(flags, location, ptr)
 * 
 * cdef CUresult cuMemExportToShareableHandle(void* shareableHandle, CUmemGenericAllocationHandle handle, CUmemAllocationHandleType handleType, unsigned long long flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemExportToShareableHandle(shareableHandle, handle, handleType, flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemExportToShareableHandle", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":427
 *     return ccuda._cuMemExportToShareableHandle(shareableHandle, handle, handleType, flags)
 * 
 * cdef CUresult cuMemImportFromShareableHandle(CUmemGenericAllocationHandle* handle, void* osHandle, CUmemAllocationHandleType shHandleType) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemImportFromShareableHandle(handle, osHandle, shHandleType)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemImportFromShareableHandle(__pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle *__pyx_v_handle, void *__pyx_v_osHandle, __pyx_t_4cuda_5ccuda_CUmemAllocationHandleType __pyx_v_shHandleType) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemImportFromShareableHandle", __pyx_f[0], 427, 1, __PYX_ERR(0, 427, __pyx_L1_error));

  /* "cuda/ccuda.pyx":428
 * 
 * cdef CUresult cuMemImportFromShareableHandle(CUmemGenericAllocationHandle* handle, void* osHandle, CUmemAllocationHandleType shHandleType) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemImportFromShareableHandle(handle, osHandle, shHandleType)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemGetAllocationGranularity(size_t* granularity, const CUmemAllocationProp* prop, CUmemAllocationGranularity_flags option) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemImportFromShareableHandle(__pyx_v_handle, __pyx_v_osHandle, __pyx_v_shHandleType); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 428, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":427
 *     return ccuda._cuMemExportToShareableHandle(shareableHandle, handle, handleType, flags)
 * 
 * cdef CUresult cuMemImportFromShareableHandle(CUmemGenericAllocationHandle* handle, void* osHandle, CUmemAllocationHandleType shHandleType) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemImportFromShareableHandle(handle, osHandle, shHandleType)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemImportFromShareableHandle", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":430
 *     return ccuda._cuMemImportFromShareableHandle(handle, osHandle, shHandleType)
 * 
 * cdef CUresult cuMemGetAllocationGranularity(size_t* granularity, const CUmemAllocationProp* prop, CUmemAllocationGranularity_flags option) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemGetAllocationGranularity(granularity, prop, option)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemGetAllocationGranularity(size_t *__pyx_v_granularity, __pyx_t_4cuda_5ccuda_CUmemAllocationProp const *__pyx_v_prop, __pyx_t_4cuda_5ccuda_CUmemAllocationGranularity_flags __pyx_v_option) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemGetAllocationGranularity", __pyx_f[0], 430, 1, __PYX_ERR(0, 430, __pyx_L1_error));

  /* "cuda/ccuda.pyx":431
 * 
 * cdef CUresult cuMemGetAllocationGranularity(size_t* granularity, const CUmemAllocationProp* prop, CUmemAllocationGranularity_flags option) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemGetAllocationGranularity(granularity, prop, option)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemGetAllocationPropertiesFromHandle(CUmemAllocationProp* prop, CUmemGenericAllocationHandle handle) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemGetAllocationGranularity(__pyx_v_granularity, __pyx_v_prop, __pyx_v_option); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 431, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":430
 *     return ccuda._cuMemImportFromShareableHandle(handle, osHandle, shHandleType)
 * 
 * cdef CUresult cuMemGetAllocationGranularity(size_t* granularity, const CUmemAllocationProp* prop, CUmemAllocationGranularity_flags option) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemGetAllocationGranularity(granularity, prop, option)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemGetAllocationGranularity", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":433
 *     return ccuda._cuMemGetAllocationGranularity(granularity, prop, option)
 * 
 * cdef CUresult cuMemGetAllocationPropertiesFromHandle(CUmemAllocationProp* prop, CUmemGenericAllocationHandle handle) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemGetAllocationPropertiesFromHandle(prop, handle)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemGetAllocationPropertiesFromHandle(__pyx_t_4cuda_5ccuda_CUmemAllocationProp *__pyx_v_prop, __pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle __pyx_v_handle) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemGetAllocationPropertiesFromHandle", __pyx_f[0], 433, 1, __PYX_ERR(0, 433, __pyx_L1_error));

  /* "cuda/ccuda.pyx":434
 * 
 * cdef CUresult cuMemGetAllocationPropertiesFromHandle(CUmemAllocationProp* prop, CUmemGenericAllocationHandle handle) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemGetAllocationPropertiesFromHandle(prop, handle)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemRetainAllocationHandle(CUmemGenericAllocationHandle* handle, void* addr) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemGetAllocationPropertiesFromHandle(__pyx_v_prop, __pyx_v_handle); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 434, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":433
 *     return ccuda._cuMemGetAllocationGranularity(granularity, prop, option)
 * 
 * cdef CUresult cuMemGetAllocationPropertiesFromHandle(CUmemAllocationProp* prop, CUmemGenericAllocationHandle handle) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemGetAllocationPropertiesFromHandle(prop, handle)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemGetAllocationPropertiesFromHandle", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":436
 *     return ccuda._cuMemGetAllocationPropertiesFromHandle(prop, handle)
 * 
 * cdef CUresult cuMemRetainAllocationHandle(CUmemGenericAllocationHandle* handle, void* addr) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemRetainAllocationHandle(handle, addr)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemRetainAllocationHandle(__pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle *__pyx_v_handle, void *__pyx_v_addr) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemRetainAllocationHandle", __pyx_f[0], 436, 1, __PYX_ERR(0, 436, __pyx_L1_error));

  /* "cuda/ccuda.pyx":437
 * 
 * cdef CUresult cuMemRetainAllocationHandle(CUmemGenericAllocationHandle* handle, void* addr) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemRetainAllocationHandle(handle, addr)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemFreeAsync(CUdeviceptr dptr, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemRetainAllocationHandle(__pyx_v_handle, __pyx_v_addr); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 437, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":436
 *     return ccuda._cuMemGetAllocationPropertiesFromHandle(prop, handle)
 * 
 * cdef CUresult cuMemRetainAllocationHandle(CUmemGenericAllocationHandle* handle, void* addr) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemRetainAllocationHandle(handle, addr)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemRetainAllocationHandle", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":439
 *     return ccuda._cuMemRetainAllocationHandle(handle, addr)
 * 
 * cdef CUresult cuMemFreeAsync(CUdeviceptr dptr, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemFreeAsync(dptr, hStream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemFreeAsync(__pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_dptr, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemFreeAsync", __pyx_f[0], 439, 1, __PYX_ERR(0, 439, __pyx_L1_error));

  /* "cuda/ccuda.pyx":440
 * 
 * cdef CUresult cuMemFreeAsync(CUdeviceptr dptr, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemFreeAsync(dptr, hStream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemAllocAsync(CUdeviceptr* dptr, size_t bytesize, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemFreeAsync(__pyx_v_dptr, __pyx_v_hStream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 440, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":439
 *     return ccuda._cuMemRetainAllocationHandle(handle, addr)
 * 
 * cdef CUresult cuMemFreeAsync(CUdeviceptr dptr, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemFreeAsync(dptr, hStream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemFreeAsync", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":442
 *     return ccuda._cuMemFreeAsync(dptr, hStream)
 * 
 * cdef CUresult cuMemAllocAsync(CUdeviceptr* dptr, size_t bytesize, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemAllocAsync(dptr, bytesize, hStream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemAllocAsync(__pyx_t_4cuda_5ccuda_CUdeviceptr *__pyx_v_dptr, size_t __pyx_v_bytesize, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemAllocAsync", __pyx_f[0], 442, 1, __PYX_ERR(0, 442, __pyx_L1_error));

  /* "cuda/ccuda.pyx":443
 * 
 * cdef CUresult cuMemAllocAsync(CUdeviceptr* dptr, size_t bytesize, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemAllocAsync(dptr, bytesize, hStream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemPoolTrimTo(CUmemoryPool pool, size_t minBytesToKeep) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemAllocAsync(__pyx_v_dptr, __pyx_v_bytesize, __pyx_v_hStream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 443, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":442
 *     return ccuda._cuMemFreeAsync(dptr, hStream)
 * 
 * cdef CUresult cuMemAllocAsync(CUdeviceptr* dptr, size_t bytesize, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemAllocAsync(dptr, bytesize, hStream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemAllocAsync", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":445
 *     return ccuda._cuMemAllocAsync(dptr, bytesize, hStream)
 * 
 * cdef CUresult cuMemPoolTrimTo(CUmemoryPool pool, size_t minBytesToKeep) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemPoolTrimTo(pool, minBytesToKeep)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemPoolTrimTo(__pyx_t_4cuda_5ccuda_CUmemoryPool __pyx_v_pool, size_t __pyx_v_minBytesToKeep) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemPoolTrimTo", __pyx_f[0], 445, 1, __PYX_ERR(0, 445, __pyx_L1_error));

  /* "cuda/ccuda.pyx":446
 * 
 * cdef CUresult cuMemPoolTrimTo(CUmemoryPool pool, size_t minBytesToKeep) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemPoolTrimTo(pool, minBytesToKeep)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemPoolSetAttribute(CUmemoryPool pool, CUmemPool_attribute attr, void* value) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolTrimTo(__pyx_v_pool, __pyx_v_minBytesToKeep); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 446, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":445
 *     return ccuda._cuMemAllocAsync(dptr, bytesize, hStream)
 * 
 * cdef CUresult cuMemPoolTrimTo(CUmemoryPool pool, size_t minBytesToKeep) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemPoolTrimTo(pool, minBytesToKeep)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemPoolTrimTo", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":448
 *     return ccuda._cuMemPoolTrimTo(pool, minBytesToKeep)
 * 
 * cdef CUresult cuMemPoolSetAttribute(CUmemoryPool pool, CUmemPool_attribute attr, void* value) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemPoolSetAttribute(pool, attr, value)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemPoolSetAttribute(__pyx_t_4cuda_5ccuda_CUmemoryPool __pyx_v_pool, __pyx_t_4cuda_5ccuda_CUmemPool_attribute __pyx_v_attr, void *__pyx_v_value) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemPoolSetAttribute", __pyx_f[0], 448, 1, __PYX_ERR(0, 448, __pyx_L1_error));

  /* "cuda/ccuda.pyx":449
 * 
 * cdef CUresult cuMemPoolSetAttribute(CUmemoryPool pool, CUmemPool_attribute attr, void* value) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemPoolSetAttribute(pool, attr, value)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemPoolGetAttribute(CUmemoryPool pool, CUmemPool_attribute attr, void* value) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolSetAttribute(__pyx_v_pool, __pyx_v_attr, __pyx_v_value); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 449, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":448
 *     return ccuda._cuMemPoolTrimTo(pool, minBytesToKeep)
 * 
 * cdef CUresult cuMemPoolSetAttribute(CUmemoryPool pool, CUmemPool_attribute attr, void* value) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemPoolSetAttribute(pool, attr, value)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemPoolSetAttribute", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":451
 *     return ccuda._cuMemPoolSetAttribute(pool, attr, value)
 * 
 * cdef CUresult cuMemPoolGetAttribute(CUmemoryPool pool, CUmemPool_attribute attr, void* value) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemPoolGetAttribute(pool, attr, value)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemPoolGetAttribute(__pyx_t_4cuda_5ccuda_CUmemoryPool __pyx_v_pool, __pyx_t_4cuda_5ccuda_CUmemPool_attribute __pyx_v_attr, void *__pyx_v_value) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemPoolGetAttribute", __pyx_f[0], 451, 1, __PYX_ERR(0, 451, __pyx_L1_error));

  /* "cuda/ccuda.pyx":452
 * 
 * cdef CUresult cuMemPoolGetAttribute(CUmemoryPool pool, CUmemPool_attribute attr, void* value) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemPoolGetAttribute(pool, attr, value)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemPoolSetAccess(CUmemoryPool pool, const CUmemAccessDesc* map, size_t count) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolGetAttribute(__pyx_v_pool, __pyx_v_attr, __pyx_v_value); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 452, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":451
 *     return ccuda._cuMemPoolSetAttribute(pool, attr, value)
 * 
 * cdef CUresult cuMemPoolGetAttribute(CUmemoryPool pool, CUmemPool_attribute attr, void* value) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemPoolGetAttribute(pool, attr, value)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemPoolGetAttribute", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":454
 *     return ccuda._cuMemPoolGetAttribute(pool, attr, value)
 * 
 * cdef CUresult cuMemPoolSetAccess(CUmemoryPool pool, const CUmemAccessDesc* map, size_t count) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemPoolSetAccess(pool, map, count)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemPoolSetAccess(__pyx_t_4cuda_5ccuda_CUmemoryPool __pyx_v_pool, __pyx_t_4cuda_5ccuda_CUmemAccessDesc const *__pyx_v_map, size_t __pyx_v_count) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemPoolSetAccess", __pyx_f[0], 454, 1, __PYX_ERR(0, 454, __pyx_L1_error));

  /* "cuda/ccuda.pyx":455
 * 
 * cdef CUresult cuMemPoolSetAccess(CUmemoryPool pool, const CUmemAccessDesc* map, size_t count) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemPoolSetAccess(pool, map, count)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemPoolGetAccess(CUmemAccess_flags* flags, CUmemoryPool memPool, CUmemLocation* location) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolSetAccess(__pyx_v_pool, __pyx_v_map, __pyx_v_count); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 455, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":454
 *     return ccuda._cuMemPoolGetAttribute(pool, attr, value)
 * 
 * cdef CUresult cuMemPoolSetAccess(CUmemoryPool pool, const CUmemAccessDesc* map, size_t count) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemPoolSetAccess(pool, map, count)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemPoolSetAccess", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":457
 *     return ccuda._cuMemPoolSetAccess(pool, map, count)
 * 
 * cdef CUresult cuMemPoolGetAccess(CUmemAccess_flags* flags, CUmemoryPool memPool, CUmemLocation* location) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemPoolGetAccess(flags, memPool, location)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemPoolGetAccess(__pyx_t_4cuda_5ccuda_CUmemAccess_flags *__pyx_v_flags, __pyx_t_4cuda_5ccuda_CUmemoryPool __pyx_v_memPool, __pyx_t_4cuda_5ccuda_CUmemLocation *__pyx_v_location) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemPoolGetAccess", __pyx_f[0], 457, 1, __PYX_ERR(0, 457, __pyx_L1_error));

  /* "cuda/ccuda.pyx":458
 * 
 * cdef CUresult cuMemPoolGetAccess(CUmemAccess_flags* flags, CUmemoryPool memPool, CUmemLocation* location) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemPoolGetAccess(flags, memPool, location)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemPoolCreate(CUmemoryPool* pool, const CUmemPoolProps* poolProps) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolGetAccess(__pyx_v_flags, __pyx_v_memPool, __pyx_v_location); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 458, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":457
 *     return ccuda._cuMemPoolSetAccess(pool, map, count)
 * 
 * cdef CUresult cuMemPoolGetAccess(CUmemAccess_flags* flags, CUmemoryPool memPool, CUmemLocation* location) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemPoolGetAccess(flags, memPool, location)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemPoolGetAccess", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":460
 *     return ccuda._cuMemPoolGetAccess(flags, memPool, location)
 * 
 * cdef CUresult cuMemPoolCreate(CUmemoryPool* pool, const CUmemPoolProps* poolProps) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemPoolCreate(pool, poolProps)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemPoolCreate(__pyx_t_4cuda_5ccuda_CUmemoryPool *__pyx_v_pool, __pyx_t_4cuda_5ccuda_CUmemPoolProps const *__pyx_v_poolProps) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemPoolCreate", __pyx_f[0], 460, 1, __PYX_ERR(0, 460, __pyx_L1_error));

  /* "cuda/ccuda.pyx":461
 * 
 * cdef CUresult cuMemPoolCreate(CUmemoryPool* pool, const CUmemPoolProps* poolProps) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemPoolCreate(pool, poolProps)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemPoolDestroy(CUmemoryPool pool) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolCreate(__pyx_v_pool, __pyx_v_poolProps); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 461, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":460
 *     return ccuda._cuMemPoolGetAccess(flags, memPool, location)
 * 
 * cdef CUresult cuMemPoolCreate(CUmemoryPool* pool, const CUmemPoolProps* poolProps) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemPoolCreate(pool, poolProps)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemPoolCreate", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":463
 *     return ccuda._cuMemPoolCreate(pool, poolProps)
 * 
 * cdef CUresult cuMemPoolDestroy(CUmemoryPool pool) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemPoolDestroy(pool)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemPoolDestroy(__pyx_t_4cuda_5ccuda_CUmemoryPool __pyx_v_pool) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemPoolDestroy", __pyx_f[0], 463, 1, __PYX_ERR(0, 463, __pyx_L1_error));

  /* "cuda/ccuda.pyx":464
 * 
 * cdef CUresult cuMemPoolDestroy(CUmemoryPool pool) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemPoolDestroy(pool)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemAllocFromPoolAsync(CUdeviceptr* dptr, size_t bytesize, CUmemoryPool pool, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolDestroy(__pyx_v_pool); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 464, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":463
 *     return ccuda._cuMemPoolCreate(pool, poolProps)
 * 
 * cdef CUresult cuMemPoolDestroy(CUmemoryPool pool) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemPoolDestroy(pool)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemPoolDestroy", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":466
 *     return ccuda._cuMemPoolDestroy(pool)
 * 
 * cdef CUresult cuMemAllocFromPoolAsync(CUdeviceptr* dptr, size_t bytesize, CUmemoryPool pool, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemAllocFromPoolAsync(dptr, bytesize, pool, hStream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemAllocFromPoolAsync(__pyx_t_4cuda_5ccuda_CUdeviceptr *__pyx_v_dptr, size_t __pyx_v_bytesize, __pyx_t_4cuda_5ccuda_CUmemoryPool __pyx_v_pool, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemAllocFromPoolAsync", __pyx_f[0], 466, 1, __PYX_ERR(0, 466, __pyx_L1_error));

  /* "cuda/ccuda.pyx":467
 * 
 * cdef CUresult cuMemAllocFromPoolAsync(CUdeviceptr* dptr, size_t bytesize, CUmemoryPool pool, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemAllocFromPoolAsync(dptr, bytesize, pool, hStream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemPoolExportToShareableHandle(void* handle_out, CUmemoryPool pool, CUmemAllocationHandleType handleType, unsigned long long flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemAllocFromPoolAsync(__pyx_v_dptr, __pyx_v_bytesize, __pyx_v_pool, __pyx_v_hStream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 467, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":466
 *     return ccuda._cuMemPoolDestroy(pool)
 * 
 * cdef CUresult cuMemAllocFromPoolAsync(CUdeviceptr* dptr, size_t bytesize, CUmemoryPool pool, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemAllocFromPoolAsync(dptr, bytesize, pool, hStream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemAllocFromPoolAsync", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":469
 *     return ccuda._cuMemAllocFromPoolAsync(dptr, bytesize, pool, hStream)
 * 
 * cdef CUresult cuMemPoolExportToShareableHandle(void* handle_out, CUmemoryPool pool, CUmemAllocationHandleType handleType, unsigned long long flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemPoolExportToShareableHandle(handle_out, pool, handleType, flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemPoolExportToShareableHandle(void *__pyx_v_handle_out, __pyx_t_4cuda_5ccuda_CUmemoryPool __pyx_v_pool, __pyx_t_4cuda_5ccuda_CUmemAllocationHandleType __pyx_v_handleType, unsigned PY_LONG_LONG __pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemPoolExportToShareableHandle", __pyx_f[0], 469, 1, __PYX_ERR(0, 469, __pyx_L1_error));

  /* "cuda/ccuda.pyx":470
 * 
 * cdef CUresult cuMemPoolExportToShareableHandle(void* handle_out, CUmemoryPool pool, CUmemAllocationHandleType handleType, unsigned long long flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemPoolExportToShareableHandle(handle_out, pool, handleType, flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemPoolImportFromShareableHandle(CUmemoryPool* pool_out, void* handle, CUmemAllocationHandleType handleType, unsigned long long flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolExportToShareableHandle(__pyx_v_handle_out, __pyx_v_pool, __pyx_v_handleType, __pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 470, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":469
 *     return ccuda._cuMemAllocFromPoolAsync(dptr, bytesize, pool, hStream)
 * 
 * cdef CUresult cuMemPoolExportToShareableHandle(void* handle_out, CUmemoryPool pool, CUmemAllocationHandleType handleType, unsigned long long flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemPoolExportToShareableHandle(handle_out, pool, handleType, flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemPoolExportToShareableHandle", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":472
 *     return ccuda._cuMemPoolExportToShareableHandle(handle_out, pool, handleType, flags)
 * 
 * cdef CUresult cuMemPoolImportFromShareableHandle(CUmemoryPool* pool_out, void* handle, CUmemAllocationHandleType handleType, unsigned long long flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemPoolImportFromShareableHandle(pool_out, handle, handleType, flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemPoolImportFromShareableHandle(__pyx_t_4cuda_5ccuda_CUmemoryPool *__pyx_v_pool_out, void *__pyx_v_handle, __pyx_t_4cuda_5ccuda_CUmemAllocationHandleType __pyx_v_handleType, unsigned PY_LONG_LONG __pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemPoolImportFromShareableHandle", __pyx_f[0], 472, 1, __PYX_ERR(0, 472, __pyx_L1_error));

  /* "cuda/ccuda.pyx":473
 * 
 * cdef CUresult cuMemPoolImportFromShareableHandle(CUmemoryPool* pool_out, void* handle, CUmemAllocationHandleType handleType, unsigned long long flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemPoolImportFromShareableHandle(pool_out, handle, handleType, flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemPoolExportPointer(CUmemPoolPtrExportData* shareData_out, CUdeviceptr ptr) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolImportFromShareableHandle(__pyx_v_pool_out, __pyx_v_handle, __pyx_v_handleType, __pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 473, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":472
 *     return ccuda._cuMemPoolExportToShareableHandle(handle_out, pool, handleType, flags)
 * 
 * cdef CUresult cuMemPoolImportFromShareableHandle(CUmemoryPool* pool_out, void* handle, CUmemAllocationHandleType handleType, unsigned long long flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemPoolImportFromShareableHandle(pool_out, handle, handleType, flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemPoolImportFromShareableHandle", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":475
 *     return ccuda._cuMemPoolImportFromShareableHandle(pool_out, handle, handleType, flags)
 * 
 * cdef CUresult cuMemPoolExportPointer(CUmemPoolPtrExportData* shareData_out, CUdeviceptr ptr) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemPoolExportPointer(shareData_out, ptr)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemPoolExportPointer(__pyx_t_4cuda_5ccuda_CUmemPoolPtrExportData *__pyx_v_shareData_out, __pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_ptr) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemPoolExportPointer", __pyx_f[0], 475, 1, __PYX_ERR(0, 475, __pyx_L1_error));

  /* "cuda/ccuda.pyx":476
 * 
 * cdef CUresult cuMemPoolExportPointer(CUmemPoolPtrExportData* shareData_out, CUdeviceptr ptr) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemPoolExportPointer(shareData_out, ptr)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemPoolImportPointer(CUdeviceptr* ptr_out, CUmemoryPool pool, CUmemPoolPtrExportData* shareData) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolExportPointer(__pyx_v_shareData_out, __pyx_v_ptr); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 476, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":475
 *     return ccuda._cuMemPoolImportFromShareableHandle(pool_out, handle, handleType, flags)
 * 
 * cdef CUresult cuMemPoolExportPointer(CUmemPoolPtrExportData* shareData_out, CUdeviceptr ptr) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemPoolExportPointer(shareData_out, ptr)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemPoolExportPointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":478
 *     return ccuda._cuMemPoolExportPointer(shareData_out, ptr)
 * 
 * cdef CUresult cuMemPoolImportPointer(CUdeviceptr* ptr_out, CUmemoryPool pool, CUmemPoolPtrExportData* shareData) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemPoolImportPointer(ptr_out, pool, shareData)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemPoolImportPointer(__pyx_t_4cuda_5ccuda_CUdeviceptr *__pyx_v_ptr_out, __pyx_t_4cuda_5ccuda_CUmemoryPool __pyx_v_pool, __pyx_t_4cuda_5ccuda_CUmemPoolPtrExportData *__pyx_v_shareData) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemPoolImportPointer", __pyx_f[0], 478, 1, __PYX_ERR(0, 478, __pyx_L1_error));

  /* "cuda/ccuda.pyx":479
 * 
 * cdef CUresult cuMemPoolImportPointer(CUdeviceptr* ptr_out, CUmemoryPool pool, CUmemPoolPtrExportData* shareData) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemPoolImportPointer(ptr_out, pool, shareData)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuPointerGetAttribute(void* data, CUpointer_attribute attribute, CUdeviceptr ptr) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolImportPointer(__pyx_v_ptr_out, __pyx_v_pool, __pyx_v_shareData); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 479, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":478
 *     return ccuda._cuMemPoolExportPointer(shareData_out, ptr)
 * 
 * cdef CUresult cuMemPoolImportPointer(CUdeviceptr* ptr_out, CUmemoryPool pool, CUmemPoolPtrExportData* shareData) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemPoolImportPointer(ptr_out, pool, shareData)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemPoolImportPointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":481
 *     return ccuda._cuMemPoolImportPointer(ptr_out, pool, shareData)
 * 
 * cdef CUresult cuPointerGetAttribute(void* data, CUpointer_attribute attribute, CUdeviceptr ptr) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuPointerGetAttribute(data, attribute, ptr)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuPointerGetAttribute(void *__pyx_v_data, __pyx_t_4cuda_5ccuda_CUpointer_attribute __pyx_v_attribute, __pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_ptr) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuPointerGetAttribute", __pyx_f[0], 481, 1, __PYX_ERR(0, 481, __pyx_L1_error));

  /* "cuda/ccuda.pyx":482
 * 
 * cdef CUresult cuPointerGetAttribute(void* data, CUpointer_attribute attribute, CUdeviceptr ptr) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuPointerGetAttribute(data, attribute, ptr)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemPrefetchAsync(CUdeviceptr devPtr, size_t count, CUdevice dstDevice, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuPointerGetAttribute(__pyx_v_data, __pyx_v_attribute, __pyx_v_ptr); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 482, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":481
 *     return ccuda._cuMemPoolImportPointer(ptr_out, pool, shareData)
 * 
 * cdef CUresult cuPointerGetAttribute(void* data, CUpointer_attribute attribute, CUdeviceptr ptr) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuPointerGetAttribute(data, attribute, ptr)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuPointerGetAttribute", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":484
 *     return ccuda._cuPointerGetAttribute(data, attribute, ptr)
 * 
 * cdef CUresult cuMemPrefetchAsync(CUdeviceptr devPtr, size_t count, CUdevice dstDevice, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemPrefetchAsync(devPtr, count, dstDevice, hStream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemPrefetchAsync(__pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_devPtr, size_t __pyx_v_count, __pyx_t_4cuda_5ccuda_CUdevice __pyx_v_dstDevice, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemPrefetchAsync", __pyx_f[0], 484, 1, __PYX_ERR(0, 484, __pyx_L1_error));

  /* "cuda/ccuda.pyx":485
 * 
 * cdef CUresult cuMemPrefetchAsync(CUdeviceptr devPtr, size_t count, CUdevice dstDevice, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemPrefetchAsync(devPtr, count, dstDevice, hStream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemAdvise(CUdeviceptr devPtr, size_t count, CUmem_advise advice, CUdevice device) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemPrefetchAsync(__pyx_v_devPtr, __pyx_v_count, __pyx_v_dstDevice, __pyx_v_hStream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 485, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":484
 *     return ccuda._cuPointerGetAttribute(data, attribute, ptr)
 * 
 * cdef CUresult cuMemPrefetchAsync(CUdeviceptr devPtr, size_t count, CUdevice dstDevice, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemPrefetchAsync(devPtr, count, dstDevice, hStream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemPrefetchAsync", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":487
 *     return ccuda._cuMemPrefetchAsync(devPtr, count, dstDevice, hStream)
 * 
 * cdef CUresult cuMemAdvise(CUdeviceptr devPtr, size_t count, CUmem_advise advice, CUdevice device) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemAdvise(devPtr, count, advice, device)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemAdvise(__pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_devPtr, size_t __pyx_v_count, __pyx_t_4cuda_5ccuda_CUmem_advise __pyx_v_advice, __pyx_t_4cuda_5ccuda_CUdevice __pyx_v_device) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemAdvise", __pyx_f[0], 487, 1, __PYX_ERR(0, 487, __pyx_L1_error));

  /* "cuda/ccuda.pyx":488
 * 
 * cdef CUresult cuMemAdvise(CUdeviceptr devPtr, size_t count, CUmem_advise advice, CUdevice device) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemAdvise(devPtr, count, advice, device)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemRangeGetAttribute(void* data, size_t dataSize, CUmem_range_attribute attribute, CUdeviceptr devPtr, size_t count) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemAdvise(__pyx_v_devPtr, __pyx_v_count, __pyx_v_advice, __pyx_v_device); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 488, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":487
 *     return ccuda._cuMemPrefetchAsync(devPtr, count, dstDevice, hStream)
 * 
 * cdef CUresult cuMemAdvise(CUdeviceptr devPtr, size_t count, CUmem_advise advice, CUdevice device) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemAdvise(devPtr, count, advice, device)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemAdvise", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":490
 *     return ccuda._cuMemAdvise(devPtr, count, advice, device)
 * 
 * cdef CUresult cuMemRangeGetAttribute(void* data, size_t dataSize, CUmem_range_attribute attribute, CUdeviceptr devPtr, size_t count) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemRangeGetAttribute(data, dataSize, attribute, devPtr, count)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemRangeGetAttribute(void *__pyx_v_data, size_t __pyx_v_dataSize, __pyx_t_4cuda_5ccuda_CUmem_range_attribute __pyx_v_attribute, __pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_devPtr, size_t __pyx_v_count) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemRangeGetAttribute", __pyx_f[0], 490, 1, __PYX_ERR(0, 490, __pyx_L1_error));

  /* "cuda/ccuda.pyx":491
 * 
 * cdef CUresult cuMemRangeGetAttribute(void* data, size_t dataSize, CUmem_range_attribute attribute, CUdeviceptr devPtr, size_t count) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemRangeGetAttribute(data, dataSize, attribute, devPtr, count)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuMemRangeGetAttributes(void** data, size_t* dataSizes, CUmem_range_attribute* attributes, size_t numAttributes, CUdeviceptr devPtr, size_t count) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemRangeGetAttribute(__pyx_v_data, __pyx_v_dataSize, __pyx_v_attribute, __pyx_v_devPtr, __pyx_v_count); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 491, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":490
 *     return ccuda._cuMemAdvise(devPtr, count, advice, device)
 * 
 * cdef CUresult cuMemRangeGetAttribute(void* data, size_t dataSize, CUmem_range_attribute attribute, CUdeviceptr devPtr, size_t count) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemRangeGetAttribute(data, dataSize, attribute, devPtr, count)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemRangeGetAttribute", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":493
 *     return ccuda._cuMemRangeGetAttribute(data, dataSize, attribute, devPtr, count)
 * 
 * cdef CUresult cuMemRangeGetAttributes(void** data, size_t* dataSizes, CUmem_range_attribute* attributes, size_t numAttributes, CUdeviceptr devPtr, size_t count) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemRangeGetAttributes(data, dataSizes, attributes, numAttributes, devPtr, count)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuMemRangeGetAttributes(void **__pyx_v_data, size_t *__pyx_v_dataSizes, __pyx_t_4cuda_5ccuda_CUmem_range_attribute *__pyx_v_attributes, size_t __pyx_v_numAttributes, __pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_devPtr, size_t __pyx_v_count) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuMemRangeGetAttributes", __pyx_f[0], 493, 1, __PYX_ERR(0, 493, __pyx_L1_error));

  /* "cuda/ccuda.pyx":494
 * 
 * cdef CUresult cuMemRangeGetAttributes(void** data, size_t* dataSizes, CUmem_range_attribute* attributes, size_t numAttributes, CUdeviceptr devPtr, size_t count) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuMemRangeGetAttributes(data, dataSizes, attributes, numAttributes, devPtr, count)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuPointerSetAttribute(const void* value, CUpointer_attribute attribute, CUdeviceptr ptr) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuMemRangeGetAttributes(__pyx_v_data, __pyx_v_dataSizes, __pyx_v_attributes, __pyx_v_numAttributes, __pyx_v_devPtr, __pyx_v_count); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 494, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":493
 *     return ccuda._cuMemRangeGetAttribute(data, dataSize, attribute, devPtr, count)
 * 
 * cdef CUresult cuMemRangeGetAttributes(void** data, size_t* dataSizes, CUmem_range_attribute* attributes, size_t numAttributes, CUdeviceptr devPtr, size_t count) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuMemRangeGetAttributes(data, dataSizes, attributes, numAttributes, devPtr, count)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuMemRangeGetAttributes", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":496
 *     return ccuda._cuMemRangeGetAttributes(data, dataSizes, attributes, numAttributes, devPtr, count)
 * 
 * cdef CUresult cuPointerSetAttribute(const void* value, CUpointer_attribute attribute, CUdeviceptr ptr) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuPointerSetAttribute(value, attribute, ptr)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuPointerSetAttribute(void const *__pyx_v_value, __pyx_t_4cuda_5ccuda_CUpointer_attribute __pyx_v_attribute, __pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_ptr) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuPointerSetAttribute", __pyx_f[0], 496, 1, __PYX_ERR(0, 496, __pyx_L1_error));

  /* "cuda/ccuda.pyx":497
 * 
 * cdef CUresult cuPointerSetAttribute(const void* value, CUpointer_attribute attribute, CUdeviceptr ptr) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuPointerSetAttribute(value, attribute, ptr)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuPointerGetAttributes(unsigned int numAttributes, CUpointer_attribute* attributes, void** data, CUdeviceptr ptr) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuPointerSetAttribute(__pyx_v_value, __pyx_v_attribute, __pyx_v_ptr); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 497, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":496
 *     return ccuda._cuMemRangeGetAttributes(data, dataSizes, attributes, numAttributes, devPtr, count)
 * 
 * cdef CUresult cuPointerSetAttribute(const void* value, CUpointer_attribute attribute, CUdeviceptr ptr) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuPointerSetAttribute(value, attribute, ptr)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuPointerSetAttribute", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":499
 *     return ccuda._cuPointerSetAttribute(value, attribute, ptr)
 * 
 * cdef CUresult cuPointerGetAttributes(unsigned int numAttributes, CUpointer_attribute* attributes, void** data, CUdeviceptr ptr) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuPointerGetAttributes(numAttributes, attributes, data, ptr)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuPointerGetAttributes(unsigned int __pyx_v_numAttributes, __pyx_t_4cuda_5ccuda_CUpointer_attribute *__pyx_v_attributes, void **__pyx_v_data, __pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_ptr) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuPointerGetAttributes", __pyx_f[0], 499, 1, __PYX_ERR(0, 499, __pyx_L1_error));

  /* "cuda/ccuda.pyx":500
 * 
 * cdef CUresult cuPointerGetAttributes(unsigned int numAttributes, CUpointer_attribute* attributes, void** data, CUdeviceptr ptr) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuPointerGetAttributes(numAttributes, attributes, data, ptr)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuStreamCreate(CUstream* phStream, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuPointerGetAttributes(__pyx_v_numAttributes, __pyx_v_attributes, __pyx_v_data, __pyx_v_ptr); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 500, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":499
 *     return ccuda._cuPointerSetAttribute(value, attribute, ptr)
 * 
 * cdef CUresult cuPointerGetAttributes(unsigned int numAttributes, CUpointer_attribute* attributes, void** data, CUdeviceptr ptr) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuPointerGetAttributes(numAttributes, attributes, data, ptr)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuPointerGetAttributes", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":502
 *     return ccuda._cuPointerGetAttributes(numAttributes, attributes, data, ptr)
 * 
 * cdef CUresult cuStreamCreate(CUstream* phStream, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamCreate(phStream, Flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuStreamCreate(__pyx_t_4cuda_5ccuda_CUstream *__pyx_v_phStream, unsigned int __pyx_v_Flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuStreamCreate", __pyx_f[0], 502, 1, __PYX_ERR(0, 502, __pyx_L1_error));

  /* "cuda/ccuda.pyx":503
 * 
 * cdef CUresult cuStreamCreate(CUstream* phStream, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuStreamCreate(phStream, Flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuStreamCreateWithPriority(CUstream* phStream, unsigned int flags, int priority) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuStreamCreate(__pyx_v_phStream, __pyx_v_Flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 503, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":502
 *     return ccuda._cuPointerGetAttributes(numAttributes, attributes, data, ptr)
 * 
 * cdef CUresult cuStreamCreate(CUstream* phStream, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamCreate(phStream, Flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuStreamCreate", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":505
 *     return ccuda._cuStreamCreate(phStream, Flags)
 * 
 * cdef CUresult cuStreamCreateWithPriority(CUstream* phStream, unsigned int flags, int priority) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamCreateWithPriority(phStream, flags, priority)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuStreamCreateWithPriority(__pyx_t_4cuda_5ccuda_CUstream *__pyx_v_phStream, unsigned int __pyx_v_flags, int __pyx_v_priority) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuStreamCreateWithPriority", __pyx_f[0], 505, 1, __PYX_ERR(0, 505, __pyx_L1_error));

  /* "cuda/ccuda.pyx":506
 * 
 * cdef CUresult cuStreamCreateWithPriority(CUstream* phStream, unsigned int flags, int priority) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuStreamCreateWithPriority(phStream, flags, priority)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuStreamGetPriority(CUstream hStream, int* priority) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuStreamCreateWithPriority(__pyx_v_phStream, __pyx_v_flags, __pyx_v_priority); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 506, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":505
 *     return ccuda._cuStreamCreate(phStream, Flags)
 * 
 * cdef CUresult cuStreamCreateWithPriority(CUstream* phStream, unsigned int flags, int priority) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamCreateWithPriority(phStream, flags, priority)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuStreamCreateWithPriority", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":508
 *     return ccuda._cuStreamCreateWithPriority(phStream, flags, priority)
 * 
 * cdef CUresult cuStreamGetPriority(CUstream hStream, int* priority) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamGetPriority(hStream, priority)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuStreamGetPriority(__pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream, int *__pyx_v_priority) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuStreamGetPriority", __pyx_f[0], 508, 1, __PYX_ERR(0, 508, __pyx_L1_error));

  /* "cuda/ccuda.pyx":509
 * 
 * cdef CUresult cuStreamGetPriority(CUstream hStream, int* priority) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuStreamGetPriority(hStream, priority)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuStreamGetFlags(CUstream hStream, unsigned int* flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuStreamGetPriority(__pyx_v_hStream, __pyx_v_priority); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 509, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":508
 *     return ccuda._cuStreamCreateWithPriority(phStream, flags, priority)
 * 
 * cdef CUresult cuStreamGetPriority(CUstream hStream, int* priority) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamGetPriority(hStream, priority)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuStreamGetPriority", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":511
 *     return ccuda._cuStreamGetPriority(hStream, priority)
 * 
 * cdef CUresult cuStreamGetFlags(CUstream hStream, unsigned int* flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamGetFlags(hStream, flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuStreamGetFlags(__pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream, unsigned int *__pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuStreamGetFlags", __pyx_f[0], 511, 1, __PYX_ERR(0, 511, __pyx_L1_error));

  /* "cuda/ccuda.pyx":512
 * 
 * cdef CUresult cuStreamGetFlags(CUstream hStream, unsigned int* flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuStreamGetFlags(hStream, flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuStreamGetCtx(CUstream hStream, CUcontext* pctx) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuStreamGetFlags(__pyx_v_hStream, __pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 512, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":511
 *     return ccuda._cuStreamGetPriority(hStream, priority)
 * 
 * cdef CUresult cuStreamGetFlags(CUstream hStream, unsigned int* flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamGetFlags(hStream, flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuStreamGetFlags", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":514
 *     return ccuda._cuStreamGetFlags(hStream, flags)
 * 
 * cdef CUresult cuStreamGetCtx(CUstream hStream, CUcontext* pctx) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamGetCtx(hStream, pctx)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuStreamGetCtx(__pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream, __pyx_t_4cuda_5ccuda_CUcontext *__pyx_v_pctx) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuStreamGetCtx", __pyx_f[0], 514, 1, __PYX_ERR(0, 514, __pyx_L1_error));

  /* "cuda/ccuda.pyx":515
 * 
 * cdef CUresult cuStreamGetCtx(CUstream hStream, CUcontext* pctx) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuStreamGetCtx(hStream, pctx)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuStreamWaitEvent(CUstream hStream, CUevent hEvent, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuStreamGetCtx(__pyx_v_hStream, __pyx_v_pctx); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 515, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":514
 *     return ccuda._cuStreamGetFlags(hStream, flags)
 * 
 * cdef CUresult cuStreamGetCtx(CUstream hStream, CUcontext* pctx) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamGetCtx(hStream, pctx)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuStreamGetCtx", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":517
 *     return ccuda._cuStreamGetCtx(hStream, pctx)
 * 
 * cdef CUresult cuStreamWaitEvent(CUstream hStream, CUevent hEvent, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamWaitEvent(hStream, hEvent, Flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuStreamWaitEvent(__pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream, __pyx_t_4cuda_5ccuda_CUevent __pyx_v_hEvent, unsigned int __pyx_v_Flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuStreamWaitEvent", __pyx_f[0], 517, 1, __PYX_ERR(0, 517, __pyx_L1_error));

  /* "cuda/ccuda.pyx":518
 * 
 * cdef CUresult cuStreamWaitEvent(CUstream hStream, CUevent hEvent, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuStreamWaitEvent(hStream, hEvent, Flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuStreamAddCallback(CUstream hStream, CUstreamCallback callback, void* userData, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuStreamWaitEvent(__pyx_v_hStream, __pyx_v_hEvent, __pyx_v_Flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 518, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":517
 *     return ccuda._cuStreamGetCtx(hStream, pctx)
 * 
 * cdef CUresult cuStreamWaitEvent(CUstream hStream, CUevent hEvent, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamWaitEvent(hStream, hEvent, Flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuStreamWaitEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":520
 *     return ccuda._cuStreamWaitEvent(hStream, hEvent, Flags)
 * 
 * cdef CUresult cuStreamAddCallback(CUstream hStream, CUstreamCallback callback, void* userData, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamAddCallback(hStream, callback, userData, flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuStreamAddCallback(__pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream, __pyx_t_4cuda_5ccuda_CUstreamCallback __pyx_v_callback, void *__pyx_v_userData, unsigned int __pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuStreamAddCallback", __pyx_f[0], 520, 1, __PYX_ERR(0, 520, __pyx_L1_error));

  /* "cuda/ccuda.pyx":521
 * 
 * cdef CUresult cuStreamAddCallback(CUstream hStream, CUstreamCallback callback, void* userData, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuStreamAddCallback(hStream, callback, userData, flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuStreamBeginCapture(CUstream hStream, CUstreamCaptureMode mode) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuStreamAddCallback(__pyx_v_hStream, __pyx_v_callback, __pyx_v_userData, __pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 521, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":520
 *     return ccuda._cuStreamWaitEvent(hStream, hEvent, Flags)
 * 
 * cdef CUresult cuStreamAddCallback(CUstream hStream, CUstreamCallback callback, void* userData, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamAddCallback(hStream, callback, userData, flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuStreamAddCallback", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":523
 *     return ccuda._cuStreamAddCallback(hStream, callback, userData, flags)
 * 
 * cdef CUresult cuStreamBeginCapture(CUstream hStream, CUstreamCaptureMode mode) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamBeginCapture_v2(hStream, mode)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuStreamBeginCapture(__pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream, __pyx_t_4cuda_5ccuda_CUstreamCaptureMode __pyx_v_mode) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuStreamBeginCapture", __pyx_f[0], 523, 1, __PYX_ERR(0, 523, __pyx_L1_error));

  /* "cuda/ccuda.pyx":524
 * 
 * cdef CUresult cuStreamBeginCapture(CUstream hStream, CUstreamCaptureMode mode) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuStreamBeginCapture_v2(hStream, mode)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuThreadExchangeStreamCaptureMode(CUstreamCaptureMode* mode) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuStreamBeginCapture_v2(__pyx_v_hStream, __pyx_v_mode); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 524, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":523
 *     return ccuda._cuStreamAddCallback(hStream, callback, userData, flags)
 * 
 * cdef CUresult cuStreamBeginCapture(CUstream hStream, CUstreamCaptureMode mode) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamBeginCapture_v2(hStream, mode)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuStreamBeginCapture", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":526
 *     return ccuda._cuStreamBeginCapture_v2(hStream, mode)
 * 
 * cdef CUresult cuThreadExchangeStreamCaptureMode(CUstreamCaptureMode* mode) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuThreadExchangeStreamCaptureMode(mode)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuThreadExchangeStreamCaptureMode(__pyx_t_4cuda_5ccuda_CUstreamCaptureMode *__pyx_v_mode) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuThreadExchangeStreamCaptureMode", __pyx_f[0], 526, 1, __PYX_ERR(0, 526, __pyx_L1_error));

  /* "cuda/ccuda.pyx":527
 * 
 * cdef CUresult cuThreadExchangeStreamCaptureMode(CUstreamCaptureMode* mode) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuThreadExchangeStreamCaptureMode(mode)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuStreamEndCapture(CUstream hStream, CUgraph* phGraph) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuThreadExchangeStreamCaptureMode(__pyx_v_mode); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 527, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":526
 *     return ccuda._cuStreamBeginCapture_v2(hStream, mode)
 * 
 * cdef CUresult cuThreadExchangeStreamCaptureMode(CUstreamCaptureMode* mode) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuThreadExchangeStreamCaptureMode(mode)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuThreadExchangeStreamCaptureMode", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":529
 *     return ccuda._cuThreadExchangeStreamCaptureMode(mode)
 * 
 * cdef CUresult cuStreamEndCapture(CUstream hStream, CUgraph* phGraph) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamEndCapture(hStream, phGraph)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuStreamEndCapture(__pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream, __pyx_t_4cuda_5ccuda_CUgraph *__pyx_v_phGraph) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuStreamEndCapture", __pyx_f[0], 529, 1, __PYX_ERR(0, 529, __pyx_L1_error));

  /* "cuda/ccuda.pyx":530
 * 
 * cdef CUresult cuStreamEndCapture(CUstream hStream, CUgraph* phGraph) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuStreamEndCapture(hStream, phGraph)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuStreamIsCapturing(CUstream hStream, CUstreamCaptureStatus* captureStatus) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuStreamEndCapture(__pyx_v_hStream, __pyx_v_phGraph); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 530, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":529
 *     return ccuda._cuThreadExchangeStreamCaptureMode(mode)
 * 
 * cdef CUresult cuStreamEndCapture(CUstream hStream, CUgraph* phGraph) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamEndCapture(hStream, phGraph)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuStreamEndCapture", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":532
 *     return ccuda._cuStreamEndCapture(hStream, phGraph)
 * 
 * cdef CUresult cuStreamIsCapturing(CUstream hStream, CUstreamCaptureStatus* captureStatus) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamIsCapturing(hStream, captureStatus)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuStreamIsCapturing(__pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream, __pyx_t_4cuda_5ccuda_CUstreamCaptureStatus *__pyx_v_captureStatus) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuStreamIsCapturing", __pyx_f[0], 532, 1, __PYX_ERR(0, 532, __pyx_L1_error));

  /* "cuda/ccuda.pyx":533
 * 
 * cdef CUresult cuStreamIsCapturing(CUstream hStream, CUstreamCaptureStatus* captureStatus) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuStreamIsCapturing(hStream, captureStatus)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuStreamGetCaptureInfo(CUstream hStream, CUstreamCaptureStatus* captureStatus_out, cuuint64_t* id_out) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuStreamIsCapturing(__pyx_v_hStream, __pyx_v_captureStatus); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 533, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":532
 *     return ccuda._cuStreamEndCapture(hStream, phGraph)
 * 
 * cdef CUresult cuStreamIsCapturing(CUstream hStream, CUstreamCaptureStatus* captureStatus) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamIsCapturing(hStream, captureStatus)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuStreamIsCapturing", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":535
 *     return ccuda._cuStreamIsCapturing(hStream, captureStatus)
 * 
 * cdef CUresult cuStreamGetCaptureInfo(CUstream hStream, CUstreamCaptureStatus* captureStatus_out, cuuint64_t* id_out) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamGetCaptureInfo(hStream, captureStatus_out, id_out)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuStreamGetCaptureInfo(__pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream, __pyx_t_4cuda_5ccuda_CUstreamCaptureStatus *__pyx_v_captureStatus_out, __pyx_t_4cuda_5ccuda_cuuint64_t *__pyx_v_id_out) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuStreamGetCaptureInfo", __pyx_f[0], 535, 1, __PYX_ERR(0, 535, __pyx_L1_error));

  /* "cuda/ccuda.pyx":536
 * 
 * cdef CUresult cuStreamGetCaptureInfo(CUstream hStream, CUstreamCaptureStatus* captureStatus_out, cuuint64_t* id_out) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuStreamGetCaptureInfo(hStream, captureStatus_out, id_out)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuStreamGetCaptureInfo_v2(CUstream hStream, CUstreamCaptureStatus* captureStatus_out, cuuint64_t* id_out, CUgraph* graph_out, const CUgraphNode** dependencies_out, size_t* numDependencies_out) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuStreamGetCaptureInfo(__pyx_v_hStream, __pyx_v_captureStatus_out, __pyx_v_id_out); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 536, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":535
 *     return ccuda._cuStreamIsCapturing(hStream, captureStatus)
 * 
 * cdef CUresult cuStreamGetCaptureInfo(CUstream hStream, CUstreamCaptureStatus* captureStatus_out, cuuint64_t* id_out) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamGetCaptureInfo(hStream, captureStatus_out, id_out)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuStreamGetCaptureInfo", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":538
 *     return ccuda._cuStreamGetCaptureInfo(hStream, captureStatus_out, id_out)
 * 
 * cdef CUresult cuStreamGetCaptureInfo_v2(CUstream hStream, CUstreamCaptureStatus* captureStatus_out, cuuint64_t* id_out, CUgraph* graph_out, const CUgraphNode** dependencies_out, size_t* numDependencies_out) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamGetCaptureInfo_v2(hStream, captureStatus_out, id_out, graph_out, dependencies_out, numDependencies_out)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuStreamGetCaptureInfo_v2(__pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream, __pyx_t_4cuda_5ccuda_CUstreamCaptureStatus *__pyx_v_captureStatus_out, __pyx_t_4cuda_5ccuda_cuuint64_t *__pyx_v_id_out, __pyx_t_4cuda_5ccuda_CUgraph *__pyx_v_graph_out, __pyx_t_4cuda_5ccuda_CUgraphNode const **__pyx_v_dependencies_out, size_t *__pyx_v_numDependencies_out) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuStreamGetCaptureInfo_v2", __pyx_f[0], 538, 1, __PYX_ERR(0, 538, __pyx_L1_error));

  /* "cuda/ccuda.pyx":539
 * 
 * cdef CUresult cuStreamGetCaptureInfo_v2(CUstream hStream, CUstreamCaptureStatus* captureStatus_out, cuuint64_t* id_out, CUgraph* graph_out, const CUgraphNode** dependencies_out, size_t* numDependencies_out) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuStreamGetCaptureInfo_v2(hStream, captureStatus_out, id_out, graph_out, dependencies_out, numDependencies_out)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuStreamUpdateCaptureDependencies(CUstream hStream, CUgraphNode* dependencies, size_t numDependencies, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuStreamGetCaptureInfo_v2(__pyx_v_hStream, __pyx_v_captureStatus_out, __pyx_v_id_out, __pyx_v_graph_out, __pyx_v_dependencies_out, __pyx_v_numDependencies_out); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 539, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":538
 *     return ccuda._cuStreamGetCaptureInfo(hStream, captureStatus_out, id_out)
 * 
 * cdef CUresult cuStreamGetCaptureInfo_v2(CUstream hStream, CUstreamCaptureStatus* captureStatus_out, cuuint64_t* id_out, CUgraph* graph_out, const CUgraphNode** dependencies_out, size_t* numDependencies_out) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamGetCaptureInfo_v2(hStream, captureStatus_out, id_out, graph_out, dependencies_out, numDependencies_out)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuStreamGetCaptureInfo_v2", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":541
 *     return ccuda._cuStreamGetCaptureInfo_v2(hStream, captureStatus_out, id_out, graph_out, dependencies_out, numDependencies_out)
 * 
 * cdef CUresult cuStreamUpdateCaptureDependencies(CUstream hStream, CUgraphNode* dependencies, size_t numDependencies, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamUpdateCaptureDependencies(hStream, dependencies, numDependencies, flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuStreamUpdateCaptureDependencies(__pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream, __pyx_t_4cuda_5ccuda_CUgraphNode *__pyx_v_dependencies, size_t __pyx_v_numDependencies, unsigned int __pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuStreamUpdateCaptureDependencies", __pyx_f[0], 541, 1, __PYX_ERR(0, 541, __pyx_L1_error));

  /* "cuda/ccuda.pyx":542
 * 
 * cdef CUresult cuStreamUpdateCaptureDependencies(CUstream hStream, CUgraphNode* dependencies, size_t numDependencies, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuStreamUpdateCaptureDependencies(hStream, dependencies, numDependencies, flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuStreamAttachMemAsync(CUstream hStream, CUdeviceptr dptr, size_t length, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuStreamUpdateCaptureDependencies(__pyx_v_hStream, __pyx_v_dependencies, __pyx_v_numDependencies, __pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 542, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":541
 *     return ccuda._cuStreamGetCaptureInfo_v2(hStream, captureStatus_out, id_out, graph_out, dependencies_out, numDependencies_out)
 * 
 * cdef CUresult cuStreamUpdateCaptureDependencies(CUstream hStream, CUgraphNode* dependencies, size_t numDependencies, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamUpdateCaptureDependencies(hStream, dependencies, numDependencies, flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuStreamUpdateCaptureDependencies", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":544
 *     return ccuda._cuStreamUpdateCaptureDependencies(hStream, dependencies, numDependencies, flags)
 * 
 * cdef CUresult cuStreamAttachMemAsync(CUstream hStream, CUdeviceptr dptr, size_t length, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamAttachMemAsync(hStream, dptr, length, flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuStreamAttachMemAsync(__pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream, __pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_dptr, size_t __pyx_v_length, unsigned int __pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuStreamAttachMemAsync", __pyx_f[0], 544, 1, __PYX_ERR(0, 544, __pyx_L1_error));

  /* "cuda/ccuda.pyx":545
 * 
 * cdef CUresult cuStreamAttachMemAsync(CUstream hStream, CUdeviceptr dptr, size_t length, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuStreamAttachMemAsync(hStream, dptr, length, flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuStreamQuery(CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuStreamAttachMemAsync(__pyx_v_hStream, __pyx_v_dptr, __pyx_v_length, __pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 545, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":544
 *     return ccuda._cuStreamUpdateCaptureDependencies(hStream, dependencies, numDependencies, flags)
 * 
 * cdef CUresult cuStreamAttachMemAsync(CUstream hStream, CUdeviceptr dptr, size_t length, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamAttachMemAsync(hStream, dptr, length, flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuStreamAttachMemAsync", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":547
 *     return ccuda._cuStreamAttachMemAsync(hStream, dptr, length, flags)
 * 
 * cdef CUresult cuStreamQuery(CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamQuery(hStream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuStreamQuery(__pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuStreamQuery", __pyx_f[0], 547, 1, __PYX_ERR(0, 547, __pyx_L1_error));

  /* "cuda/ccuda.pyx":548
 * 
 * cdef CUresult cuStreamQuery(CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuStreamQuery(hStream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuStreamSynchronize(CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuStreamQuery(__pyx_v_hStream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 548, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":547
 *     return ccuda._cuStreamAttachMemAsync(hStream, dptr, length, flags)
 * 
 * cdef CUresult cuStreamQuery(CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamQuery(hStream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuStreamQuery", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":550
 *     return ccuda._cuStreamQuery(hStream)
 * 
 * cdef CUresult cuStreamSynchronize(CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamSynchronize(hStream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuStreamSynchronize(__pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuStreamSynchronize", __pyx_f[0], 550, 1, __PYX_ERR(0, 550, __pyx_L1_error));

  /* "cuda/ccuda.pyx":551
 * 
 * cdef CUresult cuStreamSynchronize(CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuStreamSynchronize(hStream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuStreamDestroy(CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuStreamSynchronize(__pyx_v_hStream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 551, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":550
 *     return ccuda._cuStreamQuery(hStream)
 * 
 * cdef CUresult cuStreamSynchronize(CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamSynchronize(hStream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuStreamSynchronize", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":553
 *     return ccuda._cuStreamSynchronize(hStream)
 * 
 * cdef CUresult cuStreamDestroy(CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamDestroy_v2(hStream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuStreamDestroy(__pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuStreamDestroy", __pyx_f[0], 553, 1, __PYX_ERR(0, 553, __pyx_L1_error));

  /* "cuda/ccuda.pyx":554
 * 
 * cdef CUresult cuStreamDestroy(CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuStreamDestroy_v2(hStream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuStreamCopyAttributes(CUstream dst, CUstream src) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuStreamDestroy_v2(__pyx_v_hStream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 554, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":553
 *     return ccuda._cuStreamSynchronize(hStream)
 * 
 * cdef CUresult cuStreamDestroy(CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamDestroy_v2(hStream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuStreamDestroy", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":556
 *     return ccuda._cuStreamDestroy_v2(hStream)
 * 
 * cdef CUresult cuStreamCopyAttributes(CUstream dst, CUstream src) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamCopyAttributes(dst, src)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuStreamCopyAttributes(__pyx_t_4cuda_5ccuda_CUstream __pyx_v_dst, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_src) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuStreamCopyAttributes", __pyx_f[0], 556, 1, __PYX_ERR(0, 556, __pyx_L1_error));

  /* "cuda/ccuda.pyx":557
 * 
 * cdef CUresult cuStreamCopyAttributes(CUstream dst, CUstream src) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuStreamCopyAttributes(dst, src)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuStreamGetAttribute(CUstream hStream, CUstreamAttrID attr, CUstreamAttrValue* value_out) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuStreamCopyAttributes(__pyx_v_dst, __pyx_v_src); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 557, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":556
 *     return ccuda._cuStreamDestroy_v2(hStream)
 * 
 * cdef CUresult cuStreamCopyAttributes(CUstream dst, CUstream src) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamCopyAttributes(dst, src)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuStreamCopyAttributes", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":559
 *     return ccuda._cuStreamCopyAttributes(dst, src)
 * 
 * cdef CUresult cuStreamGetAttribute(CUstream hStream, CUstreamAttrID attr, CUstreamAttrValue* value_out) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamGetAttribute(hStream, attr, value_out)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuStreamGetAttribute(__pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream, __pyx_t_4cuda_5ccuda_CUstreamAttrID __pyx_v_attr, __pyx_t_4cuda_5ccuda_CUstreamAttrValue *__pyx_v_value_out) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuStreamGetAttribute", __pyx_f[0], 559, 1, __PYX_ERR(0, 559, __pyx_L1_error));

  /* "cuda/ccuda.pyx":560
 * 
 * cdef CUresult cuStreamGetAttribute(CUstream hStream, CUstreamAttrID attr, CUstreamAttrValue* value_out) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuStreamGetAttribute(hStream, attr, value_out)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuStreamSetAttribute(CUstream hStream, CUstreamAttrID attr, const CUstreamAttrValue* value) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuStreamGetAttribute(__pyx_v_hStream, __pyx_v_attr, __pyx_v_value_out); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 560, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":559
 *     return ccuda._cuStreamCopyAttributes(dst, src)
 * 
 * cdef CUresult cuStreamGetAttribute(CUstream hStream, CUstreamAttrID attr, CUstreamAttrValue* value_out) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamGetAttribute(hStream, attr, value_out)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuStreamGetAttribute", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":562
 *     return ccuda._cuStreamGetAttribute(hStream, attr, value_out)
 * 
 * cdef CUresult cuStreamSetAttribute(CUstream hStream, CUstreamAttrID attr, const CUstreamAttrValue* value) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamSetAttribute(hStream, attr, value)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuStreamSetAttribute(__pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream, __pyx_t_4cuda_5ccuda_CUstreamAttrID __pyx_v_attr, __pyx_t_4cuda_5ccuda_CUstreamAttrValue const *__pyx_v_value) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuStreamSetAttribute", __pyx_f[0], 562, 1, __PYX_ERR(0, 562, __pyx_L1_error));

  /* "cuda/ccuda.pyx":563
 * 
 * cdef CUresult cuStreamSetAttribute(CUstream hStream, CUstreamAttrID attr, const CUstreamAttrValue* value) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuStreamSetAttribute(hStream, attr, value)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuEventCreate(CUevent* phEvent, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuStreamSetAttribute(__pyx_v_hStream, __pyx_v_attr, __pyx_v_value); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 563, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":562
 *     return ccuda._cuStreamGetAttribute(hStream, attr, value_out)
 * 
 * cdef CUresult cuStreamSetAttribute(CUstream hStream, CUstreamAttrID attr, const CUstreamAttrValue* value) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamSetAttribute(hStream, attr, value)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuStreamSetAttribute", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":565
 *     return ccuda._cuStreamSetAttribute(hStream, attr, value)
 * 
 * cdef CUresult cuEventCreate(CUevent* phEvent, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuEventCreate(phEvent, Flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuEventCreate(__pyx_t_4cuda_5ccuda_CUevent *__pyx_v_phEvent, unsigned int __pyx_v_Flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuEventCreate", __pyx_f[0], 565, 1, __PYX_ERR(0, 565, __pyx_L1_error));

  /* "cuda/ccuda.pyx":566
 * 
 * cdef CUresult cuEventCreate(CUevent* phEvent, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuEventCreate(phEvent, Flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuEventRecord(CUevent hEvent, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuEventCreate(__pyx_v_phEvent, __pyx_v_Flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 566, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":565
 *     return ccuda._cuStreamSetAttribute(hStream, attr, value)
 * 
 * cdef CUresult cuEventCreate(CUevent* phEvent, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuEventCreate(phEvent, Flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuEventCreate", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":568
 *     return ccuda._cuEventCreate(phEvent, Flags)
 * 
 * cdef CUresult cuEventRecord(CUevent hEvent, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuEventRecord(hEvent, hStream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuEventRecord(__pyx_t_4cuda_5ccuda_CUevent __pyx_v_hEvent, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuEventRecord", __pyx_f[0], 568, 1, __PYX_ERR(0, 568, __pyx_L1_error));

  /* "cuda/ccuda.pyx":569
 * 
 * cdef CUresult cuEventRecord(CUevent hEvent, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuEventRecord(hEvent, hStream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuEventRecordWithFlags(CUevent hEvent, CUstream hStream, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuEventRecord(__pyx_v_hEvent, __pyx_v_hStream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 569, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":568
 *     return ccuda._cuEventCreate(phEvent, Flags)
 * 
 * cdef CUresult cuEventRecord(CUevent hEvent, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuEventRecord(hEvent, hStream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuEventRecord", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":571
 *     return ccuda._cuEventRecord(hEvent, hStream)
 * 
 * cdef CUresult cuEventRecordWithFlags(CUevent hEvent, CUstream hStream, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuEventRecordWithFlags(hEvent, hStream, flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuEventRecordWithFlags(__pyx_t_4cuda_5ccuda_CUevent __pyx_v_hEvent, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream, unsigned int __pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuEventRecordWithFlags", __pyx_f[0], 571, 1, __PYX_ERR(0, 571, __pyx_L1_error));

  /* "cuda/ccuda.pyx":572
 * 
 * cdef CUresult cuEventRecordWithFlags(CUevent hEvent, CUstream hStream, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuEventRecordWithFlags(hEvent, hStream, flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuEventQuery(CUevent hEvent) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuEventRecordWithFlags(__pyx_v_hEvent, __pyx_v_hStream, __pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 572, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":571
 *     return ccuda._cuEventRecord(hEvent, hStream)
 * 
 * cdef CUresult cuEventRecordWithFlags(CUevent hEvent, CUstream hStream, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuEventRecordWithFlags(hEvent, hStream, flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuEventRecordWithFlags", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":574
 *     return ccuda._cuEventRecordWithFlags(hEvent, hStream, flags)
 * 
 * cdef CUresult cuEventQuery(CUevent hEvent) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuEventQuery(hEvent)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuEventQuery(__pyx_t_4cuda_5ccuda_CUevent __pyx_v_hEvent) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuEventQuery", __pyx_f[0], 574, 1, __PYX_ERR(0, 574, __pyx_L1_error));

  /* "cuda/ccuda.pyx":575
 * 
 * cdef CUresult cuEventQuery(CUevent hEvent) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuEventQuery(hEvent)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuEventSynchronize(CUevent hEvent) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuEventQuery(__pyx_v_hEvent); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 575, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":574
 *     return ccuda._cuEventRecordWithFlags(hEvent, hStream, flags)
 * 
 * cdef CUresult cuEventQuery(CUevent hEvent) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuEventQuery(hEvent)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuEventQuery", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":577
 *     return ccuda._cuEventQuery(hEvent)
 * 
 * cdef CUresult cuEventSynchronize(CUevent hEvent) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuEventSynchronize(hEvent)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuEventSynchronize(__pyx_t_4cuda_5ccuda_CUevent __pyx_v_hEvent) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuEventSynchronize", __pyx_f[0], 577, 1, __PYX_ERR(0, 577, __pyx_L1_error));

  /* "cuda/ccuda.pyx":578
 * 
 * cdef CUresult cuEventSynchronize(CUevent hEvent) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuEventSynchronize(hEvent)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuEventDestroy(CUevent hEvent) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuEventSynchronize(__pyx_v_hEvent); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 578, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":577
 *     return ccuda._cuEventQuery(hEvent)
 * 
 * cdef CUresult cuEventSynchronize(CUevent hEvent) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuEventSynchronize(hEvent)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuEventSynchronize", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":580
 *     return ccuda._cuEventSynchronize(hEvent)
 * 
 * cdef CUresult cuEventDestroy(CUevent hEvent) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuEventDestroy_v2(hEvent)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuEventDestroy(__pyx_t_4cuda_5ccuda_CUevent __pyx_v_hEvent) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuEventDestroy", __pyx_f[0], 580, 1, __PYX_ERR(0, 580, __pyx_L1_error));

  /* "cuda/ccuda.pyx":581
 * 
 * cdef CUresult cuEventDestroy(CUevent hEvent) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuEventDestroy_v2(hEvent)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuEventElapsedTime(float* pMilliseconds, CUevent hStart, CUevent hEnd) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuEventDestroy_v2(__pyx_v_hEvent); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 581, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":580
 *     return ccuda._cuEventSynchronize(hEvent)
 * 
 * cdef CUresult cuEventDestroy(CUevent hEvent) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuEventDestroy_v2(hEvent)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuEventDestroy", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":583
 *     return ccuda._cuEventDestroy_v2(hEvent)
 * 
 * cdef CUresult cuEventElapsedTime(float* pMilliseconds, CUevent hStart, CUevent hEnd) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuEventElapsedTime(pMilliseconds, hStart, hEnd)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuEventElapsedTime(float *__pyx_v_pMilliseconds, __pyx_t_4cuda_5ccuda_CUevent __pyx_v_hStart, __pyx_t_4cuda_5ccuda_CUevent __pyx_v_hEnd) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuEventElapsedTime", __pyx_f[0], 583, 1, __PYX_ERR(0, 583, __pyx_L1_error));

  /* "cuda/ccuda.pyx":584
 * 
 * cdef CUresult cuEventElapsedTime(float* pMilliseconds, CUevent hStart, CUevent hEnd) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuEventElapsedTime(pMilliseconds, hStart, hEnd)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuImportExternalMemory(CUexternalMemory* extMem_out, const CUDA_EXTERNAL_MEMORY_HANDLE_DESC* memHandleDesc) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuEventElapsedTime(__pyx_v_pMilliseconds, __pyx_v_hStart, __pyx_v_hEnd); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 584, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":583
 *     return ccuda._cuEventDestroy_v2(hEvent)
 * 
 * cdef CUresult cuEventElapsedTime(float* pMilliseconds, CUevent hStart, CUevent hEnd) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuEventElapsedTime(pMilliseconds, hStart, hEnd)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuEventElapsedTime", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":586
 *     return ccuda._cuEventElapsedTime(pMilliseconds, hStart, hEnd)
 * 
 * cdef CUresult cuImportExternalMemory(CUexternalMemory* extMem_out, const CUDA_EXTERNAL_MEMORY_HANDLE_DESC* memHandleDesc) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuImportExternalMemory(extMem_out, memHandleDesc)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuImportExternalMemory(__pyx_t_4cuda_5ccuda_CUexternalMemory *__pyx_v_extMem_out, __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_HANDLE_DESC const *__pyx_v_memHandleDesc) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuImportExternalMemory", __pyx_f[0], 586, 1, __PYX_ERR(0, 586, __pyx_L1_error));

  /* "cuda/ccuda.pyx":587
 * 
 * cdef CUresult cuImportExternalMemory(CUexternalMemory* extMem_out, const CUDA_EXTERNAL_MEMORY_HANDLE_DESC* memHandleDesc) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuImportExternalMemory(extMem_out, memHandleDesc)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuExternalMemoryGetMappedBuffer(CUdeviceptr* devPtr, CUexternalMemory extMem, const CUDA_EXTERNAL_MEMORY_BUFFER_DESC* bufferDesc) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuImportExternalMemory(__pyx_v_extMem_out, __pyx_v_memHandleDesc); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 587, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":586
 *     return ccuda._cuEventElapsedTime(pMilliseconds, hStart, hEnd)
 * 
 * cdef CUresult cuImportExternalMemory(CUexternalMemory* extMem_out, const CUDA_EXTERNAL_MEMORY_HANDLE_DESC* memHandleDesc) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuImportExternalMemory(extMem_out, memHandleDesc)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuImportExternalMemory", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":589
 *     return ccuda._cuImportExternalMemory(extMem_out, memHandleDesc)
 * 
 * cdef CUresult cuExternalMemoryGetMappedBuffer(CUdeviceptr* devPtr, CUexternalMemory extMem, const CUDA_EXTERNAL_MEMORY_BUFFER_DESC* bufferDesc) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuExternalMemoryGetMappedBuffer(devPtr, extMem, bufferDesc)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuExternalMemoryGetMappedBuffer(__pyx_t_4cuda_5ccuda_CUdeviceptr *__pyx_v_devPtr, __pyx_t_4cuda_5ccuda_CUexternalMemory __pyx_v_extMem, __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_BUFFER_DESC const *__pyx_v_bufferDesc) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuExternalMemoryGetMappedBuffer", __pyx_f[0], 589, 1, __PYX_ERR(0, 589, __pyx_L1_error));

  /* "cuda/ccuda.pyx":590
 * 
 * cdef CUresult cuExternalMemoryGetMappedBuffer(CUdeviceptr* devPtr, CUexternalMemory extMem, const CUDA_EXTERNAL_MEMORY_BUFFER_DESC* bufferDesc) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuExternalMemoryGetMappedBuffer(devPtr, extMem, bufferDesc)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuExternalMemoryGetMappedMipmappedArray(CUmipmappedArray* mipmap, CUexternalMemory extMem, const CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC* mipmapDesc) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuExternalMemoryGetMappedBuffer(__pyx_v_devPtr, __pyx_v_extMem, __pyx_v_bufferDesc); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 590, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":589
 *     return ccuda._cuImportExternalMemory(extMem_out, memHandleDesc)
 * 
 * cdef CUresult cuExternalMemoryGetMappedBuffer(CUdeviceptr* devPtr, CUexternalMemory extMem, const CUDA_EXTERNAL_MEMORY_BUFFER_DESC* bufferDesc) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuExternalMemoryGetMappedBuffer(devPtr, extMem, bufferDesc)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuExternalMemoryGetMappedBuffer", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":592
 *     return ccuda._cuExternalMemoryGetMappedBuffer(devPtr, extMem, bufferDesc)
 * 
 * cdef CUresult cuExternalMemoryGetMappedMipmappedArray(CUmipmappedArray* mipmap, CUexternalMemory extMem, const CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC* mipmapDesc) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuExternalMemoryGetMappedMipmappedArray(mipmap, extMem, mipmapDesc)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuExternalMemoryGetMappedMipmappedArray(__pyx_t_4cuda_5ccuda_CUmipmappedArray *__pyx_v_mipmap, __pyx_t_4cuda_5ccuda_CUexternalMemory __pyx_v_extMem, __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC const *__pyx_v_mipmapDesc) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuExternalMemoryGetMappedMipmappedArray", __pyx_f[0], 592, 1, __PYX_ERR(0, 592, __pyx_L1_error));

  /* "cuda/ccuda.pyx":593
 * 
 * cdef CUresult cuExternalMemoryGetMappedMipmappedArray(CUmipmappedArray* mipmap, CUexternalMemory extMem, const CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC* mipmapDesc) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuExternalMemoryGetMappedMipmappedArray(mipmap, extMem, mipmapDesc)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDestroyExternalMemory(CUexternalMemory extMem) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuExternalMemoryGetMappedMipmappedArray(__pyx_v_mipmap, __pyx_v_extMem, __pyx_v_mipmapDesc); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 593, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":592
 *     return ccuda._cuExternalMemoryGetMappedBuffer(devPtr, extMem, bufferDesc)
 * 
 * cdef CUresult cuExternalMemoryGetMappedMipmappedArray(CUmipmappedArray* mipmap, CUexternalMemory extMem, const CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC* mipmapDesc) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuExternalMemoryGetMappedMipmappedArray(mipmap, extMem, mipmapDesc)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuExternalMemoryGetMappedMipmappedArray", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":595
 *     return ccuda._cuExternalMemoryGetMappedMipmappedArray(mipmap, extMem, mipmapDesc)
 * 
 * cdef CUresult cuDestroyExternalMemory(CUexternalMemory extMem) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDestroyExternalMemory(extMem)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDestroyExternalMemory(__pyx_t_4cuda_5ccuda_CUexternalMemory __pyx_v_extMem) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDestroyExternalMemory", __pyx_f[0], 595, 1, __PYX_ERR(0, 595, __pyx_L1_error));

  /* "cuda/ccuda.pyx":596
 * 
 * cdef CUresult cuDestroyExternalMemory(CUexternalMemory extMem) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDestroyExternalMemory(extMem)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuImportExternalSemaphore(CUexternalSemaphore* extSem_out, const CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC* semHandleDesc) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDestroyExternalMemory(__pyx_v_extMem); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 596, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":595
 *     return ccuda._cuExternalMemoryGetMappedMipmappedArray(mipmap, extMem, mipmapDesc)
 * 
 * cdef CUresult cuDestroyExternalMemory(CUexternalMemory extMem) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDestroyExternalMemory(extMem)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDestroyExternalMemory", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":598
 *     return ccuda._cuDestroyExternalMemory(extMem)
 * 
 * cdef CUresult cuImportExternalSemaphore(CUexternalSemaphore* extSem_out, const CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC* semHandleDesc) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuImportExternalSemaphore(extSem_out, semHandleDesc)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuImportExternalSemaphore(__pyx_t_4cuda_5ccuda_CUexternalSemaphore *__pyx_v_extSem_out, __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC const *__pyx_v_semHandleDesc) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuImportExternalSemaphore", __pyx_f[0], 598, 1, __PYX_ERR(0, 598, __pyx_L1_error));

  /* "cuda/ccuda.pyx":599
 * 
 * cdef CUresult cuImportExternalSemaphore(CUexternalSemaphore* extSem_out, const CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC* semHandleDesc) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuImportExternalSemaphore(extSem_out, semHandleDesc)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuSignalExternalSemaphoresAsync(const CUexternalSemaphore* extSemArray, const CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS* paramsArray, unsigned int numExtSems, CUstream stream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuImportExternalSemaphore(__pyx_v_extSem_out, __pyx_v_semHandleDesc); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 599, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":598
 *     return ccuda._cuDestroyExternalMemory(extMem)
 * 
 * cdef CUresult cuImportExternalSemaphore(CUexternalSemaphore* extSem_out, const CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC* semHandleDesc) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuImportExternalSemaphore(extSem_out, semHandleDesc)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuImportExternalSemaphore", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":601
 *     return ccuda._cuImportExternalSemaphore(extSem_out, semHandleDesc)
 * 
 * cdef CUresult cuSignalExternalSemaphoresAsync(const CUexternalSemaphore* extSemArray, const CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS* paramsArray, unsigned int numExtSems, CUstream stream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuSignalExternalSemaphoresAsync(extSemArray, paramsArray, numExtSems, stream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuSignalExternalSemaphoresAsync(__pyx_t_4cuda_5ccuda_CUexternalSemaphore const *__pyx_v_extSemArray, __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS const *__pyx_v_paramsArray, unsigned int __pyx_v_numExtSems, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_stream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuSignalExternalSemaphoresAsync", __pyx_f[0], 601, 1, __PYX_ERR(0, 601, __pyx_L1_error));

  /* "cuda/ccuda.pyx":602
 * 
 * cdef CUresult cuSignalExternalSemaphoresAsync(const CUexternalSemaphore* extSemArray, const CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS* paramsArray, unsigned int numExtSems, CUstream stream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuSignalExternalSemaphoresAsync(extSemArray, paramsArray, numExtSems, stream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuWaitExternalSemaphoresAsync(const CUexternalSemaphore* extSemArray, const CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS* paramsArray, unsigned int numExtSems, CUstream stream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuSignalExternalSemaphoresAsync(__pyx_v_extSemArray, __pyx_v_paramsArray, __pyx_v_numExtSems, __pyx_v_stream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 602, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":601
 *     return ccuda._cuImportExternalSemaphore(extSem_out, semHandleDesc)
 * 
 * cdef CUresult cuSignalExternalSemaphoresAsync(const CUexternalSemaphore* extSemArray, const CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS* paramsArray, unsigned int numExtSems, CUstream stream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuSignalExternalSemaphoresAsync(extSemArray, paramsArray, numExtSems, stream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuSignalExternalSemaphoresAsync", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":604
 *     return ccuda._cuSignalExternalSemaphoresAsync(extSemArray, paramsArray, numExtSems, stream)
 * 
 * cdef CUresult cuWaitExternalSemaphoresAsync(const CUexternalSemaphore* extSemArray, const CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS* paramsArray, unsigned int numExtSems, CUstream stream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuWaitExternalSemaphoresAsync(extSemArray, paramsArray, numExtSems, stream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuWaitExternalSemaphoresAsync(__pyx_t_4cuda_5ccuda_CUexternalSemaphore const *__pyx_v_extSemArray, __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS const *__pyx_v_paramsArray, unsigned int __pyx_v_numExtSems, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_stream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuWaitExternalSemaphoresAsync", __pyx_f[0], 604, 1, __PYX_ERR(0, 604, __pyx_L1_error));

  /* "cuda/ccuda.pyx":605
 * 
 * cdef CUresult cuWaitExternalSemaphoresAsync(const CUexternalSemaphore* extSemArray, const CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS* paramsArray, unsigned int numExtSems, CUstream stream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuWaitExternalSemaphoresAsync(extSemArray, paramsArray, numExtSems, stream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDestroyExternalSemaphore(CUexternalSemaphore extSem) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuWaitExternalSemaphoresAsync(__pyx_v_extSemArray, __pyx_v_paramsArray, __pyx_v_numExtSems, __pyx_v_stream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 605, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":604
 *     return ccuda._cuSignalExternalSemaphoresAsync(extSemArray, paramsArray, numExtSems, stream)
 * 
 * cdef CUresult cuWaitExternalSemaphoresAsync(const CUexternalSemaphore* extSemArray, const CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS* paramsArray, unsigned int numExtSems, CUstream stream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuWaitExternalSemaphoresAsync(extSemArray, paramsArray, numExtSems, stream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuWaitExternalSemaphoresAsync", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":607
 *     return ccuda._cuWaitExternalSemaphoresAsync(extSemArray, paramsArray, numExtSems, stream)
 * 
 * cdef CUresult cuDestroyExternalSemaphore(CUexternalSemaphore extSem) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDestroyExternalSemaphore(extSem)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDestroyExternalSemaphore(__pyx_t_4cuda_5ccuda_CUexternalSemaphore __pyx_v_extSem) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDestroyExternalSemaphore", __pyx_f[0], 607, 1, __PYX_ERR(0, 607, __pyx_L1_error));

  /* "cuda/ccuda.pyx":608
 * 
 * cdef CUresult cuDestroyExternalSemaphore(CUexternalSemaphore extSem) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDestroyExternalSemaphore(extSem)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuStreamWaitValue32(CUstream stream, CUdeviceptr addr, cuuint32_t value, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDestroyExternalSemaphore(__pyx_v_extSem); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 608, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":607
 *     return ccuda._cuWaitExternalSemaphoresAsync(extSemArray, paramsArray, numExtSems, stream)
 * 
 * cdef CUresult cuDestroyExternalSemaphore(CUexternalSemaphore extSem) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDestroyExternalSemaphore(extSem)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDestroyExternalSemaphore", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":610
 *     return ccuda._cuDestroyExternalSemaphore(extSem)
 * 
 * cdef CUresult cuStreamWaitValue32(CUstream stream, CUdeviceptr addr, cuuint32_t value, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamWaitValue32(stream, addr, value, flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuStreamWaitValue32(__pyx_t_4cuda_5ccuda_CUstream __pyx_v_stream, __pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_addr, __pyx_t_4cuda_5ccuda_cuuint32_t __pyx_v_value, unsigned int __pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuStreamWaitValue32", __pyx_f[0], 610, 1, __PYX_ERR(0, 610, __pyx_L1_error));

  /* "cuda/ccuda.pyx":611
 * 
 * cdef CUresult cuStreamWaitValue32(CUstream stream, CUdeviceptr addr, cuuint32_t value, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuStreamWaitValue32(stream, addr, value, flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuStreamWaitValue64(CUstream stream, CUdeviceptr addr, cuuint64_t value, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuStreamWaitValue32(__pyx_v_stream, __pyx_v_addr, __pyx_v_value, __pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 611, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":610
 *     return ccuda._cuDestroyExternalSemaphore(extSem)
 * 
 * cdef CUresult cuStreamWaitValue32(CUstream stream, CUdeviceptr addr, cuuint32_t value, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamWaitValue32(stream, addr, value, flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuStreamWaitValue32", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":613
 *     return ccuda._cuStreamWaitValue32(stream, addr, value, flags)
 * 
 * cdef CUresult cuStreamWaitValue64(CUstream stream, CUdeviceptr addr, cuuint64_t value, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamWaitValue64(stream, addr, value, flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuStreamWaitValue64(__pyx_t_4cuda_5ccuda_CUstream __pyx_v_stream, __pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_addr, __pyx_t_4cuda_5ccuda_cuuint64_t __pyx_v_value, unsigned int __pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuStreamWaitValue64", __pyx_f[0], 613, 1, __PYX_ERR(0, 613, __pyx_L1_error));

  /* "cuda/ccuda.pyx":614
 * 
 * cdef CUresult cuStreamWaitValue64(CUstream stream, CUdeviceptr addr, cuuint64_t value, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuStreamWaitValue64(stream, addr, value, flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuStreamWriteValue32(CUstream stream, CUdeviceptr addr, cuuint32_t value, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuStreamWaitValue64(__pyx_v_stream, __pyx_v_addr, __pyx_v_value, __pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 614, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":613
 *     return ccuda._cuStreamWaitValue32(stream, addr, value, flags)
 * 
 * cdef CUresult cuStreamWaitValue64(CUstream stream, CUdeviceptr addr, cuuint64_t value, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamWaitValue64(stream, addr, value, flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuStreamWaitValue64", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":616
 *     return ccuda._cuStreamWaitValue64(stream, addr, value, flags)
 * 
 * cdef CUresult cuStreamWriteValue32(CUstream stream, CUdeviceptr addr, cuuint32_t value, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamWriteValue32(stream, addr, value, flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuStreamWriteValue32(__pyx_t_4cuda_5ccuda_CUstream __pyx_v_stream, __pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_addr, __pyx_t_4cuda_5ccuda_cuuint32_t __pyx_v_value, unsigned int __pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuStreamWriteValue32", __pyx_f[0], 616, 1, __PYX_ERR(0, 616, __pyx_L1_error));

  /* "cuda/ccuda.pyx":617
 * 
 * cdef CUresult cuStreamWriteValue32(CUstream stream, CUdeviceptr addr, cuuint32_t value, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuStreamWriteValue32(stream, addr, value, flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuStreamWriteValue64(CUstream stream, CUdeviceptr addr, cuuint64_t value, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuStreamWriteValue32(__pyx_v_stream, __pyx_v_addr, __pyx_v_value, __pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 617, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":616
 *     return ccuda._cuStreamWaitValue64(stream, addr, value, flags)
 * 
 * cdef CUresult cuStreamWriteValue32(CUstream stream, CUdeviceptr addr, cuuint32_t value, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamWriteValue32(stream, addr, value, flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuStreamWriteValue32", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":619
 *     return ccuda._cuStreamWriteValue32(stream, addr, value, flags)
 * 
 * cdef CUresult cuStreamWriteValue64(CUstream stream, CUdeviceptr addr, cuuint64_t value, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamWriteValue64(stream, addr, value, flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuStreamWriteValue64(__pyx_t_4cuda_5ccuda_CUstream __pyx_v_stream, __pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_addr, __pyx_t_4cuda_5ccuda_cuuint64_t __pyx_v_value, unsigned int __pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuStreamWriteValue64", __pyx_f[0], 619, 1, __PYX_ERR(0, 619, __pyx_L1_error));

  /* "cuda/ccuda.pyx":620
 * 
 * cdef CUresult cuStreamWriteValue64(CUstream stream, CUdeviceptr addr, cuuint64_t value, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuStreamWriteValue64(stream, addr, value, flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuStreamBatchMemOp(CUstream stream, unsigned int count, CUstreamBatchMemOpParams* paramArray, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuStreamWriteValue64(__pyx_v_stream, __pyx_v_addr, __pyx_v_value, __pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 620, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":619
 *     return ccuda._cuStreamWriteValue32(stream, addr, value, flags)
 * 
 * cdef CUresult cuStreamWriteValue64(CUstream stream, CUdeviceptr addr, cuuint64_t value, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamWriteValue64(stream, addr, value, flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuStreamWriteValue64", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":622
 *     return ccuda._cuStreamWriteValue64(stream, addr, value, flags)
 * 
 * cdef CUresult cuStreamBatchMemOp(CUstream stream, unsigned int count, CUstreamBatchMemOpParams* paramArray, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamBatchMemOp(stream, count, paramArray, flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuStreamBatchMemOp(__pyx_t_4cuda_5ccuda_CUstream __pyx_v_stream, unsigned int __pyx_v_count, __pyx_t_4cuda_5ccuda_CUstreamBatchMemOpParams *__pyx_v_paramArray, unsigned int __pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuStreamBatchMemOp", __pyx_f[0], 622, 1, __PYX_ERR(0, 622, __pyx_L1_error));

  /* "cuda/ccuda.pyx":623
 * 
 * cdef CUresult cuStreamBatchMemOp(CUstream stream, unsigned int count, CUstreamBatchMemOpParams* paramArray, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuStreamBatchMemOp(stream, count, paramArray, flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuFuncGetAttribute(int* pi, CUfunction_attribute attrib, CUfunction hfunc) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuStreamBatchMemOp(__pyx_v_stream, __pyx_v_count, __pyx_v_paramArray, __pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 623, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":622
 *     return ccuda._cuStreamWriteValue64(stream, addr, value, flags)
 * 
 * cdef CUresult cuStreamBatchMemOp(CUstream stream, unsigned int count, CUstreamBatchMemOpParams* paramArray, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuStreamBatchMemOp(stream, count, paramArray, flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuStreamBatchMemOp", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":625
 *     return ccuda._cuStreamBatchMemOp(stream, count, paramArray, flags)
 * 
 * cdef CUresult cuFuncGetAttribute(int* pi, CUfunction_attribute attrib, CUfunction hfunc) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuFuncGetAttribute(pi, attrib, hfunc)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuFuncGetAttribute(int *__pyx_v_pi, __pyx_t_4cuda_5ccuda_CUfunction_attribute __pyx_v_attrib, __pyx_t_4cuda_5ccuda_CUfunction __pyx_v_hfunc) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuFuncGetAttribute", __pyx_f[0], 625, 1, __PYX_ERR(0, 625, __pyx_L1_error));

  /* "cuda/ccuda.pyx":626
 * 
 * cdef CUresult cuFuncGetAttribute(int* pi, CUfunction_attribute attrib, CUfunction hfunc) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuFuncGetAttribute(pi, attrib, hfunc)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuFuncSetAttribute(CUfunction hfunc, CUfunction_attribute attrib, int value) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuFuncGetAttribute(__pyx_v_pi, __pyx_v_attrib, __pyx_v_hfunc); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 626, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":625
 *     return ccuda._cuStreamBatchMemOp(stream, count, paramArray, flags)
 * 
 * cdef CUresult cuFuncGetAttribute(int* pi, CUfunction_attribute attrib, CUfunction hfunc) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuFuncGetAttribute(pi, attrib, hfunc)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuFuncGetAttribute", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":628
 *     return ccuda._cuFuncGetAttribute(pi, attrib, hfunc)
 * 
 * cdef CUresult cuFuncSetAttribute(CUfunction hfunc, CUfunction_attribute attrib, int value) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuFuncSetAttribute(hfunc, attrib, value)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuFuncSetAttribute(__pyx_t_4cuda_5ccuda_CUfunction __pyx_v_hfunc, __pyx_t_4cuda_5ccuda_CUfunction_attribute __pyx_v_attrib, int __pyx_v_value) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuFuncSetAttribute", __pyx_f[0], 628, 1, __PYX_ERR(0, 628, __pyx_L1_error));

  /* "cuda/ccuda.pyx":629
 * 
 * cdef CUresult cuFuncSetAttribute(CUfunction hfunc, CUfunction_attribute attrib, int value) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuFuncSetAttribute(hfunc, attrib, value)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuFuncSetCacheConfig(CUfunction hfunc, CUfunc_cache config) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuFuncSetAttribute(__pyx_v_hfunc, __pyx_v_attrib, __pyx_v_value); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 629, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":628
 *     return ccuda._cuFuncGetAttribute(pi, attrib, hfunc)
 * 
 * cdef CUresult cuFuncSetAttribute(CUfunction hfunc, CUfunction_attribute attrib, int value) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuFuncSetAttribute(hfunc, attrib, value)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuFuncSetAttribute", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":631
 *     return ccuda._cuFuncSetAttribute(hfunc, attrib, value)
 * 
 * cdef CUresult cuFuncSetCacheConfig(CUfunction hfunc, CUfunc_cache config) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuFuncSetCacheConfig(hfunc, config)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuFuncSetCacheConfig(__pyx_t_4cuda_5ccuda_CUfunction __pyx_v_hfunc, __pyx_t_4cuda_5ccuda_CUfunc_cache __pyx_v_config) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuFuncSetCacheConfig", __pyx_f[0], 631, 1, __PYX_ERR(0, 631, __pyx_L1_error));

  /* "cuda/ccuda.pyx":632
 * 
 * cdef CUresult cuFuncSetCacheConfig(CUfunction hfunc, CUfunc_cache config) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuFuncSetCacheConfig(hfunc, config)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuFuncSetSharedMemConfig(CUfunction hfunc, CUsharedconfig config) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuFuncSetCacheConfig(__pyx_v_hfunc, __pyx_v_config); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 632, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":631
 *     return ccuda._cuFuncSetAttribute(hfunc, attrib, value)
 * 
 * cdef CUresult cuFuncSetCacheConfig(CUfunction hfunc, CUfunc_cache config) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuFuncSetCacheConfig(hfunc, config)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuFuncSetCacheConfig", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":634
 *     return ccuda._cuFuncSetCacheConfig(hfunc, config)
 * 
 * cdef CUresult cuFuncSetSharedMemConfig(CUfunction hfunc, CUsharedconfig config) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuFuncSetSharedMemConfig(hfunc, config)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuFuncSetSharedMemConfig(__pyx_t_4cuda_5ccuda_CUfunction __pyx_v_hfunc, __pyx_t_4cuda_5ccuda_CUsharedconfig __pyx_v_config) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuFuncSetSharedMemConfig", __pyx_f[0], 634, 1, __PYX_ERR(0, 634, __pyx_L1_error));

  /* "cuda/ccuda.pyx":635
 * 
 * cdef CUresult cuFuncSetSharedMemConfig(CUfunction hfunc, CUsharedconfig config) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuFuncSetSharedMemConfig(hfunc, config)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuFuncGetModule(CUmodule* hmod, CUfunction hfunc) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuFuncSetSharedMemConfig(__pyx_v_hfunc, __pyx_v_config); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 635, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":634
 *     return ccuda._cuFuncSetCacheConfig(hfunc, config)
 * 
 * cdef CUresult cuFuncSetSharedMemConfig(CUfunction hfunc, CUsharedconfig config) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuFuncSetSharedMemConfig(hfunc, config)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuFuncSetSharedMemConfig", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":637
 *     return ccuda._cuFuncSetSharedMemConfig(hfunc, config)
 * 
 * cdef CUresult cuFuncGetModule(CUmodule* hmod, CUfunction hfunc) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuFuncGetModule(hmod, hfunc)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuFuncGetModule(__pyx_t_4cuda_5ccuda_CUmodule *__pyx_v_hmod, __pyx_t_4cuda_5ccuda_CUfunction __pyx_v_hfunc) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuFuncGetModule", __pyx_f[0], 637, 1, __PYX_ERR(0, 637, __pyx_L1_error));

  /* "cuda/ccuda.pyx":638
 * 
 * cdef CUresult cuFuncGetModule(CUmodule* hmod, CUfunction hfunc) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuFuncGetModule(hmod, hfunc)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuLaunchKernel(CUfunction f, unsigned int gridDimX, unsigned int gridDimY, unsigned int gridDimZ, unsigned int blockDimX, unsigned int blockDimY, unsigned int blockDimZ, unsigned int sharedMemBytes, CUstream hStream, void** kernelParams, void** extra) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuFuncGetModule(__pyx_v_hmod, __pyx_v_hfunc); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 638, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":637
 *     return ccuda._cuFuncSetSharedMemConfig(hfunc, config)
 * 
 * cdef CUresult cuFuncGetModule(CUmodule* hmod, CUfunction hfunc) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuFuncGetModule(hmod, hfunc)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuFuncGetModule", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":640
 *     return ccuda._cuFuncGetModule(hmod, hfunc)
 * 
 * cdef CUresult cuLaunchKernel(CUfunction f, unsigned int gridDimX, unsigned int gridDimY, unsigned int gridDimZ, unsigned int blockDimX, unsigned int blockDimY, unsigned int blockDimZ, unsigned int sharedMemBytes, CUstream hStream, void** kernelParams, void** extra) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuLaunchKernel(f, gridDimX, gridDimY, gridDimZ, blockDimX, blockDimY, blockDimZ, sharedMemBytes, hStream, kernelParams, extra)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuLaunchKernel(__pyx_t_4cuda_5ccuda_CUfunction __pyx_v_f, unsigned int __pyx_v_gridDimX, unsigned int __pyx_v_gridDimY, unsigned int __pyx_v_gridDimZ, unsigned int __pyx_v_blockDimX, unsigned int __pyx_v_blockDimY, unsigned int __pyx_v_blockDimZ, unsigned int __pyx_v_sharedMemBytes, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream, void **__pyx_v_kernelParams, void **__pyx_v_extra) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuLaunchKernel", __pyx_f[0], 640, 1, __PYX_ERR(0, 640, __pyx_L1_error));

  /* "cuda/ccuda.pyx":641
 * 
 * cdef CUresult cuLaunchKernel(CUfunction f, unsigned int gridDimX, unsigned int gridDimY, unsigned int gridDimZ, unsigned int blockDimX, unsigned int blockDimY, unsigned int blockDimZ, unsigned int sharedMemBytes, CUstream hStream, void** kernelParams, void** extra) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuLaunchKernel(f, gridDimX, gridDimY, gridDimZ, blockDimX, blockDimY, blockDimZ, sharedMemBytes, hStream, kernelParams, extra)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuLaunchCooperativeKernel(CUfunction f, unsigned int gridDimX, unsigned int gridDimY, unsigned int gridDimZ, unsigned int blockDimX, unsigned int blockDimY, unsigned int blockDimZ, unsigned int sharedMemBytes, CUstream hStream, void** kernelParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuLaunchKernel(__pyx_v_f, __pyx_v_gridDimX, __pyx_v_gridDimY, __pyx_v_gridDimZ, __pyx_v_blockDimX, __pyx_v_blockDimY, __pyx_v_blockDimZ, __pyx_v_sharedMemBytes, __pyx_v_hStream, __pyx_v_kernelParams, __pyx_v_extra); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 641, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":640
 *     return ccuda._cuFuncGetModule(hmod, hfunc)
 * 
 * cdef CUresult cuLaunchKernel(CUfunction f, unsigned int gridDimX, unsigned int gridDimY, unsigned int gridDimZ, unsigned int blockDimX, unsigned int blockDimY, unsigned int blockDimZ, unsigned int sharedMemBytes, CUstream hStream, void** kernelParams, void** extra) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuLaunchKernel(f, gridDimX, gridDimY, gridDimZ, blockDimX, blockDimY, blockDimZ, sharedMemBytes, hStream, kernelParams, extra)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuLaunchKernel", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":643
 *     return ccuda._cuLaunchKernel(f, gridDimX, gridDimY, gridDimZ, blockDimX, blockDimY, blockDimZ, sharedMemBytes, hStream, kernelParams, extra)
 * 
 * cdef CUresult cuLaunchCooperativeKernel(CUfunction f, unsigned int gridDimX, unsigned int gridDimY, unsigned int gridDimZ, unsigned int blockDimX, unsigned int blockDimY, unsigned int blockDimZ, unsigned int sharedMemBytes, CUstream hStream, void** kernelParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuLaunchCooperativeKernel(f, gridDimX, gridDimY, gridDimZ, blockDimX, blockDimY, blockDimZ, sharedMemBytes, hStream, kernelParams)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuLaunchCooperativeKernel(__pyx_t_4cuda_5ccuda_CUfunction __pyx_v_f, unsigned int __pyx_v_gridDimX, unsigned int __pyx_v_gridDimY, unsigned int __pyx_v_gridDimZ, unsigned int __pyx_v_blockDimX, unsigned int __pyx_v_blockDimY, unsigned int __pyx_v_blockDimZ, unsigned int __pyx_v_sharedMemBytes, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream, void **__pyx_v_kernelParams) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuLaunchCooperativeKernel", __pyx_f[0], 643, 1, __PYX_ERR(0, 643, __pyx_L1_error));

  /* "cuda/ccuda.pyx":644
 * 
 * cdef CUresult cuLaunchCooperativeKernel(CUfunction f, unsigned int gridDimX, unsigned int gridDimY, unsigned int gridDimZ, unsigned int blockDimX, unsigned int blockDimY, unsigned int blockDimZ, unsigned int sharedMemBytes, CUstream hStream, void** kernelParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuLaunchCooperativeKernel(f, gridDimX, gridDimY, gridDimZ, blockDimX, blockDimY, blockDimZ, sharedMemBytes, hStream, kernelParams)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuLaunchCooperativeKernelMultiDevice(CUDA_LAUNCH_PARAMS* launchParamsList, unsigned int numDevices, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuLaunchCooperativeKernel(__pyx_v_f, __pyx_v_gridDimX, __pyx_v_gridDimY, __pyx_v_gridDimZ, __pyx_v_blockDimX, __pyx_v_blockDimY, __pyx_v_blockDimZ, __pyx_v_sharedMemBytes, __pyx_v_hStream, __pyx_v_kernelParams); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 644, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":643
 *     return ccuda._cuLaunchKernel(f, gridDimX, gridDimY, gridDimZ, blockDimX, blockDimY, blockDimZ, sharedMemBytes, hStream, kernelParams, extra)
 * 
 * cdef CUresult cuLaunchCooperativeKernel(CUfunction f, unsigned int gridDimX, unsigned int gridDimY, unsigned int gridDimZ, unsigned int blockDimX, unsigned int blockDimY, unsigned int blockDimZ, unsigned int sharedMemBytes, CUstream hStream, void** kernelParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuLaunchCooperativeKernel(f, gridDimX, gridDimY, gridDimZ, blockDimX, blockDimY, blockDimZ, sharedMemBytes, hStream, kernelParams)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuLaunchCooperativeKernel", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":646
 *     return ccuda._cuLaunchCooperativeKernel(f, gridDimX, gridDimY, gridDimZ, blockDimX, blockDimY, blockDimZ, sharedMemBytes, hStream, kernelParams)
 * 
 * cdef CUresult cuLaunchCooperativeKernelMultiDevice(CUDA_LAUNCH_PARAMS* launchParamsList, unsigned int numDevices, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuLaunchCooperativeKernelMultiDevice(launchParamsList, numDevices, flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuLaunchCooperativeKernelMultiDevice(__pyx_t_4cuda_5ccuda_CUDA_LAUNCH_PARAMS *__pyx_v_launchParamsList, unsigned int __pyx_v_numDevices, unsigned int __pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuLaunchCooperativeKernelMultiDevice", __pyx_f[0], 646, 1, __PYX_ERR(0, 646, __pyx_L1_error));

  /* "cuda/ccuda.pyx":647
 * 
 * cdef CUresult cuLaunchCooperativeKernelMultiDevice(CUDA_LAUNCH_PARAMS* launchParamsList, unsigned int numDevices, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuLaunchCooperativeKernelMultiDevice(launchParamsList, numDevices, flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuLaunchHostFunc(CUstream hStream, CUhostFn fn, void* userData) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuLaunchCooperativeKernelMultiDevice(__pyx_v_launchParamsList, __pyx_v_numDevices, __pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 647, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":646
 *     return ccuda._cuLaunchCooperativeKernel(f, gridDimX, gridDimY, gridDimZ, blockDimX, blockDimY, blockDimZ, sharedMemBytes, hStream, kernelParams)
 * 
 * cdef CUresult cuLaunchCooperativeKernelMultiDevice(CUDA_LAUNCH_PARAMS* launchParamsList, unsigned int numDevices, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuLaunchCooperativeKernelMultiDevice(launchParamsList, numDevices, flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuLaunchCooperativeKernelMultiDevice", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":649
 *     return ccuda._cuLaunchCooperativeKernelMultiDevice(launchParamsList, numDevices, flags)
 * 
 * cdef CUresult cuLaunchHostFunc(CUstream hStream, CUhostFn fn, void* userData) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuLaunchHostFunc(hStream, fn, userData)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuLaunchHostFunc(__pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream, __pyx_t_4cuda_5ccuda_CUhostFn __pyx_v_fn, void *__pyx_v_userData) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuLaunchHostFunc", __pyx_f[0], 649, 1, __PYX_ERR(0, 649, __pyx_L1_error));

  /* "cuda/ccuda.pyx":650
 * 
 * cdef CUresult cuLaunchHostFunc(CUstream hStream, CUhostFn fn, void* userData) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuLaunchHostFunc(hStream, fn, userData)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuFuncSetBlockShape(CUfunction hfunc, int x, int y, int z) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuLaunchHostFunc(__pyx_v_hStream, __pyx_v_fn, __pyx_v_userData); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 650, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":649
 *     return ccuda._cuLaunchCooperativeKernelMultiDevice(launchParamsList, numDevices, flags)
 * 
 * cdef CUresult cuLaunchHostFunc(CUstream hStream, CUhostFn fn, void* userData) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuLaunchHostFunc(hStream, fn, userData)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuLaunchHostFunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":652
 *     return ccuda._cuLaunchHostFunc(hStream, fn, userData)
 * 
 * cdef CUresult cuFuncSetBlockShape(CUfunction hfunc, int x, int y, int z) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuFuncSetBlockShape(hfunc, x, y, z)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuFuncSetBlockShape(__pyx_t_4cuda_5ccuda_CUfunction __pyx_v_hfunc, int __pyx_v_x, int __pyx_v_y, int __pyx_v_z) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuFuncSetBlockShape", __pyx_f[0], 652, 1, __PYX_ERR(0, 652, __pyx_L1_error));

  /* "cuda/ccuda.pyx":653
 * 
 * cdef CUresult cuFuncSetBlockShape(CUfunction hfunc, int x, int y, int z) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuFuncSetBlockShape(hfunc, x, y, z)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuFuncSetSharedSize(CUfunction hfunc, unsigned int numbytes) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuFuncSetBlockShape(__pyx_v_hfunc, __pyx_v_x, __pyx_v_y, __pyx_v_z); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 653, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":652
 *     return ccuda._cuLaunchHostFunc(hStream, fn, userData)
 * 
 * cdef CUresult cuFuncSetBlockShape(CUfunction hfunc, int x, int y, int z) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuFuncSetBlockShape(hfunc, x, y, z)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuFuncSetBlockShape", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":655
 *     return ccuda._cuFuncSetBlockShape(hfunc, x, y, z)
 * 
 * cdef CUresult cuFuncSetSharedSize(CUfunction hfunc, unsigned int numbytes) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuFuncSetSharedSize(hfunc, numbytes)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuFuncSetSharedSize(__pyx_t_4cuda_5ccuda_CUfunction __pyx_v_hfunc, unsigned int __pyx_v_numbytes) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuFuncSetSharedSize", __pyx_f[0], 655, 1, __PYX_ERR(0, 655, __pyx_L1_error));

  /* "cuda/ccuda.pyx":656
 * 
 * cdef CUresult cuFuncSetSharedSize(CUfunction hfunc, unsigned int numbytes) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuFuncSetSharedSize(hfunc, numbytes)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuParamSetSize(CUfunction hfunc, unsigned int numbytes) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuFuncSetSharedSize(__pyx_v_hfunc, __pyx_v_numbytes); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 656, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":655
 *     return ccuda._cuFuncSetBlockShape(hfunc, x, y, z)
 * 
 * cdef CUresult cuFuncSetSharedSize(CUfunction hfunc, unsigned int numbytes) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuFuncSetSharedSize(hfunc, numbytes)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuFuncSetSharedSize", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":658
 *     return ccuda._cuFuncSetSharedSize(hfunc, numbytes)
 * 
 * cdef CUresult cuParamSetSize(CUfunction hfunc, unsigned int numbytes) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuParamSetSize(hfunc, numbytes)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuParamSetSize(__pyx_t_4cuda_5ccuda_CUfunction __pyx_v_hfunc, unsigned int __pyx_v_numbytes) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuParamSetSize", __pyx_f[0], 658, 1, __PYX_ERR(0, 658, __pyx_L1_error));

  /* "cuda/ccuda.pyx":659
 * 
 * cdef CUresult cuParamSetSize(CUfunction hfunc, unsigned int numbytes) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuParamSetSize(hfunc, numbytes)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuParamSeti(CUfunction hfunc, int offset, unsigned int value) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuParamSetSize(__pyx_v_hfunc, __pyx_v_numbytes); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 659, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":658
 *     return ccuda._cuFuncSetSharedSize(hfunc, numbytes)
 * 
 * cdef CUresult cuParamSetSize(CUfunction hfunc, unsigned int numbytes) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuParamSetSize(hfunc, numbytes)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuParamSetSize", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":661
 *     return ccuda._cuParamSetSize(hfunc, numbytes)
 * 
 * cdef CUresult cuParamSeti(CUfunction hfunc, int offset, unsigned int value) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuParamSeti(hfunc, offset, value)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuParamSeti(__pyx_t_4cuda_5ccuda_CUfunction __pyx_v_hfunc, int __pyx_v_offset, unsigned int __pyx_v_value) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuParamSeti", __pyx_f[0], 661, 1, __PYX_ERR(0, 661, __pyx_L1_error));

  /* "cuda/ccuda.pyx":662
 * 
 * cdef CUresult cuParamSeti(CUfunction hfunc, int offset, unsigned int value) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuParamSeti(hfunc, offset, value)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuParamSetf(CUfunction hfunc, int offset, float value) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuParamSeti(__pyx_v_hfunc, __pyx_v_offset, __pyx_v_value); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 662, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":661
 *     return ccuda._cuParamSetSize(hfunc, numbytes)
 * 
 * cdef CUresult cuParamSeti(CUfunction hfunc, int offset, unsigned int value) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuParamSeti(hfunc, offset, value)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuParamSeti", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":664
 *     return ccuda._cuParamSeti(hfunc, offset, value)
 * 
 * cdef CUresult cuParamSetf(CUfunction hfunc, int offset, float value) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuParamSetf(hfunc, offset, value)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuParamSetf(__pyx_t_4cuda_5ccuda_CUfunction __pyx_v_hfunc, int __pyx_v_offset, float __pyx_v_value) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuParamSetf", __pyx_f[0], 664, 1, __PYX_ERR(0, 664, __pyx_L1_error));

  /* "cuda/ccuda.pyx":665
 * 
 * cdef CUresult cuParamSetf(CUfunction hfunc, int offset, float value) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuParamSetf(hfunc, offset, value)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuParamSetv(CUfunction hfunc, int offset, void* ptr, unsigned int numbytes) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuParamSetf(__pyx_v_hfunc, __pyx_v_offset, __pyx_v_value); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 665, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":664
 *     return ccuda._cuParamSeti(hfunc, offset, value)
 * 
 * cdef CUresult cuParamSetf(CUfunction hfunc, int offset, float value) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuParamSetf(hfunc, offset, value)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuParamSetf", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":667
 *     return ccuda._cuParamSetf(hfunc, offset, value)
 * 
 * cdef CUresult cuParamSetv(CUfunction hfunc, int offset, void* ptr, unsigned int numbytes) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuParamSetv(hfunc, offset, ptr, numbytes)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuParamSetv(__pyx_t_4cuda_5ccuda_CUfunction __pyx_v_hfunc, int __pyx_v_offset, void *__pyx_v_ptr, unsigned int __pyx_v_numbytes) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuParamSetv", __pyx_f[0], 667, 1, __PYX_ERR(0, 667, __pyx_L1_error));

  /* "cuda/ccuda.pyx":668
 * 
 * cdef CUresult cuParamSetv(CUfunction hfunc, int offset, void* ptr, unsigned int numbytes) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuParamSetv(hfunc, offset, ptr, numbytes)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuLaunch(CUfunction f) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuParamSetv(__pyx_v_hfunc, __pyx_v_offset, __pyx_v_ptr, __pyx_v_numbytes); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 668, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":667
 *     return ccuda._cuParamSetf(hfunc, offset, value)
 * 
 * cdef CUresult cuParamSetv(CUfunction hfunc, int offset, void* ptr, unsigned int numbytes) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuParamSetv(hfunc, offset, ptr, numbytes)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuParamSetv", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":670
 *     return ccuda._cuParamSetv(hfunc, offset, ptr, numbytes)
 * 
 * cdef CUresult cuLaunch(CUfunction f) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuLaunch(f)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuLaunch(__pyx_t_4cuda_5ccuda_CUfunction __pyx_v_f) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuLaunch", __pyx_f[0], 670, 1, __PYX_ERR(0, 670, __pyx_L1_error));

  /* "cuda/ccuda.pyx":671
 * 
 * cdef CUresult cuLaunch(CUfunction f) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuLaunch(f)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuLaunchGrid(CUfunction f, int grid_width, int grid_height) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuLaunch(__pyx_v_f); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 671, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":670
 *     return ccuda._cuParamSetv(hfunc, offset, ptr, numbytes)
 * 
 * cdef CUresult cuLaunch(CUfunction f) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuLaunch(f)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuLaunch", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":673
 *     return ccuda._cuLaunch(f)
 * 
 * cdef CUresult cuLaunchGrid(CUfunction f, int grid_width, int grid_height) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuLaunchGrid(f, grid_width, grid_height)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuLaunchGrid(__pyx_t_4cuda_5ccuda_CUfunction __pyx_v_f, int __pyx_v_grid_width, int __pyx_v_grid_height) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuLaunchGrid", __pyx_f[0], 673, 1, __PYX_ERR(0, 673, __pyx_L1_error));

  /* "cuda/ccuda.pyx":674
 * 
 * cdef CUresult cuLaunchGrid(CUfunction f, int grid_width, int grid_height) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuLaunchGrid(f, grid_width, grid_height)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuLaunchGridAsync(CUfunction f, int grid_width, int grid_height, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuLaunchGrid(__pyx_v_f, __pyx_v_grid_width, __pyx_v_grid_height); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 674, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":673
 *     return ccuda._cuLaunch(f)
 * 
 * cdef CUresult cuLaunchGrid(CUfunction f, int grid_width, int grid_height) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuLaunchGrid(f, grid_width, grid_height)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuLaunchGrid", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":676
 *     return ccuda._cuLaunchGrid(f, grid_width, grid_height)
 * 
 * cdef CUresult cuLaunchGridAsync(CUfunction f, int grid_width, int grid_height, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuLaunchGridAsync(f, grid_width, grid_height, hStream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuLaunchGridAsync(__pyx_t_4cuda_5ccuda_CUfunction __pyx_v_f, int __pyx_v_grid_width, int __pyx_v_grid_height, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuLaunchGridAsync", __pyx_f[0], 676, 1, __PYX_ERR(0, 676, __pyx_L1_error));

  /* "cuda/ccuda.pyx":677
 * 
 * cdef CUresult cuLaunchGridAsync(CUfunction f, int grid_width, int grid_height, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuLaunchGridAsync(f, grid_width, grid_height, hStream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuParamSetTexRef(CUfunction hfunc, int texunit, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuLaunchGridAsync(__pyx_v_f, __pyx_v_grid_width, __pyx_v_grid_height, __pyx_v_hStream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 677, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":676
 *     return ccuda._cuLaunchGrid(f, grid_width, grid_height)
 * 
 * cdef CUresult cuLaunchGridAsync(CUfunction f, int grid_width, int grid_height, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuLaunchGridAsync(f, grid_width, grid_height, hStream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuLaunchGridAsync", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":679
 *     return ccuda._cuLaunchGridAsync(f, grid_width, grid_height, hStream)
 * 
 * cdef CUresult cuParamSetTexRef(CUfunction hfunc, int texunit, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuParamSetTexRef(hfunc, texunit, hTexRef)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuParamSetTexRef(__pyx_t_4cuda_5ccuda_CUfunction __pyx_v_hfunc, int __pyx_v_texunit, __pyx_t_4cuda_5ccuda_CUtexref __pyx_v_hTexRef) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuParamSetTexRef", __pyx_f[0], 679, 1, __PYX_ERR(0, 679, __pyx_L1_error));

  /* "cuda/ccuda.pyx":680
 * 
 * cdef CUresult cuParamSetTexRef(CUfunction hfunc, int texunit, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuParamSetTexRef(hfunc, texunit, hTexRef)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphCreate(CUgraph* phGraph, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuParamSetTexRef(__pyx_v_hfunc, __pyx_v_texunit, __pyx_v_hTexRef); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 680, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":679
 *     return ccuda._cuLaunchGridAsync(f, grid_width, grid_height, hStream)
 * 
 * cdef CUresult cuParamSetTexRef(CUfunction hfunc, int texunit, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuParamSetTexRef(hfunc, texunit, hTexRef)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuParamSetTexRef", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":682
 *     return ccuda._cuParamSetTexRef(hfunc, texunit, hTexRef)
 * 
 * cdef CUresult cuGraphCreate(CUgraph* phGraph, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphCreate(phGraph, flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphCreate(__pyx_t_4cuda_5ccuda_CUgraph *__pyx_v_phGraph, unsigned int __pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphCreate", __pyx_f[0], 682, 1, __PYX_ERR(0, 682, __pyx_L1_error));

  /* "cuda/ccuda.pyx":683
 * 
 * cdef CUresult cuGraphCreate(CUgraph* phGraph, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphCreate(phGraph, flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphAddKernelNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, const CUDA_KERNEL_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphCreate(__pyx_v_phGraph, __pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 683, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":682
 *     return ccuda._cuParamSetTexRef(hfunc, texunit, hTexRef)
 * 
 * cdef CUresult cuGraphCreate(CUgraph* phGraph, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphCreate(phGraph, flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphCreate", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":685
 *     return ccuda._cuGraphCreate(phGraph, flags)
 * 
 * cdef CUresult cuGraphAddKernelNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, const CUDA_KERNEL_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphAddKernelNode(phGraphNode, hGraph, dependencies, numDependencies, nodeParams)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphAddKernelNode(__pyx_t_4cuda_5ccuda_CUgraphNode *__pyx_v_phGraphNode, __pyx_t_4cuda_5ccuda_CUgraph __pyx_v_hGraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *__pyx_v_dependencies, size_t __pyx_v_numDependencies, __pyx_t_4cuda_5ccuda_CUDA_KERNEL_NODE_PARAMS const *__pyx_v_nodeParams) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphAddKernelNode", __pyx_f[0], 685, 1, __PYX_ERR(0, 685, __pyx_L1_error));

  /* "cuda/ccuda.pyx":686
 * 
 * cdef CUresult cuGraphAddKernelNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, const CUDA_KERNEL_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphAddKernelNode(phGraphNode, hGraph, dependencies, numDependencies, nodeParams)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphKernelNodeGetParams(CUgraphNode hNode, CUDA_KERNEL_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddKernelNode(__pyx_v_phGraphNode, __pyx_v_hGraph, __pyx_v_dependencies, __pyx_v_numDependencies, __pyx_v_nodeParams); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 686, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":685
 *     return ccuda._cuGraphCreate(phGraph, flags)
 * 
 * cdef CUresult cuGraphAddKernelNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, const CUDA_KERNEL_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphAddKernelNode(phGraphNode, hGraph, dependencies, numDependencies, nodeParams)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphAddKernelNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":688
 *     return ccuda._cuGraphAddKernelNode(phGraphNode, hGraph, dependencies, numDependencies, nodeParams)
 * 
 * cdef CUresult cuGraphKernelNodeGetParams(CUgraphNode hNode, CUDA_KERNEL_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphKernelNodeGetParams(hNode, nodeParams)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphKernelNodeGetParams(__pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUDA_KERNEL_NODE_PARAMS *__pyx_v_nodeParams) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphKernelNodeGetParams", __pyx_f[0], 688, 1, __PYX_ERR(0, 688, __pyx_L1_error));

  /* "cuda/ccuda.pyx":689
 * 
 * cdef CUresult cuGraphKernelNodeGetParams(CUgraphNode hNode, CUDA_KERNEL_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphKernelNodeGetParams(hNode, nodeParams)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphKernelNodeSetParams(CUgraphNode hNode, const CUDA_KERNEL_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphKernelNodeGetParams(__pyx_v_hNode, __pyx_v_nodeParams); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 689, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":688
 *     return ccuda._cuGraphAddKernelNode(phGraphNode, hGraph, dependencies, numDependencies, nodeParams)
 * 
 * cdef CUresult cuGraphKernelNodeGetParams(CUgraphNode hNode, CUDA_KERNEL_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphKernelNodeGetParams(hNode, nodeParams)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphKernelNodeGetParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":691
 *     return ccuda._cuGraphKernelNodeGetParams(hNode, nodeParams)
 * 
 * cdef CUresult cuGraphKernelNodeSetParams(CUgraphNode hNode, const CUDA_KERNEL_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphKernelNodeSetParams(hNode, nodeParams)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphKernelNodeSetParams(__pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUDA_KERNEL_NODE_PARAMS const *__pyx_v_nodeParams) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphKernelNodeSetParams", __pyx_f[0], 691, 1, __PYX_ERR(0, 691, __pyx_L1_error));

  /* "cuda/ccuda.pyx":692
 * 
 * cdef CUresult cuGraphKernelNodeSetParams(CUgraphNode hNode, const CUDA_KERNEL_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphKernelNodeSetParams(hNode, nodeParams)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphAddMemcpyNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, const CUDA_MEMCPY3D* copyParams, CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphKernelNodeSetParams(__pyx_v_hNode, __pyx_v_nodeParams); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 692, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":691
 *     return ccuda._cuGraphKernelNodeGetParams(hNode, nodeParams)
 * 
 * cdef CUresult cuGraphKernelNodeSetParams(CUgraphNode hNode, const CUDA_KERNEL_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphKernelNodeSetParams(hNode, nodeParams)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphKernelNodeSetParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":694
 *     return ccuda._cuGraphKernelNodeSetParams(hNode, nodeParams)
 * 
 * cdef CUresult cuGraphAddMemcpyNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, const CUDA_MEMCPY3D* copyParams, CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphAddMemcpyNode(phGraphNode, hGraph, dependencies, numDependencies, copyParams, ctx)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphAddMemcpyNode(__pyx_t_4cuda_5ccuda_CUgraphNode *__pyx_v_phGraphNode, __pyx_t_4cuda_5ccuda_CUgraph __pyx_v_hGraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *__pyx_v_dependencies, size_t __pyx_v_numDependencies, __pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D const *__pyx_v_copyParams, __pyx_t_4cuda_5ccuda_CUcontext __pyx_v_ctx) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphAddMemcpyNode", __pyx_f[0], 694, 1, __PYX_ERR(0, 694, __pyx_L1_error));

  /* "cuda/ccuda.pyx":695
 * 
 * cdef CUresult cuGraphAddMemcpyNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, const CUDA_MEMCPY3D* copyParams, CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphAddMemcpyNode(phGraphNode, hGraph, dependencies, numDependencies, copyParams, ctx)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphMemcpyNodeGetParams(CUgraphNode hNode, CUDA_MEMCPY3D* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddMemcpyNode(__pyx_v_phGraphNode, __pyx_v_hGraph, __pyx_v_dependencies, __pyx_v_numDependencies, __pyx_v_copyParams, __pyx_v_ctx); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 695, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":694
 *     return ccuda._cuGraphKernelNodeSetParams(hNode, nodeParams)
 * 
 * cdef CUresult cuGraphAddMemcpyNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, const CUDA_MEMCPY3D* copyParams, CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphAddMemcpyNode(phGraphNode, hGraph, dependencies, numDependencies, copyParams, ctx)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphAddMemcpyNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":697
 *     return ccuda._cuGraphAddMemcpyNode(phGraphNode, hGraph, dependencies, numDependencies, copyParams, ctx)
 * 
 * cdef CUresult cuGraphMemcpyNodeGetParams(CUgraphNode hNode, CUDA_MEMCPY3D* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphMemcpyNodeGetParams(hNode, nodeParams)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphMemcpyNodeGetParams(__pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D *__pyx_v_nodeParams) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphMemcpyNodeGetParams", __pyx_f[0], 697, 1, __PYX_ERR(0, 697, __pyx_L1_error));

  /* "cuda/ccuda.pyx":698
 * 
 * cdef CUresult cuGraphMemcpyNodeGetParams(CUgraphNode hNode, CUDA_MEMCPY3D* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphMemcpyNodeGetParams(hNode, nodeParams)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphMemcpyNodeSetParams(CUgraphNode hNode, const CUDA_MEMCPY3D* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphMemcpyNodeGetParams(__pyx_v_hNode, __pyx_v_nodeParams); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 698, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":697
 *     return ccuda._cuGraphAddMemcpyNode(phGraphNode, hGraph, dependencies, numDependencies, copyParams, ctx)
 * 
 * cdef CUresult cuGraphMemcpyNodeGetParams(CUgraphNode hNode, CUDA_MEMCPY3D* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphMemcpyNodeGetParams(hNode, nodeParams)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphMemcpyNodeGetParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":700
 *     return ccuda._cuGraphMemcpyNodeGetParams(hNode, nodeParams)
 * 
 * cdef CUresult cuGraphMemcpyNodeSetParams(CUgraphNode hNode, const CUDA_MEMCPY3D* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphMemcpyNodeSetParams(hNode, nodeParams)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphMemcpyNodeSetParams(__pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D const *__pyx_v_nodeParams) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphMemcpyNodeSetParams", __pyx_f[0], 700, 1, __PYX_ERR(0, 700, __pyx_L1_error));

  /* "cuda/ccuda.pyx":701
 * 
 * cdef CUresult cuGraphMemcpyNodeSetParams(CUgraphNode hNode, const CUDA_MEMCPY3D* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphMemcpyNodeSetParams(hNode, nodeParams)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphAddMemsetNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, const CUDA_MEMSET_NODE_PARAMS* memsetParams, CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphMemcpyNodeSetParams(__pyx_v_hNode, __pyx_v_nodeParams); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 701, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":700
 *     return ccuda._cuGraphMemcpyNodeGetParams(hNode, nodeParams)
 * 
 * cdef CUresult cuGraphMemcpyNodeSetParams(CUgraphNode hNode, const CUDA_MEMCPY3D* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphMemcpyNodeSetParams(hNode, nodeParams)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphMemcpyNodeSetParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":703
 *     return ccuda._cuGraphMemcpyNodeSetParams(hNode, nodeParams)
 * 
 * cdef CUresult cuGraphAddMemsetNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, const CUDA_MEMSET_NODE_PARAMS* memsetParams, CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphAddMemsetNode(phGraphNode, hGraph, dependencies, numDependencies, memsetParams, ctx)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphAddMemsetNode(__pyx_t_4cuda_5ccuda_CUgraphNode *__pyx_v_phGraphNode, __pyx_t_4cuda_5ccuda_CUgraph __pyx_v_hGraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *__pyx_v_dependencies, size_t __pyx_v_numDependencies, __pyx_t_4cuda_5ccuda_CUDA_MEMSET_NODE_PARAMS const *__pyx_v_memsetParams, __pyx_t_4cuda_5ccuda_CUcontext __pyx_v_ctx) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphAddMemsetNode", __pyx_f[0], 703, 1, __PYX_ERR(0, 703, __pyx_L1_error));

  /* "cuda/ccuda.pyx":704
 * 
 * cdef CUresult cuGraphAddMemsetNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, const CUDA_MEMSET_NODE_PARAMS* memsetParams, CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphAddMemsetNode(phGraphNode, hGraph, dependencies, numDependencies, memsetParams, ctx)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphMemsetNodeGetParams(CUgraphNode hNode, CUDA_MEMSET_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddMemsetNode(__pyx_v_phGraphNode, __pyx_v_hGraph, __pyx_v_dependencies, __pyx_v_numDependencies, __pyx_v_memsetParams, __pyx_v_ctx); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 704, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":703
 *     return ccuda._cuGraphMemcpyNodeSetParams(hNode, nodeParams)
 * 
 * cdef CUresult cuGraphAddMemsetNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, const CUDA_MEMSET_NODE_PARAMS* memsetParams, CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphAddMemsetNode(phGraphNode, hGraph, dependencies, numDependencies, memsetParams, ctx)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphAddMemsetNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":706
 *     return ccuda._cuGraphAddMemsetNode(phGraphNode, hGraph, dependencies, numDependencies, memsetParams, ctx)
 * 
 * cdef CUresult cuGraphMemsetNodeGetParams(CUgraphNode hNode, CUDA_MEMSET_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphMemsetNodeGetParams(hNode, nodeParams)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphMemsetNodeGetParams(__pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUDA_MEMSET_NODE_PARAMS *__pyx_v_nodeParams) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphMemsetNodeGetParams", __pyx_f[0], 706, 1, __PYX_ERR(0, 706, __pyx_L1_error));

  /* "cuda/ccuda.pyx":707
 * 
 * cdef CUresult cuGraphMemsetNodeGetParams(CUgraphNode hNode, CUDA_MEMSET_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphMemsetNodeGetParams(hNode, nodeParams)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphMemsetNodeSetParams(CUgraphNode hNode, const CUDA_MEMSET_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphMemsetNodeGetParams(__pyx_v_hNode, __pyx_v_nodeParams); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 707, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":706
 *     return ccuda._cuGraphAddMemsetNode(phGraphNode, hGraph, dependencies, numDependencies, memsetParams, ctx)
 * 
 * cdef CUresult cuGraphMemsetNodeGetParams(CUgraphNode hNode, CUDA_MEMSET_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphMemsetNodeGetParams(hNode, nodeParams)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphMemsetNodeGetParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":709
 *     return ccuda._cuGraphMemsetNodeGetParams(hNode, nodeParams)
 * 
 * cdef CUresult cuGraphMemsetNodeSetParams(CUgraphNode hNode, const CUDA_MEMSET_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphMemsetNodeSetParams(hNode, nodeParams)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphMemsetNodeSetParams(__pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUDA_MEMSET_NODE_PARAMS const *__pyx_v_nodeParams) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphMemsetNodeSetParams", __pyx_f[0], 709, 1, __PYX_ERR(0, 709, __pyx_L1_error));

  /* "cuda/ccuda.pyx":710
 * 
 * cdef CUresult cuGraphMemsetNodeSetParams(CUgraphNode hNode, const CUDA_MEMSET_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphMemsetNodeSetParams(hNode, nodeParams)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphAddHostNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, const CUDA_HOST_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphMemsetNodeSetParams(__pyx_v_hNode, __pyx_v_nodeParams); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 710, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":709
 *     return ccuda._cuGraphMemsetNodeGetParams(hNode, nodeParams)
 * 
 * cdef CUresult cuGraphMemsetNodeSetParams(CUgraphNode hNode, const CUDA_MEMSET_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphMemsetNodeSetParams(hNode, nodeParams)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphMemsetNodeSetParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":712
 *     return ccuda._cuGraphMemsetNodeSetParams(hNode, nodeParams)
 * 
 * cdef CUresult cuGraphAddHostNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, const CUDA_HOST_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphAddHostNode(phGraphNode, hGraph, dependencies, numDependencies, nodeParams)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphAddHostNode(__pyx_t_4cuda_5ccuda_CUgraphNode *__pyx_v_phGraphNode, __pyx_t_4cuda_5ccuda_CUgraph __pyx_v_hGraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *__pyx_v_dependencies, size_t __pyx_v_numDependencies, __pyx_t_4cuda_5ccuda_CUDA_HOST_NODE_PARAMS const *__pyx_v_nodeParams) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphAddHostNode", __pyx_f[0], 712, 1, __PYX_ERR(0, 712, __pyx_L1_error));

  /* "cuda/ccuda.pyx":713
 * 
 * cdef CUresult cuGraphAddHostNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, const CUDA_HOST_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphAddHostNode(phGraphNode, hGraph, dependencies, numDependencies, nodeParams)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphHostNodeGetParams(CUgraphNode hNode, CUDA_HOST_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddHostNode(__pyx_v_phGraphNode, __pyx_v_hGraph, __pyx_v_dependencies, __pyx_v_numDependencies, __pyx_v_nodeParams); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 713, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":712
 *     return ccuda._cuGraphMemsetNodeSetParams(hNode, nodeParams)
 * 
 * cdef CUresult cuGraphAddHostNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, const CUDA_HOST_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphAddHostNode(phGraphNode, hGraph, dependencies, numDependencies, nodeParams)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphAddHostNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":715
 *     return ccuda._cuGraphAddHostNode(phGraphNode, hGraph, dependencies, numDependencies, nodeParams)
 * 
 * cdef CUresult cuGraphHostNodeGetParams(CUgraphNode hNode, CUDA_HOST_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphHostNodeGetParams(hNode, nodeParams)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphHostNodeGetParams(__pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUDA_HOST_NODE_PARAMS *__pyx_v_nodeParams) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphHostNodeGetParams", __pyx_f[0], 715, 1, __PYX_ERR(0, 715, __pyx_L1_error));

  /* "cuda/ccuda.pyx":716
 * 
 * cdef CUresult cuGraphHostNodeGetParams(CUgraphNode hNode, CUDA_HOST_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphHostNodeGetParams(hNode, nodeParams)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphHostNodeSetParams(CUgraphNode hNode, const CUDA_HOST_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphHostNodeGetParams(__pyx_v_hNode, __pyx_v_nodeParams); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 716, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":715
 *     return ccuda._cuGraphAddHostNode(phGraphNode, hGraph, dependencies, numDependencies, nodeParams)
 * 
 * cdef CUresult cuGraphHostNodeGetParams(CUgraphNode hNode, CUDA_HOST_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphHostNodeGetParams(hNode, nodeParams)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphHostNodeGetParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":718
 *     return ccuda._cuGraphHostNodeGetParams(hNode, nodeParams)
 * 
 * cdef CUresult cuGraphHostNodeSetParams(CUgraphNode hNode, const CUDA_HOST_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphHostNodeSetParams(hNode, nodeParams)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphHostNodeSetParams(__pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUDA_HOST_NODE_PARAMS const *__pyx_v_nodeParams) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphHostNodeSetParams", __pyx_f[0], 718, 1, __PYX_ERR(0, 718, __pyx_L1_error));

  /* "cuda/ccuda.pyx":719
 * 
 * cdef CUresult cuGraphHostNodeSetParams(CUgraphNode hNode, const CUDA_HOST_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphHostNodeSetParams(hNode, nodeParams)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphAddChildGraphNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, CUgraph childGraph) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphHostNodeSetParams(__pyx_v_hNode, __pyx_v_nodeParams); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 719, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":718
 *     return ccuda._cuGraphHostNodeGetParams(hNode, nodeParams)
 * 
 * cdef CUresult cuGraphHostNodeSetParams(CUgraphNode hNode, const CUDA_HOST_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphHostNodeSetParams(hNode, nodeParams)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphHostNodeSetParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":721
 *     return ccuda._cuGraphHostNodeSetParams(hNode, nodeParams)
 * 
 * cdef CUresult cuGraphAddChildGraphNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, CUgraph childGraph) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphAddChildGraphNode(phGraphNode, hGraph, dependencies, numDependencies, childGraph)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphAddChildGraphNode(__pyx_t_4cuda_5ccuda_CUgraphNode *__pyx_v_phGraphNode, __pyx_t_4cuda_5ccuda_CUgraph __pyx_v_hGraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *__pyx_v_dependencies, size_t __pyx_v_numDependencies, __pyx_t_4cuda_5ccuda_CUgraph __pyx_v_childGraph) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphAddChildGraphNode", __pyx_f[0], 721, 1, __PYX_ERR(0, 721, __pyx_L1_error));

  /* "cuda/ccuda.pyx":722
 * 
 * cdef CUresult cuGraphAddChildGraphNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, CUgraph childGraph) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphAddChildGraphNode(phGraphNode, hGraph, dependencies, numDependencies, childGraph)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphChildGraphNodeGetGraph(CUgraphNode hNode, CUgraph* phGraph) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddChildGraphNode(__pyx_v_phGraphNode, __pyx_v_hGraph, __pyx_v_dependencies, __pyx_v_numDependencies, __pyx_v_childGraph); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 722, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":721
 *     return ccuda._cuGraphHostNodeSetParams(hNode, nodeParams)
 * 
 * cdef CUresult cuGraphAddChildGraphNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, CUgraph childGraph) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphAddChildGraphNode(phGraphNode, hGraph, dependencies, numDependencies, childGraph)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphAddChildGraphNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":724
 *     return ccuda._cuGraphAddChildGraphNode(phGraphNode, hGraph, dependencies, numDependencies, childGraph)
 * 
 * cdef CUresult cuGraphChildGraphNodeGetGraph(CUgraphNode hNode, CUgraph* phGraph) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphChildGraphNodeGetGraph(hNode, phGraph)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphChildGraphNodeGetGraph(__pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUgraph *__pyx_v_phGraph) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphChildGraphNodeGetGraph", __pyx_f[0], 724, 1, __PYX_ERR(0, 724, __pyx_L1_error));

  /* "cuda/ccuda.pyx":725
 * 
 * cdef CUresult cuGraphChildGraphNodeGetGraph(CUgraphNode hNode, CUgraph* phGraph) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphChildGraphNodeGetGraph(hNode, phGraph)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphAddEmptyNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphChildGraphNodeGetGraph(__pyx_v_hNode, __pyx_v_phGraph); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 725, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":724
 *     return ccuda._cuGraphAddChildGraphNode(phGraphNode, hGraph, dependencies, numDependencies, childGraph)
 * 
 * cdef CUresult cuGraphChildGraphNodeGetGraph(CUgraphNode hNode, CUgraph* phGraph) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphChildGraphNodeGetGraph(hNode, phGraph)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphChildGraphNodeGetGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":727
 *     return ccuda._cuGraphChildGraphNodeGetGraph(hNode, phGraph)
 * 
 * cdef CUresult cuGraphAddEmptyNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphAddEmptyNode(phGraphNode, hGraph, dependencies, numDependencies)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphAddEmptyNode(__pyx_t_4cuda_5ccuda_CUgraphNode *__pyx_v_phGraphNode, __pyx_t_4cuda_5ccuda_CUgraph __pyx_v_hGraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *__pyx_v_dependencies, size_t __pyx_v_numDependencies) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphAddEmptyNode", __pyx_f[0], 727, 1, __PYX_ERR(0, 727, __pyx_L1_error));

  /* "cuda/ccuda.pyx":728
 * 
 * cdef CUresult cuGraphAddEmptyNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphAddEmptyNode(phGraphNode, hGraph, dependencies, numDependencies)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphAddEventRecordNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, CUevent event) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddEmptyNode(__pyx_v_phGraphNode, __pyx_v_hGraph, __pyx_v_dependencies, __pyx_v_numDependencies); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 728, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":727
 *     return ccuda._cuGraphChildGraphNodeGetGraph(hNode, phGraph)
 * 
 * cdef CUresult cuGraphAddEmptyNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphAddEmptyNode(phGraphNode, hGraph, dependencies, numDependencies)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphAddEmptyNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":730
 *     return ccuda._cuGraphAddEmptyNode(phGraphNode, hGraph, dependencies, numDependencies)
 * 
 * cdef CUresult cuGraphAddEventRecordNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, CUevent event) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphAddEventRecordNode(phGraphNode, hGraph, dependencies, numDependencies, event)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphAddEventRecordNode(__pyx_t_4cuda_5ccuda_CUgraphNode *__pyx_v_phGraphNode, __pyx_t_4cuda_5ccuda_CUgraph __pyx_v_hGraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *__pyx_v_dependencies, size_t __pyx_v_numDependencies, __pyx_t_4cuda_5ccuda_CUevent __pyx_v_event) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphAddEventRecordNode", __pyx_f[0], 730, 1, __PYX_ERR(0, 730, __pyx_L1_error));

  /* "cuda/ccuda.pyx":731
 * 
 * cdef CUresult cuGraphAddEventRecordNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, CUevent event) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphAddEventRecordNode(phGraphNode, hGraph, dependencies, numDependencies, event)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphEventRecordNodeGetEvent(CUgraphNode hNode, CUevent* event_out) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddEventRecordNode(__pyx_v_phGraphNode, __pyx_v_hGraph, __pyx_v_dependencies, __pyx_v_numDependencies, __pyx_v_event); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 731, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":730
 *     return ccuda._cuGraphAddEmptyNode(phGraphNode, hGraph, dependencies, numDependencies)
 * 
 * cdef CUresult cuGraphAddEventRecordNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, CUevent event) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphAddEventRecordNode(phGraphNode, hGraph, dependencies, numDependencies, event)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphAddEventRecordNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":733
 *     return ccuda._cuGraphAddEventRecordNode(phGraphNode, hGraph, dependencies, numDependencies, event)
 * 
 * cdef CUresult cuGraphEventRecordNodeGetEvent(CUgraphNode hNode, CUevent* event_out) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphEventRecordNodeGetEvent(hNode, event_out)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphEventRecordNodeGetEvent(__pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUevent *__pyx_v_event_out) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphEventRecordNodeGetEvent", __pyx_f[0], 733, 1, __PYX_ERR(0, 733, __pyx_L1_error));

  /* "cuda/ccuda.pyx":734
 * 
 * cdef CUresult cuGraphEventRecordNodeGetEvent(CUgraphNode hNode, CUevent* event_out) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphEventRecordNodeGetEvent(hNode, event_out)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphEventRecordNodeSetEvent(CUgraphNode hNode, CUevent event) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphEventRecordNodeGetEvent(__pyx_v_hNode, __pyx_v_event_out); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 734, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":733
 *     return ccuda._cuGraphAddEventRecordNode(phGraphNode, hGraph, dependencies, numDependencies, event)
 * 
 * cdef CUresult cuGraphEventRecordNodeGetEvent(CUgraphNode hNode, CUevent* event_out) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphEventRecordNodeGetEvent(hNode, event_out)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphEventRecordNodeGetEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":736
 *     return ccuda._cuGraphEventRecordNodeGetEvent(hNode, event_out)
 * 
 * cdef CUresult cuGraphEventRecordNodeSetEvent(CUgraphNode hNode, CUevent event) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphEventRecordNodeSetEvent(hNode, event)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphEventRecordNodeSetEvent(__pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUevent __pyx_v_event) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphEventRecordNodeSetEvent", __pyx_f[0], 736, 1, __PYX_ERR(0, 736, __pyx_L1_error));

  /* "cuda/ccuda.pyx":737
 * 
 * cdef CUresult cuGraphEventRecordNodeSetEvent(CUgraphNode hNode, CUevent event) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphEventRecordNodeSetEvent(hNode, event)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphAddEventWaitNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, CUevent event) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphEventRecordNodeSetEvent(__pyx_v_hNode, __pyx_v_event); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 737, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":736
 *     return ccuda._cuGraphEventRecordNodeGetEvent(hNode, event_out)
 * 
 * cdef CUresult cuGraphEventRecordNodeSetEvent(CUgraphNode hNode, CUevent event) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphEventRecordNodeSetEvent(hNode, event)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphEventRecordNodeSetEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":739
 *     return ccuda._cuGraphEventRecordNodeSetEvent(hNode, event)
 * 
 * cdef CUresult cuGraphAddEventWaitNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, CUevent event) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphAddEventWaitNode(phGraphNode, hGraph, dependencies, numDependencies, event)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphAddEventWaitNode(__pyx_t_4cuda_5ccuda_CUgraphNode *__pyx_v_phGraphNode, __pyx_t_4cuda_5ccuda_CUgraph __pyx_v_hGraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *__pyx_v_dependencies, size_t __pyx_v_numDependencies, __pyx_t_4cuda_5ccuda_CUevent __pyx_v_event) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphAddEventWaitNode", __pyx_f[0], 739, 1, __PYX_ERR(0, 739, __pyx_L1_error));

  /* "cuda/ccuda.pyx":740
 * 
 * cdef CUresult cuGraphAddEventWaitNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, CUevent event) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphAddEventWaitNode(phGraphNode, hGraph, dependencies, numDependencies, event)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphEventWaitNodeGetEvent(CUgraphNode hNode, CUevent* event_out) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddEventWaitNode(__pyx_v_phGraphNode, __pyx_v_hGraph, __pyx_v_dependencies, __pyx_v_numDependencies, __pyx_v_event); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 740, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":739
 *     return ccuda._cuGraphEventRecordNodeSetEvent(hNode, event)
 * 
 * cdef CUresult cuGraphAddEventWaitNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, CUevent event) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphAddEventWaitNode(phGraphNode, hGraph, dependencies, numDependencies, event)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphAddEventWaitNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":742
 *     return ccuda._cuGraphAddEventWaitNode(phGraphNode, hGraph, dependencies, numDependencies, event)
 * 
 * cdef CUresult cuGraphEventWaitNodeGetEvent(CUgraphNode hNode, CUevent* event_out) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphEventWaitNodeGetEvent(hNode, event_out)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphEventWaitNodeGetEvent(__pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUevent *__pyx_v_event_out) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphEventWaitNodeGetEvent", __pyx_f[0], 742, 1, __PYX_ERR(0, 742, __pyx_L1_error));

  /* "cuda/ccuda.pyx":743
 * 
 * cdef CUresult cuGraphEventWaitNodeGetEvent(CUgraphNode hNode, CUevent* event_out) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphEventWaitNodeGetEvent(hNode, event_out)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphEventWaitNodeSetEvent(CUgraphNode hNode, CUevent event) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphEventWaitNodeGetEvent(__pyx_v_hNode, __pyx_v_event_out); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 743, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":742
 *     return ccuda._cuGraphAddEventWaitNode(phGraphNode, hGraph, dependencies, numDependencies, event)
 * 
 * cdef CUresult cuGraphEventWaitNodeGetEvent(CUgraphNode hNode, CUevent* event_out) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphEventWaitNodeGetEvent(hNode, event_out)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphEventWaitNodeGetEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":745
 *     return ccuda._cuGraphEventWaitNodeGetEvent(hNode, event_out)
 * 
 * cdef CUresult cuGraphEventWaitNodeSetEvent(CUgraphNode hNode, CUevent event) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphEventWaitNodeSetEvent(hNode, event)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphEventWaitNodeSetEvent(__pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUevent __pyx_v_event) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphEventWaitNodeSetEvent", __pyx_f[0], 745, 1, __PYX_ERR(0, 745, __pyx_L1_error));

  /* "cuda/ccuda.pyx":746
 * 
 * cdef CUresult cuGraphEventWaitNodeSetEvent(CUgraphNode hNode, CUevent event) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphEventWaitNodeSetEvent(hNode, event)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphAddExternalSemaphoresSignalNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, const CUDA_EXT_SEM_SIGNAL_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphEventWaitNodeSetEvent(__pyx_v_hNode, __pyx_v_event); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 746, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":745
 *     return ccuda._cuGraphEventWaitNodeGetEvent(hNode, event_out)
 * 
 * cdef CUresult cuGraphEventWaitNodeSetEvent(CUgraphNode hNode, CUevent event) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphEventWaitNodeSetEvent(hNode, event)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphEventWaitNodeSetEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":748
 *     return ccuda._cuGraphEventWaitNodeSetEvent(hNode, event)
 * 
 * cdef CUresult cuGraphAddExternalSemaphoresSignalNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, const CUDA_EXT_SEM_SIGNAL_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphAddExternalSemaphoresSignalNode(phGraphNode, hGraph, dependencies, numDependencies, nodeParams)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphAddExternalSemaphoresSignalNode(__pyx_t_4cuda_5ccuda_CUgraphNode *__pyx_v_phGraphNode, __pyx_t_4cuda_5ccuda_CUgraph __pyx_v_hGraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *__pyx_v_dependencies, size_t __pyx_v_numDependencies, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_SIGNAL_NODE_PARAMS const *__pyx_v_nodeParams) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphAddExternalSemaphoresSignalNode", __pyx_f[0], 748, 1, __PYX_ERR(0, 748, __pyx_L1_error));

  /* "cuda/ccuda.pyx":749
 * 
 * cdef CUresult cuGraphAddExternalSemaphoresSignalNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, const CUDA_EXT_SEM_SIGNAL_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphAddExternalSemaphoresSignalNode(phGraphNode, hGraph, dependencies, numDependencies, nodeParams)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphExternalSemaphoresSignalNodeGetParams(CUgraphNode hNode, CUDA_EXT_SEM_SIGNAL_NODE_PARAMS* params_out) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddExternalSemaphoresSignalNode(__pyx_v_phGraphNode, __pyx_v_hGraph, __pyx_v_dependencies, __pyx_v_numDependencies, __pyx_v_nodeParams); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 749, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":748
 *     return ccuda._cuGraphEventWaitNodeSetEvent(hNode, event)
 * 
 * cdef CUresult cuGraphAddExternalSemaphoresSignalNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, const CUDA_EXT_SEM_SIGNAL_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphAddExternalSemaphoresSignalNode(phGraphNode, hGraph, dependencies, numDependencies, nodeParams)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphAddExternalSemaphoresSignalNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":751
 *     return ccuda._cuGraphAddExternalSemaphoresSignalNode(phGraphNode, hGraph, dependencies, numDependencies, nodeParams)
 * 
 * cdef CUresult cuGraphExternalSemaphoresSignalNodeGetParams(CUgraphNode hNode, CUDA_EXT_SEM_SIGNAL_NODE_PARAMS* params_out) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphExternalSemaphoresSignalNodeGetParams(hNode, params_out)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphExternalSemaphoresSignalNodeGetParams(__pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_SIGNAL_NODE_PARAMS *__pyx_v_params_out) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphExternalSemaphoresSignalNodeGetParams", __pyx_f[0], 751, 1, __PYX_ERR(0, 751, __pyx_L1_error));

  /* "cuda/ccuda.pyx":752
 * 
 * cdef CUresult cuGraphExternalSemaphoresSignalNodeGetParams(CUgraphNode hNode, CUDA_EXT_SEM_SIGNAL_NODE_PARAMS* params_out) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphExternalSemaphoresSignalNodeGetParams(hNode, params_out)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphExternalSemaphoresSignalNodeSetParams(CUgraphNode hNode, const CUDA_EXT_SEM_SIGNAL_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphExternalSemaphoresSignalNodeGetParams(__pyx_v_hNode, __pyx_v_params_out); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 752, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":751
 *     return ccuda._cuGraphAddExternalSemaphoresSignalNode(phGraphNode, hGraph, dependencies, numDependencies, nodeParams)
 * 
 * cdef CUresult cuGraphExternalSemaphoresSignalNodeGetParams(CUgraphNode hNode, CUDA_EXT_SEM_SIGNAL_NODE_PARAMS* params_out) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphExternalSemaphoresSignalNodeGetParams(hNode, params_out)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphExternalSemaphoresSignalNodeGetParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":754
 *     return ccuda._cuGraphExternalSemaphoresSignalNodeGetParams(hNode, params_out)
 * 
 * cdef CUresult cuGraphExternalSemaphoresSignalNodeSetParams(CUgraphNode hNode, const CUDA_EXT_SEM_SIGNAL_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphExternalSemaphoresSignalNodeSetParams(hNode, nodeParams)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphExternalSemaphoresSignalNodeSetParams(__pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_SIGNAL_NODE_PARAMS const *__pyx_v_nodeParams) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphExternalSemaphoresSignalNodeSetParams", __pyx_f[0], 754, 1, __PYX_ERR(0, 754, __pyx_L1_error));

  /* "cuda/ccuda.pyx":755
 * 
 * cdef CUresult cuGraphExternalSemaphoresSignalNodeSetParams(CUgraphNode hNode, const CUDA_EXT_SEM_SIGNAL_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphExternalSemaphoresSignalNodeSetParams(hNode, nodeParams)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphAddExternalSemaphoresWaitNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, const CUDA_EXT_SEM_WAIT_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphExternalSemaphoresSignalNodeSetParams(__pyx_v_hNode, __pyx_v_nodeParams); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 755, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":754
 *     return ccuda._cuGraphExternalSemaphoresSignalNodeGetParams(hNode, params_out)
 * 
 * cdef CUresult cuGraphExternalSemaphoresSignalNodeSetParams(CUgraphNode hNode, const CUDA_EXT_SEM_SIGNAL_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphExternalSemaphoresSignalNodeSetParams(hNode, nodeParams)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphExternalSemaphoresSignalNodeSetParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":757
 *     return ccuda._cuGraphExternalSemaphoresSignalNodeSetParams(hNode, nodeParams)
 * 
 * cdef CUresult cuGraphAddExternalSemaphoresWaitNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, const CUDA_EXT_SEM_WAIT_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphAddExternalSemaphoresWaitNode(phGraphNode, hGraph, dependencies, numDependencies, nodeParams)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphAddExternalSemaphoresWaitNode(__pyx_t_4cuda_5ccuda_CUgraphNode *__pyx_v_phGraphNode, __pyx_t_4cuda_5ccuda_CUgraph __pyx_v_hGraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *__pyx_v_dependencies, size_t __pyx_v_numDependencies, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_WAIT_NODE_PARAMS const *__pyx_v_nodeParams) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphAddExternalSemaphoresWaitNode", __pyx_f[0], 757, 1, __PYX_ERR(0, 757, __pyx_L1_error));

  /* "cuda/ccuda.pyx":758
 * 
 * cdef CUresult cuGraphAddExternalSemaphoresWaitNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, const CUDA_EXT_SEM_WAIT_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphAddExternalSemaphoresWaitNode(phGraphNode, hGraph, dependencies, numDependencies, nodeParams)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphExternalSemaphoresWaitNodeGetParams(CUgraphNode hNode, CUDA_EXT_SEM_WAIT_NODE_PARAMS* params_out) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddExternalSemaphoresWaitNode(__pyx_v_phGraphNode, __pyx_v_hGraph, __pyx_v_dependencies, __pyx_v_numDependencies, __pyx_v_nodeParams); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 758, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":757
 *     return ccuda._cuGraphExternalSemaphoresSignalNodeSetParams(hNode, nodeParams)
 * 
 * cdef CUresult cuGraphAddExternalSemaphoresWaitNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, const CUDA_EXT_SEM_WAIT_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphAddExternalSemaphoresWaitNode(phGraphNode, hGraph, dependencies, numDependencies, nodeParams)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphAddExternalSemaphoresWaitNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":760
 *     return ccuda._cuGraphAddExternalSemaphoresWaitNode(phGraphNode, hGraph, dependencies, numDependencies, nodeParams)
 * 
 * cdef CUresult cuGraphExternalSemaphoresWaitNodeGetParams(CUgraphNode hNode, CUDA_EXT_SEM_WAIT_NODE_PARAMS* params_out) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphExternalSemaphoresWaitNodeGetParams(hNode, params_out)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphExternalSemaphoresWaitNodeGetParams(__pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_WAIT_NODE_PARAMS *__pyx_v_params_out) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphExternalSemaphoresWaitNodeGetParams", __pyx_f[0], 760, 1, __PYX_ERR(0, 760, __pyx_L1_error));

  /* "cuda/ccuda.pyx":761
 * 
 * cdef CUresult cuGraphExternalSemaphoresWaitNodeGetParams(CUgraphNode hNode, CUDA_EXT_SEM_WAIT_NODE_PARAMS* params_out) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphExternalSemaphoresWaitNodeGetParams(hNode, params_out)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphExternalSemaphoresWaitNodeSetParams(CUgraphNode hNode, const CUDA_EXT_SEM_WAIT_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphExternalSemaphoresWaitNodeGetParams(__pyx_v_hNode, __pyx_v_params_out); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 761, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":760
 *     return ccuda._cuGraphAddExternalSemaphoresWaitNode(phGraphNode, hGraph, dependencies, numDependencies, nodeParams)
 * 
 * cdef CUresult cuGraphExternalSemaphoresWaitNodeGetParams(CUgraphNode hNode, CUDA_EXT_SEM_WAIT_NODE_PARAMS* params_out) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphExternalSemaphoresWaitNodeGetParams(hNode, params_out)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphExternalSemaphoresWaitNodeGetParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":763
 *     return ccuda._cuGraphExternalSemaphoresWaitNodeGetParams(hNode, params_out)
 * 
 * cdef CUresult cuGraphExternalSemaphoresWaitNodeSetParams(CUgraphNode hNode, const CUDA_EXT_SEM_WAIT_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphExternalSemaphoresWaitNodeSetParams(hNode, nodeParams)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphExternalSemaphoresWaitNodeSetParams(__pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_WAIT_NODE_PARAMS const *__pyx_v_nodeParams) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphExternalSemaphoresWaitNodeSetParams", __pyx_f[0], 763, 1, __PYX_ERR(0, 763, __pyx_L1_error));

  /* "cuda/ccuda.pyx":764
 * 
 * cdef CUresult cuGraphExternalSemaphoresWaitNodeSetParams(CUgraphNode hNode, const CUDA_EXT_SEM_WAIT_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphExternalSemaphoresWaitNodeSetParams(hNode, nodeParams)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphAddMemAllocNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, CUDA_MEM_ALLOC_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphExternalSemaphoresWaitNodeSetParams(__pyx_v_hNode, __pyx_v_nodeParams); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 764, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":763
 *     return ccuda._cuGraphExternalSemaphoresWaitNodeGetParams(hNode, params_out)
 * 
 * cdef CUresult cuGraphExternalSemaphoresWaitNodeSetParams(CUgraphNode hNode, const CUDA_EXT_SEM_WAIT_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphExternalSemaphoresWaitNodeSetParams(hNode, nodeParams)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphExternalSemaphoresWaitNodeSetParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":766
 *     return ccuda._cuGraphExternalSemaphoresWaitNodeSetParams(hNode, nodeParams)
 * 
 * cdef CUresult cuGraphAddMemAllocNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, CUDA_MEM_ALLOC_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphAddMemAllocNode(phGraphNode, hGraph, dependencies, numDependencies, nodeParams)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphAddMemAllocNode(__pyx_t_4cuda_5ccuda_CUgraphNode *__pyx_v_phGraphNode, __pyx_t_4cuda_5ccuda_CUgraph __pyx_v_hGraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *__pyx_v_dependencies, size_t __pyx_v_numDependencies, __pyx_t_4cuda_5ccuda_CUDA_MEM_ALLOC_NODE_PARAMS *__pyx_v_nodeParams) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphAddMemAllocNode", __pyx_f[0], 766, 1, __PYX_ERR(0, 766, __pyx_L1_error));

  /* "cuda/ccuda.pyx":767
 * 
 * cdef CUresult cuGraphAddMemAllocNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, CUDA_MEM_ALLOC_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphAddMemAllocNode(phGraphNode, hGraph, dependencies, numDependencies, nodeParams)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphMemAllocNodeGetParams(CUgraphNode hNode, CUDA_MEM_ALLOC_NODE_PARAMS* params_out) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddMemAllocNode(__pyx_v_phGraphNode, __pyx_v_hGraph, __pyx_v_dependencies, __pyx_v_numDependencies, __pyx_v_nodeParams); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 767, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":766
 *     return ccuda._cuGraphExternalSemaphoresWaitNodeSetParams(hNode, nodeParams)
 * 
 * cdef CUresult cuGraphAddMemAllocNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, CUDA_MEM_ALLOC_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphAddMemAllocNode(phGraphNode, hGraph, dependencies, numDependencies, nodeParams)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphAddMemAllocNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":769
 *     return ccuda._cuGraphAddMemAllocNode(phGraphNode, hGraph, dependencies, numDependencies, nodeParams)
 * 
 * cdef CUresult cuGraphMemAllocNodeGetParams(CUgraphNode hNode, CUDA_MEM_ALLOC_NODE_PARAMS* params_out) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphMemAllocNodeGetParams(hNode, params_out)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphMemAllocNodeGetParams(__pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUDA_MEM_ALLOC_NODE_PARAMS *__pyx_v_params_out) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphMemAllocNodeGetParams", __pyx_f[0], 769, 1, __PYX_ERR(0, 769, __pyx_L1_error));

  /* "cuda/ccuda.pyx":770
 * 
 * cdef CUresult cuGraphMemAllocNodeGetParams(CUgraphNode hNode, CUDA_MEM_ALLOC_NODE_PARAMS* params_out) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphMemAllocNodeGetParams(hNode, params_out)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphAddMemFreeNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, CUdeviceptr dptr) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphMemAllocNodeGetParams(__pyx_v_hNode, __pyx_v_params_out); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 770, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":769
 *     return ccuda._cuGraphAddMemAllocNode(phGraphNode, hGraph, dependencies, numDependencies, nodeParams)
 * 
 * cdef CUresult cuGraphMemAllocNodeGetParams(CUgraphNode hNode, CUDA_MEM_ALLOC_NODE_PARAMS* params_out) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphMemAllocNodeGetParams(hNode, params_out)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphMemAllocNodeGetParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":772
 *     return ccuda._cuGraphMemAllocNodeGetParams(hNode, params_out)
 * 
 * cdef CUresult cuGraphAddMemFreeNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, CUdeviceptr dptr) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphAddMemFreeNode(phGraphNode, hGraph, dependencies, numDependencies, dptr)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphAddMemFreeNode(__pyx_t_4cuda_5ccuda_CUgraphNode *__pyx_v_phGraphNode, __pyx_t_4cuda_5ccuda_CUgraph __pyx_v_hGraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *__pyx_v_dependencies, size_t __pyx_v_numDependencies, __pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_dptr) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphAddMemFreeNode", __pyx_f[0], 772, 1, __PYX_ERR(0, 772, __pyx_L1_error));

  /* "cuda/ccuda.pyx":773
 * 
 * cdef CUresult cuGraphAddMemFreeNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, CUdeviceptr dptr) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphAddMemFreeNode(phGraphNode, hGraph, dependencies, numDependencies, dptr)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphMemFreeNodeGetParams(CUgraphNode hNode, CUdeviceptr* dptr_out) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddMemFreeNode(__pyx_v_phGraphNode, __pyx_v_hGraph, __pyx_v_dependencies, __pyx_v_numDependencies, __pyx_v_dptr); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 773, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":772
 *     return ccuda._cuGraphMemAllocNodeGetParams(hNode, params_out)
 * 
 * cdef CUresult cuGraphAddMemFreeNode(CUgraphNode* phGraphNode, CUgraph hGraph, const CUgraphNode* dependencies, size_t numDependencies, CUdeviceptr dptr) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphAddMemFreeNode(phGraphNode, hGraph, dependencies, numDependencies, dptr)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphAddMemFreeNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":775
 *     return ccuda._cuGraphAddMemFreeNode(phGraphNode, hGraph, dependencies, numDependencies, dptr)
 * 
 * cdef CUresult cuGraphMemFreeNodeGetParams(CUgraphNode hNode, CUdeviceptr* dptr_out) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphMemFreeNodeGetParams(hNode, dptr_out)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphMemFreeNodeGetParams(__pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUdeviceptr *__pyx_v_dptr_out) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphMemFreeNodeGetParams", __pyx_f[0], 775, 1, __PYX_ERR(0, 775, __pyx_L1_error));

  /* "cuda/ccuda.pyx":776
 * 
 * cdef CUresult cuGraphMemFreeNodeGetParams(CUgraphNode hNode, CUdeviceptr* dptr_out) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphMemFreeNodeGetParams(hNode, dptr_out)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDeviceGraphMemTrim(CUdevice device) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphMemFreeNodeGetParams(__pyx_v_hNode, __pyx_v_dptr_out); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 776, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":775
 *     return ccuda._cuGraphAddMemFreeNode(phGraphNode, hGraph, dependencies, numDependencies, dptr)
 * 
 * cdef CUresult cuGraphMemFreeNodeGetParams(CUgraphNode hNode, CUdeviceptr* dptr_out) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphMemFreeNodeGetParams(hNode, dptr_out)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphMemFreeNodeGetParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":778
 *     return ccuda._cuGraphMemFreeNodeGetParams(hNode, dptr_out)
 * 
 * cdef CUresult cuDeviceGraphMemTrim(CUdevice device) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGraphMemTrim(device)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDeviceGraphMemTrim(__pyx_t_4cuda_5ccuda_CUdevice __pyx_v_device) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDeviceGraphMemTrim", __pyx_f[0], 778, 1, __PYX_ERR(0, 778, __pyx_L1_error));

  /* "cuda/ccuda.pyx":779
 * 
 * cdef CUresult cuDeviceGraphMemTrim(CUdevice device) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDeviceGraphMemTrim(device)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDeviceGetGraphMemAttribute(CUdevice device, CUgraphMem_attribute attr, void* value) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGraphMemTrim(__pyx_v_device); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 779, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":778
 *     return ccuda._cuGraphMemFreeNodeGetParams(hNode, dptr_out)
 * 
 * cdef CUresult cuDeviceGraphMemTrim(CUdevice device) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGraphMemTrim(device)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDeviceGraphMemTrim", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":781
 *     return ccuda._cuDeviceGraphMemTrim(device)
 * 
 * cdef CUresult cuDeviceGetGraphMemAttribute(CUdevice device, CUgraphMem_attribute attr, void* value) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetGraphMemAttribute(device, attr, value)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDeviceGetGraphMemAttribute(__pyx_t_4cuda_5ccuda_CUdevice __pyx_v_device, __pyx_t_4cuda_5ccuda_CUgraphMem_attribute __pyx_v_attr, void *__pyx_v_value) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDeviceGetGraphMemAttribute", __pyx_f[0], 781, 1, __PYX_ERR(0, 781, __pyx_L1_error));

  /* "cuda/ccuda.pyx":782
 * 
 * cdef CUresult cuDeviceGetGraphMemAttribute(CUdevice device, CUgraphMem_attribute attr, void* value) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDeviceGetGraphMemAttribute(device, attr, value)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDeviceSetGraphMemAttribute(CUdevice device, CUgraphMem_attribute attr, void* value) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetGraphMemAttribute(__pyx_v_device, __pyx_v_attr, __pyx_v_value); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 782, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":781
 *     return ccuda._cuDeviceGraphMemTrim(device)
 * 
 * cdef CUresult cuDeviceGetGraphMemAttribute(CUdevice device, CUgraphMem_attribute attr, void* value) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetGraphMemAttribute(device, attr, value)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDeviceGetGraphMemAttribute", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":784
 *     return ccuda._cuDeviceGetGraphMemAttribute(device, attr, value)
 * 
 * cdef CUresult cuDeviceSetGraphMemAttribute(CUdevice device, CUgraphMem_attribute attr, void* value) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceSetGraphMemAttribute(device, attr, value)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDeviceSetGraphMemAttribute(__pyx_t_4cuda_5ccuda_CUdevice __pyx_v_device, __pyx_t_4cuda_5ccuda_CUgraphMem_attribute __pyx_v_attr, void *__pyx_v_value) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDeviceSetGraphMemAttribute", __pyx_f[0], 784, 1, __PYX_ERR(0, 784, __pyx_L1_error));

  /* "cuda/ccuda.pyx":785
 * 
 * cdef CUresult cuDeviceSetGraphMemAttribute(CUdevice device, CUgraphMem_attribute attr, void* value) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDeviceSetGraphMemAttribute(device, attr, value)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphClone(CUgraph* phGraphClone, CUgraph originalGraph) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDeviceSetGraphMemAttribute(__pyx_v_device, __pyx_v_attr, __pyx_v_value); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 785, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":784
 *     return ccuda._cuDeviceGetGraphMemAttribute(device, attr, value)
 * 
 * cdef CUresult cuDeviceSetGraphMemAttribute(CUdevice device, CUgraphMem_attribute attr, void* value) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceSetGraphMemAttribute(device, attr, value)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDeviceSetGraphMemAttribute", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":787
 *     return ccuda._cuDeviceSetGraphMemAttribute(device, attr, value)
 * 
 * cdef CUresult cuGraphClone(CUgraph* phGraphClone, CUgraph originalGraph) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphClone(phGraphClone, originalGraph)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphClone(__pyx_t_4cuda_5ccuda_CUgraph *__pyx_v_phGraphClone, __pyx_t_4cuda_5ccuda_CUgraph __pyx_v_originalGraph) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphClone", __pyx_f[0], 787, 1, __PYX_ERR(0, 787, __pyx_L1_error));

  /* "cuda/ccuda.pyx":788
 * 
 * cdef CUresult cuGraphClone(CUgraph* phGraphClone, CUgraph originalGraph) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphClone(phGraphClone, originalGraph)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphNodeFindInClone(CUgraphNode* phNode, CUgraphNode hOriginalNode, CUgraph hClonedGraph) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphClone(__pyx_v_phGraphClone, __pyx_v_originalGraph); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 788, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":787
 *     return ccuda._cuDeviceSetGraphMemAttribute(device, attr, value)
 * 
 * cdef CUresult cuGraphClone(CUgraph* phGraphClone, CUgraph originalGraph) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphClone(phGraphClone, originalGraph)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphClone", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":790
 *     return ccuda._cuGraphClone(phGraphClone, originalGraph)
 * 
 * cdef CUresult cuGraphNodeFindInClone(CUgraphNode* phNode, CUgraphNode hOriginalNode, CUgraph hClonedGraph) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphNodeFindInClone(phNode, hOriginalNode, hClonedGraph)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphNodeFindInClone(__pyx_t_4cuda_5ccuda_CUgraphNode *__pyx_v_phNode, __pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hOriginalNode, __pyx_t_4cuda_5ccuda_CUgraph __pyx_v_hClonedGraph) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphNodeFindInClone", __pyx_f[0], 790, 1, __PYX_ERR(0, 790, __pyx_L1_error));

  /* "cuda/ccuda.pyx":791
 * 
 * cdef CUresult cuGraphNodeFindInClone(CUgraphNode* phNode, CUgraphNode hOriginalNode, CUgraph hClonedGraph) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphNodeFindInClone(phNode, hOriginalNode, hClonedGraph)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphNodeGetType(CUgraphNode hNode, CUgraphNodeType* typename) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphNodeFindInClone(__pyx_v_phNode, __pyx_v_hOriginalNode, __pyx_v_hClonedGraph); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 791, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":790
 *     return ccuda._cuGraphClone(phGraphClone, originalGraph)
 * 
 * cdef CUresult cuGraphNodeFindInClone(CUgraphNode* phNode, CUgraphNode hOriginalNode, CUgraph hClonedGraph) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphNodeFindInClone(phNode, hOriginalNode, hClonedGraph)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphNodeFindInClone", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":793
 *     return ccuda._cuGraphNodeFindInClone(phNode, hOriginalNode, hClonedGraph)
 * 
 * cdef CUresult cuGraphNodeGetType(CUgraphNode hNode, CUgraphNodeType* typename) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphNodeGetType(hNode, typename)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphNodeGetType(__pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUgraphNodeType *__pyx_v_typename) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphNodeGetType", __pyx_f[0], 793, 1, __PYX_ERR(0, 793, __pyx_L1_error));

  /* "cuda/ccuda.pyx":794
 * 
 * cdef CUresult cuGraphNodeGetType(CUgraphNode hNode, CUgraphNodeType* typename) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphNodeGetType(hNode, typename)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphGetNodes(CUgraph hGraph, CUgraphNode* nodes, size_t* numNodes) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphNodeGetType(__pyx_v_hNode, __pyx_v_typename); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 794, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":793
 *     return ccuda._cuGraphNodeFindInClone(phNode, hOriginalNode, hClonedGraph)
 * 
 * cdef CUresult cuGraphNodeGetType(CUgraphNode hNode, CUgraphNodeType* typename) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphNodeGetType(hNode, typename)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphNodeGetType", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":796
 *     return ccuda._cuGraphNodeGetType(hNode, typename)
 * 
 * cdef CUresult cuGraphGetNodes(CUgraph hGraph, CUgraphNode* nodes, size_t* numNodes) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphGetNodes(hGraph, nodes, numNodes)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphGetNodes(__pyx_t_4cuda_5ccuda_CUgraph __pyx_v_hGraph, __pyx_t_4cuda_5ccuda_CUgraphNode *__pyx_v_nodes, size_t *__pyx_v_numNodes) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphGetNodes", __pyx_f[0], 796, 1, __PYX_ERR(0, 796, __pyx_L1_error));

  /* "cuda/ccuda.pyx":797
 * 
 * cdef CUresult cuGraphGetNodes(CUgraph hGraph, CUgraphNode* nodes, size_t* numNodes) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphGetNodes(hGraph, nodes, numNodes)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphGetRootNodes(CUgraph hGraph, CUgraphNode* rootNodes, size_t* numRootNodes) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphGetNodes(__pyx_v_hGraph, __pyx_v_nodes, __pyx_v_numNodes); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 797, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":796
 *     return ccuda._cuGraphNodeGetType(hNode, typename)
 * 
 * cdef CUresult cuGraphGetNodes(CUgraph hGraph, CUgraphNode* nodes, size_t* numNodes) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphGetNodes(hGraph, nodes, numNodes)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphGetNodes", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":799
 *     return ccuda._cuGraphGetNodes(hGraph, nodes, numNodes)
 * 
 * cdef CUresult cuGraphGetRootNodes(CUgraph hGraph, CUgraphNode* rootNodes, size_t* numRootNodes) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphGetRootNodes(hGraph, rootNodes, numRootNodes)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphGetRootNodes(__pyx_t_4cuda_5ccuda_CUgraph __pyx_v_hGraph, __pyx_t_4cuda_5ccuda_CUgraphNode *__pyx_v_rootNodes, size_t *__pyx_v_numRootNodes) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphGetRootNodes", __pyx_f[0], 799, 1, __PYX_ERR(0, 799, __pyx_L1_error));

  /* "cuda/ccuda.pyx":800
 * 
 * cdef CUresult cuGraphGetRootNodes(CUgraph hGraph, CUgraphNode* rootNodes, size_t* numRootNodes) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphGetRootNodes(hGraph, rootNodes, numRootNodes)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphGetEdges(CUgraph hGraph, CUgraphNode* from_, CUgraphNode* to, size_t* numEdges) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphGetRootNodes(__pyx_v_hGraph, __pyx_v_rootNodes, __pyx_v_numRootNodes); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 800, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":799
 *     return ccuda._cuGraphGetNodes(hGraph, nodes, numNodes)
 * 
 * cdef CUresult cuGraphGetRootNodes(CUgraph hGraph, CUgraphNode* rootNodes, size_t* numRootNodes) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphGetRootNodes(hGraph, rootNodes, numRootNodes)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphGetRootNodes", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":802
 *     return ccuda._cuGraphGetRootNodes(hGraph, rootNodes, numRootNodes)
 * 
 * cdef CUresult cuGraphGetEdges(CUgraph hGraph, CUgraphNode* from_, CUgraphNode* to, size_t* numEdges) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphGetEdges(hGraph, from_, to, numEdges)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphGetEdges(__pyx_t_4cuda_5ccuda_CUgraph __pyx_v_hGraph, __pyx_t_4cuda_5ccuda_CUgraphNode *__pyx_v_from_, __pyx_t_4cuda_5ccuda_CUgraphNode *__pyx_v_to, size_t *__pyx_v_numEdges) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphGetEdges", __pyx_f[0], 802, 1, __PYX_ERR(0, 802, __pyx_L1_error));

  /* "cuda/ccuda.pyx":803
 * 
 * cdef CUresult cuGraphGetEdges(CUgraph hGraph, CUgraphNode* from_, CUgraphNode* to, size_t* numEdges) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphGetEdges(hGraph, from_, to, numEdges)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphNodeGetDependencies(CUgraphNode hNode, CUgraphNode* dependencies, size_t* numDependencies) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphGetEdges(__pyx_v_hGraph, __pyx_v_from_, __pyx_v_to, __pyx_v_numEdges); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 803, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":802
 *     return ccuda._cuGraphGetRootNodes(hGraph, rootNodes, numRootNodes)
 * 
 * cdef CUresult cuGraphGetEdges(CUgraph hGraph, CUgraphNode* from_, CUgraphNode* to, size_t* numEdges) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphGetEdges(hGraph, from_, to, numEdges)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphGetEdges", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":805
 *     return ccuda._cuGraphGetEdges(hGraph, from_, to, numEdges)
 * 
 * cdef CUresult cuGraphNodeGetDependencies(CUgraphNode hNode, CUgraphNode* dependencies, size_t* numDependencies) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphNodeGetDependencies(hNode, dependencies, numDependencies)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphNodeGetDependencies(__pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUgraphNode *__pyx_v_dependencies, size_t *__pyx_v_numDependencies) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphNodeGetDependencies", __pyx_f[0], 805, 1, __PYX_ERR(0, 805, __pyx_L1_error));

  /* "cuda/ccuda.pyx":806
 * 
 * cdef CUresult cuGraphNodeGetDependencies(CUgraphNode hNode, CUgraphNode* dependencies, size_t* numDependencies) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphNodeGetDependencies(hNode, dependencies, numDependencies)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphNodeGetDependentNodes(CUgraphNode hNode, CUgraphNode* dependentNodes, size_t* numDependentNodes) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphNodeGetDependencies(__pyx_v_hNode, __pyx_v_dependencies, __pyx_v_numDependencies); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 806, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":805
 *     return ccuda._cuGraphGetEdges(hGraph, from_, to, numEdges)
 * 
 * cdef CUresult cuGraphNodeGetDependencies(CUgraphNode hNode, CUgraphNode* dependencies, size_t* numDependencies) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphNodeGetDependencies(hNode, dependencies, numDependencies)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphNodeGetDependencies", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":808
 *     return ccuda._cuGraphNodeGetDependencies(hNode, dependencies, numDependencies)
 * 
 * cdef CUresult cuGraphNodeGetDependentNodes(CUgraphNode hNode, CUgraphNode* dependentNodes, size_t* numDependentNodes) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphNodeGetDependentNodes(hNode, dependentNodes, numDependentNodes)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphNodeGetDependentNodes(__pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUgraphNode *__pyx_v_dependentNodes, size_t *__pyx_v_numDependentNodes) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphNodeGetDependentNodes", __pyx_f[0], 808, 1, __PYX_ERR(0, 808, __pyx_L1_error));

  /* "cuda/ccuda.pyx":809
 * 
 * cdef CUresult cuGraphNodeGetDependentNodes(CUgraphNode hNode, CUgraphNode* dependentNodes, size_t* numDependentNodes) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphNodeGetDependentNodes(hNode, dependentNodes, numDependentNodes)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphAddDependencies(CUgraph hGraph, const CUgraphNode* from_, const CUgraphNode* to, size_t numDependencies) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphNodeGetDependentNodes(__pyx_v_hNode, __pyx_v_dependentNodes, __pyx_v_numDependentNodes); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 809, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":808
 *     return ccuda._cuGraphNodeGetDependencies(hNode, dependencies, numDependencies)
 * 
 * cdef CUresult cuGraphNodeGetDependentNodes(CUgraphNode hNode, CUgraphNode* dependentNodes, size_t* numDependentNodes) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphNodeGetDependentNodes(hNode, dependentNodes, numDependentNodes)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphNodeGetDependentNodes", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":811
 *     return ccuda._cuGraphNodeGetDependentNodes(hNode, dependentNodes, numDependentNodes)
 * 
 * cdef CUresult cuGraphAddDependencies(CUgraph hGraph, const CUgraphNode* from_, const CUgraphNode* to, size_t numDependencies) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphAddDependencies(hGraph, from_, to, numDependencies)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphAddDependencies(__pyx_t_4cuda_5ccuda_CUgraph __pyx_v_hGraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *__pyx_v_from_, __pyx_t_4cuda_5ccuda_CUgraphNode const *__pyx_v_to, size_t __pyx_v_numDependencies) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphAddDependencies", __pyx_f[0], 811, 1, __PYX_ERR(0, 811, __pyx_L1_error));

  /* "cuda/ccuda.pyx":812
 * 
 * cdef CUresult cuGraphAddDependencies(CUgraph hGraph, const CUgraphNode* from_, const CUgraphNode* to, size_t numDependencies) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphAddDependencies(hGraph, from_, to, numDependencies)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphRemoveDependencies(CUgraph hGraph, const CUgraphNode* from_, const CUgraphNode* to, size_t numDependencies) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddDependencies(__pyx_v_hGraph, __pyx_v_from_, __pyx_v_to, __pyx_v_numDependencies); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 812, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":811
 *     return ccuda._cuGraphNodeGetDependentNodes(hNode, dependentNodes, numDependentNodes)
 * 
 * cdef CUresult cuGraphAddDependencies(CUgraph hGraph, const CUgraphNode* from_, const CUgraphNode* to, size_t numDependencies) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphAddDependencies(hGraph, from_, to, numDependencies)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphAddDependencies", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":814
 *     return ccuda._cuGraphAddDependencies(hGraph, from_, to, numDependencies)
 * 
 * cdef CUresult cuGraphRemoveDependencies(CUgraph hGraph, const CUgraphNode* from_, const CUgraphNode* to, size_t numDependencies) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphRemoveDependencies(hGraph, from_, to, numDependencies)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphRemoveDependencies(__pyx_t_4cuda_5ccuda_CUgraph __pyx_v_hGraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *__pyx_v_from_, __pyx_t_4cuda_5ccuda_CUgraphNode const *__pyx_v_to, size_t __pyx_v_numDependencies) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphRemoveDependencies", __pyx_f[0], 814, 1, __PYX_ERR(0, 814, __pyx_L1_error));

  /* "cuda/ccuda.pyx":815
 * 
 * cdef CUresult cuGraphRemoveDependencies(CUgraph hGraph, const CUgraphNode* from_, const CUgraphNode* to, size_t numDependencies) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphRemoveDependencies(hGraph, from_, to, numDependencies)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphDestroyNode(CUgraphNode hNode) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphRemoveDependencies(__pyx_v_hGraph, __pyx_v_from_, __pyx_v_to, __pyx_v_numDependencies); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 815, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":814
 *     return ccuda._cuGraphAddDependencies(hGraph, from_, to, numDependencies)
 * 
 * cdef CUresult cuGraphRemoveDependencies(CUgraph hGraph, const CUgraphNode* from_, const CUgraphNode* to, size_t numDependencies) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphRemoveDependencies(hGraph, from_, to, numDependencies)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphRemoveDependencies", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":817
 *     return ccuda._cuGraphRemoveDependencies(hGraph, from_, to, numDependencies)
 * 
 * cdef CUresult cuGraphDestroyNode(CUgraphNode hNode) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphDestroyNode(hNode)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphDestroyNode(__pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphDestroyNode", __pyx_f[0], 817, 1, __PYX_ERR(0, 817, __pyx_L1_error));

  /* "cuda/ccuda.pyx":818
 * 
 * cdef CUresult cuGraphDestroyNode(CUgraphNode hNode) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphDestroyNode(hNode)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphInstantiate(CUgraphExec* phGraphExec, CUgraph hGraph, CUgraphNode* phErrorNode, char* logBuffer, size_t bufferSize) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphDestroyNode(__pyx_v_hNode); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 818, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":817
 *     return ccuda._cuGraphRemoveDependencies(hGraph, from_, to, numDependencies)
 * 
 * cdef CUresult cuGraphDestroyNode(CUgraphNode hNode) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphDestroyNode(hNode)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphDestroyNode", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":820
 *     return ccuda._cuGraphDestroyNode(hNode)
 * 
 * cdef CUresult cuGraphInstantiate(CUgraphExec* phGraphExec, CUgraph hGraph, CUgraphNode* phErrorNode, char* logBuffer, size_t bufferSize) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphInstantiate_v2(phGraphExec, hGraph, phErrorNode, logBuffer, bufferSize)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphInstantiate(__pyx_t_4cuda_5ccuda_CUgraphExec *__pyx_v_phGraphExec, __pyx_t_4cuda_5ccuda_CUgraph __pyx_v_hGraph, __pyx_t_4cuda_5ccuda_CUgraphNode *__pyx_v_phErrorNode, char *__pyx_v_logBuffer, size_t __pyx_v_bufferSize) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphInstantiate", __pyx_f[0], 820, 1, __PYX_ERR(0, 820, __pyx_L1_error));

  /* "cuda/ccuda.pyx":821
 * 
 * cdef CUresult cuGraphInstantiate(CUgraphExec* phGraphExec, CUgraph hGraph, CUgraphNode* phErrorNode, char* logBuffer, size_t bufferSize) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphInstantiate_v2(phGraphExec, hGraph, phErrorNode, logBuffer, bufferSize)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphInstantiateWithFlags(CUgraphExec* phGraphExec, CUgraph hGraph, unsigned long long flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphInstantiate_v2(__pyx_v_phGraphExec, __pyx_v_hGraph, __pyx_v_phErrorNode, __pyx_v_logBuffer, __pyx_v_bufferSize); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 821, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":820
 *     return ccuda._cuGraphDestroyNode(hNode)
 * 
 * cdef CUresult cuGraphInstantiate(CUgraphExec* phGraphExec, CUgraph hGraph, CUgraphNode* phErrorNode, char* logBuffer, size_t bufferSize) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphInstantiate_v2(phGraphExec, hGraph, phErrorNode, logBuffer, bufferSize)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphInstantiate", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":823
 *     return ccuda._cuGraphInstantiate_v2(phGraphExec, hGraph, phErrorNode, logBuffer, bufferSize)
 * 
 * cdef CUresult cuGraphInstantiateWithFlags(CUgraphExec* phGraphExec, CUgraph hGraph, unsigned long long flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphInstantiateWithFlags(phGraphExec, hGraph, flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphInstantiateWithFlags(__pyx_t_4cuda_5ccuda_CUgraphExec *__pyx_v_phGraphExec, __pyx_t_4cuda_5ccuda_CUgraph __pyx_v_hGraph, unsigned PY_LONG_LONG __pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphInstantiateWithFlags", __pyx_f[0], 823, 1, __PYX_ERR(0, 823, __pyx_L1_error));

  /* "cuda/ccuda.pyx":824
 * 
 * cdef CUresult cuGraphInstantiateWithFlags(CUgraphExec* phGraphExec, CUgraph hGraph, unsigned long long flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphInstantiateWithFlags(phGraphExec, hGraph, flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphExecKernelNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_KERNEL_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphInstantiateWithFlags(__pyx_v_phGraphExec, __pyx_v_hGraph, __pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 824, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":823
 *     return ccuda._cuGraphInstantiate_v2(phGraphExec, hGraph, phErrorNode, logBuffer, bufferSize)
 * 
 * cdef CUresult cuGraphInstantiateWithFlags(CUgraphExec* phGraphExec, CUgraph hGraph, unsigned long long flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphInstantiateWithFlags(phGraphExec, hGraph, flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphInstantiateWithFlags", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":826
 *     return ccuda._cuGraphInstantiateWithFlags(phGraphExec, hGraph, flags)
 * 
 * cdef CUresult cuGraphExecKernelNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_KERNEL_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphExecKernelNodeSetParams(hGraphExec, hNode, nodeParams)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphExecKernelNodeSetParams(__pyx_t_4cuda_5ccuda_CUgraphExec __pyx_v_hGraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUDA_KERNEL_NODE_PARAMS const *__pyx_v_nodeParams) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphExecKernelNodeSetParams", __pyx_f[0], 826, 1, __PYX_ERR(0, 826, __pyx_L1_error));

  /* "cuda/ccuda.pyx":827
 * 
 * cdef CUresult cuGraphExecKernelNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_KERNEL_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphExecKernelNodeSetParams(hGraphExec, hNode, nodeParams)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphExecMemcpyNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_MEMCPY3D* copyParams, CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecKernelNodeSetParams(__pyx_v_hGraphExec, __pyx_v_hNode, __pyx_v_nodeParams); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 827, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":826
 *     return ccuda._cuGraphInstantiateWithFlags(phGraphExec, hGraph, flags)
 * 
 * cdef CUresult cuGraphExecKernelNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_KERNEL_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphExecKernelNodeSetParams(hGraphExec, hNode, nodeParams)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphExecKernelNodeSetParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":829
 *     return ccuda._cuGraphExecKernelNodeSetParams(hGraphExec, hNode, nodeParams)
 * 
 * cdef CUresult cuGraphExecMemcpyNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_MEMCPY3D* copyParams, CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphExecMemcpyNodeSetParams(hGraphExec, hNode, copyParams, ctx)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphExecMemcpyNodeSetParams(__pyx_t_4cuda_5ccuda_CUgraphExec __pyx_v_hGraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D const *__pyx_v_copyParams, __pyx_t_4cuda_5ccuda_CUcontext __pyx_v_ctx) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphExecMemcpyNodeSetParams", __pyx_f[0], 829, 1, __PYX_ERR(0, 829, __pyx_L1_error));

  /* "cuda/ccuda.pyx":830
 * 
 * cdef CUresult cuGraphExecMemcpyNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_MEMCPY3D* copyParams, CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphExecMemcpyNodeSetParams(hGraphExec, hNode, copyParams, ctx)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphExecMemsetNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_MEMSET_NODE_PARAMS* memsetParams, CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecMemcpyNodeSetParams(__pyx_v_hGraphExec, __pyx_v_hNode, __pyx_v_copyParams, __pyx_v_ctx); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 830, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":829
 *     return ccuda._cuGraphExecKernelNodeSetParams(hGraphExec, hNode, nodeParams)
 * 
 * cdef CUresult cuGraphExecMemcpyNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_MEMCPY3D* copyParams, CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphExecMemcpyNodeSetParams(hGraphExec, hNode, copyParams, ctx)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphExecMemcpyNodeSetParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":832
 *     return ccuda._cuGraphExecMemcpyNodeSetParams(hGraphExec, hNode, copyParams, ctx)
 * 
 * cdef CUresult cuGraphExecMemsetNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_MEMSET_NODE_PARAMS* memsetParams, CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphExecMemsetNodeSetParams(hGraphExec, hNode, memsetParams, ctx)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphExecMemsetNodeSetParams(__pyx_t_4cuda_5ccuda_CUgraphExec __pyx_v_hGraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUDA_MEMSET_NODE_PARAMS const *__pyx_v_memsetParams, __pyx_t_4cuda_5ccuda_CUcontext __pyx_v_ctx) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphExecMemsetNodeSetParams", __pyx_f[0], 832, 1, __PYX_ERR(0, 832, __pyx_L1_error));

  /* "cuda/ccuda.pyx":833
 * 
 * cdef CUresult cuGraphExecMemsetNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_MEMSET_NODE_PARAMS* memsetParams, CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphExecMemsetNodeSetParams(hGraphExec, hNode, memsetParams, ctx)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphExecHostNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_HOST_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecMemsetNodeSetParams(__pyx_v_hGraphExec, __pyx_v_hNode, __pyx_v_memsetParams, __pyx_v_ctx); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 833, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":832
 *     return ccuda._cuGraphExecMemcpyNodeSetParams(hGraphExec, hNode, copyParams, ctx)
 * 
 * cdef CUresult cuGraphExecMemsetNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_MEMSET_NODE_PARAMS* memsetParams, CUcontext ctx) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphExecMemsetNodeSetParams(hGraphExec, hNode, memsetParams, ctx)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphExecMemsetNodeSetParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":835
 *     return ccuda._cuGraphExecMemsetNodeSetParams(hGraphExec, hNode, memsetParams, ctx)
 * 
 * cdef CUresult cuGraphExecHostNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_HOST_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphExecHostNodeSetParams(hGraphExec, hNode, nodeParams)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphExecHostNodeSetParams(__pyx_t_4cuda_5ccuda_CUgraphExec __pyx_v_hGraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUDA_HOST_NODE_PARAMS const *__pyx_v_nodeParams) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphExecHostNodeSetParams", __pyx_f[0], 835, 1, __PYX_ERR(0, 835, __pyx_L1_error));

  /* "cuda/ccuda.pyx":836
 * 
 * cdef CUresult cuGraphExecHostNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_HOST_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphExecHostNodeSetParams(hGraphExec, hNode, nodeParams)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphExecChildGraphNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, CUgraph childGraph) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecHostNodeSetParams(__pyx_v_hGraphExec, __pyx_v_hNode, __pyx_v_nodeParams); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 836, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":835
 *     return ccuda._cuGraphExecMemsetNodeSetParams(hGraphExec, hNode, memsetParams, ctx)
 * 
 * cdef CUresult cuGraphExecHostNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_HOST_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphExecHostNodeSetParams(hGraphExec, hNode, nodeParams)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphExecHostNodeSetParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":838
 *     return ccuda._cuGraphExecHostNodeSetParams(hGraphExec, hNode, nodeParams)
 * 
 * cdef CUresult cuGraphExecChildGraphNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, CUgraph childGraph) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphExecChildGraphNodeSetParams(hGraphExec, hNode, childGraph)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphExecChildGraphNodeSetParams(__pyx_t_4cuda_5ccuda_CUgraphExec __pyx_v_hGraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUgraph __pyx_v_childGraph) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphExecChildGraphNodeSetParams", __pyx_f[0], 838, 1, __PYX_ERR(0, 838, __pyx_L1_error));

  /* "cuda/ccuda.pyx":839
 * 
 * cdef CUresult cuGraphExecChildGraphNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, CUgraph childGraph) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphExecChildGraphNodeSetParams(hGraphExec, hNode, childGraph)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphExecEventRecordNodeSetEvent(CUgraphExec hGraphExec, CUgraphNode hNode, CUevent event) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecChildGraphNodeSetParams(__pyx_v_hGraphExec, __pyx_v_hNode, __pyx_v_childGraph); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 839, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":838
 *     return ccuda._cuGraphExecHostNodeSetParams(hGraphExec, hNode, nodeParams)
 * 
 * cdef CUresult cuGraphExecChildGraphNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, CUgraph childGraph) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphExecChildGraphNodeSetParams(hGraphExec, hNode, childGraph)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphExecChildGraphNodeSetParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":841
 *     return ccuda._cuGraphExecChildGraphNodeSetParams(hGraphExec, hNode, childGraph)
 * 
 * cdef CUresult cuGraphExecEventRecordNodeSetEvent(CUgraphExec hGraphExec, CUgraphNode hNode, CUevent event) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphExecEventRecordNodeSetEvent(hGraphExec, hNode, event)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphExecEventRecordNodeSetEvent(__pyx_t_4cuda_5ccuda_CUgraphExec __pyx_v_hGraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUevent __pyx_v_event) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphExecEventRecordNodeSetEvent", __pyx_f[0], 841, 1, __PYX_ERR(0, 841, __pyx_L1_error));

  /* "cuda/ccuda.pyx":842
 * 
 * cdef CUresult cuGraphExecEventRecordNodeSetEvent(CUgraphExec hGraphExec, CUgraphNode hNode, CUevent event) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphExecEventRecordNodeSetEvent(hGraphExec, hNode, event)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphExecEventWaitNodeSetEvent(CUgraphExec hGraphExec, CUgraphNode hNode, CUevent event) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecEventRecordNodeSetEvent(__pyx_v_hGraphExec, __pyx_v_hNode, __pyx_v_event); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 842, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":841
 *     return ccuda._cuGraphExecChildGraphNodeSetParams(hGraphExec, hNode, childGraph)
 * 
 * cdef CUresult cuGraphExecEventRecordNodeSetEvent(CUgraphExec hGraphExec, CUgraphNode hNode, CUevent event) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphExecEventRecordNodeSetEvent(hGraphExec, hNode, event)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphExecEventRecordNodeSetEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":844
 *     return ccuda._cuGraphExecEventRecordNodeSetEvent(hGraphExec, hNode, event)
 * 
 * cdef CUresult cuGraphExecEventWaitNodeSetEvent(CUgraphExec hGraphExec, CUgraphNode hNode, CUevent event) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphExecEventWaitNodeSetEvent(hGraphExec, hNode, event)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphExecEventWaitNodeSetEvent(__pyx_t_4cuda_5ccuda_CUgraphExec __pyx_v_hGraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUevent __pyx_v_event) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphExecEventWaitNodeSetEvent", __pyx_f[0], 844, 1, __PYX_ERR(0, 844, __pyx_L1_error));

  /* "cuda/ccuda.pyx":845
 * 
 * cdef CUresult cuGraphExecEventWaitNodeSetEvent(CUgraphExec hGraphExec, CUgraphNode hNode, CUevent event) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphExecEventWaitNodeSetEvent(hGraphExec, hNode, event)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphExecExternalSemaphoresSignalNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_EXT_SEM_SIGNAL_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecEventWaitNodeSetEvent(__pyx_v_hGraphExec, __pyx_v_hNode, __pyx_v_event); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 845, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":844
 *     return ccuda._cuGraphExecEventRecordNodeSetEvent(hGraphExec, hNode, event)
 * 
 * cdef CUresult cuGraphExecEventWaitNodeSetEvent(CUgraphExec hGraphExec, CUgraphNode hNode, CUevent event) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphExecEventWaitNodeSetEvent(hGraphExec, hNode, event)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphExecEventWaitNodeSetEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":847
 *     return ccuda._cuGraphExecEventWaitNodeSetEvent(hGraphExec, hNode, event)
 * 
 * cdef CUresult cuGraphExecExternalSemaphoresSignalNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_EXT_SEM_SIGNAL_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphExecExternalSemaphoresSignalNodeSetParams(hGraphExec, hNode, nodeParams)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphExecExternalSemaphoresSignalNodeSetParams(__pyx_t_4cuda_5ccuda_CUgraphExec __pyx_v_hGraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_SIGNAL_NODE_PARAMS const *__pyx_v_nodeParams) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphExecExternalSemaphoresSignalNodeSetParams", __pyx_f[0], 847, 1, __PYX_ERR(0, 847, __pyx_L1_error));

  /* "cuda/ccuda.pyx":848
 * 
 * cdef CUresult cuGraphExecExternalSemaphoresSignalNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_EXT_SEM_SIGNAL_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphExecExternalSemaphoresSignalNodeSetParams(hGraphExec, hNode, nodeParams)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphExecExternalSemaphoresWaitNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_EXT_SEM_WAIT_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecExternalSemaphoresSignalNodeSetParams(__pyx_v_hGraphExec, __pyx_v_hNode, __pyx_v_nodeParams); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 848, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":847
 *     return ccuda._cuGraphExecEventWaitNodeSetEvent(hGraphExec, hNode, event)
 * 
 * cdef CUresult cuGraphExecExternalSemaphoresSignalNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_EXT_SEM_SIGNAL_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphExecExternalSemaphoresSignalNodeSetParams(hGraphExec, hNode, nodeParams)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphExecExternalSemaphoresSignalNodeSetParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":850
 *     return ccuda._cuGraphExecExternalSemaphoresSignalNodeSetParams(hGraphExec, hNode, nodeParams)
 * 
 * cdef CUresult cuGraphExecExternalSemaphoresWaitNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_EXT_SEM_WAIT_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphExecExternalSemaphoresWaitNodeSetParams(hGraphExec, hNode, nodeParams)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphExecExternalSemaphoresWaitNodeSetParams(__pyx_t_4cuda_5ccuda_CUgraphExec __pyx_v_hGraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_WAIT_NODE_PARAMS const *__pyx_v_nodeParams) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphExecExternalSemaphoresWaitNodeSetParams", __pyx_f[0], 850, 1, __PYX_ERR(0, 850, __pyx_L1_error));

  /* "cuda/ccuda.pyx":851
 * 
 * cdef CUresult cuGraphExecExternalSemaphoresWaitNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_EXT_SEM_WAIT_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphExecExternalSemaphoresWaitNodeSetParams(hGraphExec, hNode, nodeParams)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphUpload(CUgraphExec hGraphExec, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecExternalSemaphoresWaitNodeSetParams(__pyx_v_hGraphExec, __pyx_v_hNode, __pyx_v_nodeParams); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 851, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":850
 *     return ccuda._cuGraphExecExternalSemaphoresSignalNodeSetParams(hGraphExec, hNode, nodeParams)
 * 
 * cdef CUresult cuGraphExecExternalSemaphoresWaitNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_EXT_SEM_WAIT_NODE_PARAMS* nodeParams) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphExecExternalSemaphoresWaitNodeSetParams(hGraphExec, hNode, nodeParams)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphExecExternalSemaphoresWaitNodeSetParams", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":853
 *     return ccuda._cuGraphExecExternalSemaphoresWaitNodeSetParams(hGraphExec, hNode, nodeParams)
 * 
 * cdef CUresult cuGraphUpload(CUgraphExec hGraphExec, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphUpload(hGraphExec, hStream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphUpload(__pyx_t_4cuda_5ccuda_CUgraphExec __pyx_v_hGraphExec, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphUpload", __pyx_f[0], 853, 1, __PYX_ERR(0, 853, __pyx_L1_error));

  /* "cuda/ccuda.pyx":854
 * 
 * cdef CUresult cuGraphUpload(CUgraphExec hGraphExec, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphUpload(hGraphExec, hStream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphLaunch(CUgraphExec hGraphExec, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphUpload(__pyx_v_hGraphExec, __pyx_v_hStream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 854, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":853
 *     return ccuda._cuGraphExecExternalSemaphoresWaitNodeSetParams(hGraphExec, hNode, nodeParams)
 * 
 * cdef CUresult cuGraphUpload(CUgraphExec hGraphExec, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphUpload(hGraphExec, hStream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphUpload", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":856
 *     return ccuda._cuGraphUpload(hGraphExec, hStream)
 * 
 * cdef CUresult cuGraphLaunch(CUgraphExec hGraphExec, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphLaunch(hGraphExec, hStream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphLaunch(__pyx_t_4cuda_5ccuda_CUgraphExec __pyx_v_hGraphExec, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphLaunch", __pyx_f[0], 856, 1, __PYX_ERR(0, 856, __pyx_L1_error));

  /* "cuda/ccuda.pyx":857
 * 
 * cdef CUresult cuGraphLaunch(CUgraphExec hGraphExec, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphLaunch(hGraphExec, hStream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphExecDestroy(CUgraphExec hGraphExec) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphLaunch(__pyx_v_hGraphExec, __pyx_v_hStream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 857, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":856
 *     return ccuda._cuGraphUpload(hGraphExec, hStream)
 * 
 * cdef CUresult cuGraphLaunch(CUgraphExec hGraphExec, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphLaunch(hGraphExec, hStream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphLaunch", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":859
 *     return ccuda._cuGraphLaunch(hGraphExec, hStream)
 * 
 * cdef CUresult cuGraphExecDestroy(CUgraphExec hGraphExec) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphExecDestroy(hGraphExec)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphExecDestroy(__pyx_t_4cuda_5ccuda_CUgraphExec __pyx_v_hGraphExec) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphExecDestroy", __pyx_f[0], 859, 1, __PYX_ERR(0, 859, __pyx_L1_error));

  /* "cuda/ccuda.pyx":860
 * 
 * cdef CUresult cuGraphExecDestroy(CUgraphExec hGraphExec) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphExecDestroy(hGraphExec)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphDestroy(CUgraph hGraph) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecDestroy(__pyx_v_hGraphExec); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 860, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":859
 *     return ccuda._cuGraphLaunch(hGraphExec, hStream)
 * 
 * cdef CUresult cuGraphExecDestroy(CUgraphExec hGraphExec) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphExecDestroy(hGraphExec)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphExecDestroy", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":862
 *     return ccuda._cuGraphExecDestroy(hGraphExec)
 * 
 * cdef CUresult cuGraphDestroy(CUgraph hGraph) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphDestroy(hGraph)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphDestroy(__pyx_t_4cuda_5ccuda_CUgraph __pyx_v_hGraph) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphDestroy", __pyx_f[0], 862, 1, __PYX_ERR(0, 862, __pyx_L1_error));

  /* "cuda/ccuda.pyx":863
 * 
 * cdef CUresult cuGraphDestroy(CUgraph hGraph) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphDestroy(hGraph)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphExecUpdate(CUgraphExec hGraphExec, CUgraph hGraph, CUgraphNode* hErrorNode_out, CUgraphExecUpdateResult* updateResult_out) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphDestroy(__pyx_v_hGraph); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 863, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":862
 *     return ccuda._cuGraphExecDestroy(hGraphExec)
 * 
 * cdef CUresult cuGraphDestroy(CUgraph hGraph) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphDestroy(hGraph)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphDestroy", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":865
 *     return ccuda._cuGraphDestroy(hGraph)
 * 
 * cdef CUresult cuGraphExecUpdate(CUgraphExec hGraphExec, CUgraph hGraph, CUgraphNode* hErrorNode_out, CUgraphExecUpdateResult* updateResult_out) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphExecUpdate(hGraphExec, hGraph, hErrorNode_out, updateResult_out)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphExecUpdate(__pyx_t_4cuda_5ccuda_CUgraphExec __pyx_v_hGraphExec, __pyx_t_4cuda_5ccuda_CUgraph __pyx_v_hGraph, __pyx_t_4cuda_5ccuda_CUgraphNode *__pyx_v_hErrorNode_out, __pyx_t_4cuda_5ccuda_CUgraphExecUpdateResult *__pyx_v_updateResult_out) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphExecUpdate", __pyx_f[0], 865, 1, __PYX_ERR(0, 865, __pyx_L1_error));

  /* "cuda/ccuda.pyx":866
 * 
 * cdef CUresult cuGraphExecUpdate(CUgraphExec hGraphExec, CUgraph hGraph, CUgraphNode* hErrorNode_out, CUgraphExecUpdateResult* updateResult_out) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphExecUpdate(hGraphExec, hGraph, hErrorNode_out, updateResult_out)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphKernelNodeCopyAttributes(CUgraphNode dst, CUgraphNode src) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecUpdate(__pyx_v_hGraphExec, __pyx_v_hGraph, __pyx_v_hErrorNode_out, __pyx_v_updateResult_out); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 866, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":865
 *     return ccuda._cuGraphDestroy(hGraph)
 * 
 * cdef CUresult cuGraphExecUpdate(CUgraphExec hGraphExec, CUgraph hGraph, CUgraphNode* hErrorNode_out, CUgraphExecUpdateResult* updateResult_out) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphExecUpdate(hGraphExec, hGraph, hErrorNode_out, updateResult_out)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphExecUpdate", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":868
 *     return ccuda._cuGraphExecUpdate(hGraphExec, hGraph, hErrorNode_out, updateResult_out)
 * 
 * cdef CUresult cuGraphKernelNodeCopyAttributes(CUgraphNode dst, CUgraphNode src) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphKernelNodeCopyAttributes(dst, src)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphKernelNodeCopyAttributes(__pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_dst, __pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_src) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphKernelNodeCopyAttributes", __pyx_f[0], 868, 1, __PYX_ERR(0, 868, __pyx_L1_error));

  /* "cuda/ccuda.pyx":869
 * 
 * cdef CUresult cuGraphKernelNodeCopyAttributes(CUgraphNode dst, CUgraphNode src) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphKernelNodeCopyAttributes(dst, src)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphKernelNodeGetAttribute(CUgraphNode hNode, CUkernelNodeAttrID attr, CUkernelNodeAttrValue* value_out) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphKernelNodeCopyAttributes(__pyx_v_dst, __pyx_v_src); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 869, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":868
 *     return ccuda._cuGraphExecUpdate(hGraphExec, hGraph, hErrorNode_out, updateResult_out)
 * 
 * cdef CUresult cuGraphKernelNodeCopyAttributes(CUgraphNode dst, CUgraphNode src) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphKernelNodeCopyAttributes(dst, src)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphKernelNodeCopyAttributes", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":871
 *     return ccuda._cuGraphKernelNodeCopyAttributes(dst, src)
 * 
 * cdef CUresult cuGraphKernelNodeGetAttribute(CUgraphNode hNode, CUkernelNodeAttrID attr, CUkernelNodeAttrValue* value_out) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphKernelNodeGetAttribute(hNode, attr, value_out)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphKernelNodeGetAttribute(__pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUkernelNodeAttrID __pyx_v_attr, __pyx_t_4cuda_5ccuda_CUkernelNodeAttrValue *__pyx_v_value_out) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphKernelNodeGetAttribute", __pyx_f[0], 871, 1, __PYX_ERR(0, 871, __pyx_L1_error));

  /* "cuda/ccuda.pyx":872
 * 
 * cdef CUresult cuGraphKernelNodeGetAttribute(CUgraphNode hNode, CUkernelNodeAttrID attr, CUkernelNodeAttrValue* value_out) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphKernelNodeGetAttribute(hNode, attr, value_out)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphKernelNodeSetAttribute(CUgraphNode hNode, CUkernelNodeAttrID attr, const CUkernelNodeAttrValue* value) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphKernelNodeGetAttribute(__pyx_v_hNode, __pyx_v_attr, __pyx_v_value_out); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 872, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":871
 *     return ccuda._cuGraphKernelNodeCopyAttributes(dst, src)
 * 
 * cdef CUresult cuGraphKernelNodeGetAttribute(CUgraphNode hNode, CUkernelNodeAttrID attr, CUkernelNodeAttrValue* value_out) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphKernelNodeGetAttribute(hNode, attr, value_out)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphKernelNodeGetAttribute", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":874
 *     return ccuda._cuGraphKernelNodeGetAttribute(hNode, attr, value_out)
 * 
 * cdef CUresult cuGraphKernelNodeSetAttribute(CUgraphNode hNode, CUkernelNodeAttrID attr, const CUkernelNodeAttrValue* value) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphKernelNodeSetAttribute(hNode, attr, value)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphKernelNodeSetAttribute(__pyx_t_4cuda_5ccuda_CUgraphNode __pyx_v_hNode, __pyx_t_4cuda_5ccuda_CUkernelNodeAttrID __pyx_v_attr, __pyx_t_4cuda_5ccuda_CUkernelNodeAttrValue const *__pyx_v_value) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphKernelNodeSetAttribute", __pyx_f[0], 874, 1, __PYX_ERR(0, 874, __pyx_L1_error));

  /* "cuda/ccuda.pyx":875
 * 
 * cdef CUresult cuGraphKernelNodeSetAttribute(CUgraphNode hNode, CUkernelNodeAttrID attr, const CUkernelNodeAttrValue* value) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphKernelNodeSetAttribute(hNode, attr, value)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphDebugDotPrint(CUgraph hGraph, const char* path, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphKernelNodeSetAttribute(__pyx_v_hNode, __pyx_v_attr, __pyx_v_value); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 875, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":874
 *     return ccuda._cuGraphKernelNodeGetAttribute(hNode, attr, value_out)
 * 
 * cdef CUresult cuGraphKernelNodeSetAttribute(CUgraphNode hNode, CUkernelNodeAttrID attr, const CUkernelNodeAttrValue* value) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphKernelNodeSetAttribute(hNode, attr, value)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphKernelNodeSetAttribute", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":877
 *     return ccuda._cuGraphKernelNodeSetAttribute(hNode, attr, value)
 * 
 * cdef CUresult cuGraphDebugDotPrint(CUgraph hGraph, const char* path, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphDebugDotPrint(hGraph, path, flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphDebugDotPrint(__pyx_t_4cuda_5ccuda_CUgraph __pyx_v_hGraph, char const *__pyx_v_path, unsigned int __pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphDebugDotPrint", __pyx_f[0], 877, 1, __PYX_ERR(0, 877, __pyx_L1_error));

  /* "cuda/ccuda.pyx":878
 * 
 * cdef CUresult cuGraphDebugDotPrint(CUgraph hGraph, const char* path, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphDebugDotPrint(hGraph, path, flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuUserObjectCreate(CUuserObject* object_out, void* ptr, CUhostFn destroy, unsigned int initialRefcount, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphDebugDotPrint(__pyx_v_hGraph, __pyx_v_path, __pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 878, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":877
 *     return ccuda._cuGraphKernelNodeSetAttribute(hNode, attr, value)
 * 
 * cdef CUresult cuGraphDebugDotPrint(CUgraph hGraph, const char* path, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphDebugDotPrint(hGraph, path, flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphDebugDotPrint", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":880
 *     return ccuda._cuGraphDebugDotPrint(hGraph, path, flags)
 * 
 * cdef CUresult cuUserObjectCreate(CUuserObject* object_out, void* ptr, CUhostFn destroy, unsigned int initialRefcount, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuUserObjectCreate(object_out, ptr, destroy, initialRefcount, flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuUserObjectCreate(__pyx_t_4cuda_5ccuda_CUuserObject *__pyx_v_object_out, void *__pyx_v_ptr, __pyx_t_4cuda_5ccuda_CUhostFn __pyx_v_destroy, unsigned int __pyx_v_initialRefcount, unsigned int __pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuUserObjectCreate", __pyx_f[0], 880, 1, __PYX_ERR(0, 880, __pyx_L1_error));

  /* "cuda/ccuda.pyx":881
 * 
 * cdef CUresult cuUserObjectCreate(CUuserObject* object_out, void* ptr, CUhostFn destroy, unsigned int initialRefcount, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuUserObjectCreate(object_out, ptr, destroy, initialRefcount, flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuUserObjectRetain(CUuserObject object, unsigned int count) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuUserObjectCreate(__pyx_v_object_out, __pyx_v_ptr, __pyx_v_destroy, __pyx_v_initialRefcount, __pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 881, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":880
 *     return ccuda._cuGraphDebugDotPrint(hGraph, path, flags)
 * 
 * cdef CUresult cuUserObjectCreate(CUuserObject* object_out, void* ptr, CUhostFn destroy, unsigned int initialRefcount, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuUserObjectCreate(object_out, ptr, destroy, initialRefcount, flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuUserObjectCreate", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":883
 *     return ccuda._cuUserObjectCreate(object_out, ptr, destroy, initialRefcount, flags)
 * 
 * cdef CUresult cuUserObjectRetain(CUuserObject object, unsigned int count) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuUserObjectRetain(object, count)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuUserObjectRetain(__pyx_t_4cuda_5ccuda_CUuserObject __pyx_v_object, unsigned int __pyx_v_count) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuUserObjectRetain", __pyx_f[0], 883, 1, __PYX_ERR(0, 883, __pyx_L1_error));

  /* "cuda/ccuda.pyx":884
 * 
 * cdef CUresult cuUserObjectRetain(CUuserObject object, unsigned int count) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuUserObjectRetain(object, count)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuUserObjectRelease(CUuserObject object, unsigned int count) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuUserObjectRetain(__pyx_v_object, __pyx_v_count); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 884, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":883
 *     return ccuda._cuUserObjectCreate(object_out, ptr, destroy, initialRefcount, flags)
 * 
 * cdef CUresult cuUserObjectRetain(CUuserObject object, unsigned int count) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuUserObjectRetain(object, count)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuUserObjectRetain", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":886
 *     return ccuda._cuUserObjectRetain(object, count)
 * 
 * cdef CUresult cuUserObjectRelease(CUuserObject object, unsigned int count) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuUserObjectRelease(object, count)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuUserObjectRelease(__pyx_t_4cuda_5ccuda_CUuserObject __pyx_v_object, unsigned int __pyx_v_count) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuUserObjectRelease", __pyx_f[0], 886, 1, __PYX_ERR(0, 886, __pyx_L1_error));

  /* "cuda/ccuda.pyx":887
 * 
 * cdef CUresult cuUserObjectRelease(CUuserObject object, unsigned int count) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuUserObjectRelease(object, count)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphRetainUserObject(CUgraph graph, CUuserObject object, unsigned int count, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuUserObjectRelease(__pyx_v_object, __pyx_v_count); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 887, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":886
 *     return ccuda._cuUserObjectRetain(object, count)
 * 
 * cdef CUresult cuUserObjectRelease(CUuserObject object, unsigned int count) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuUserObjectRelease(object, count)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuUserObjectRelease", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":889
 *     return ccuda._cuUserObjectRelease(object, count)
 * 
 * cdef CUresult cuGraphRetainUserObject(CUgraph graph, CUuserObject object, unsigned int count, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphRetainUserObject(graph, object, count, flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphRetainUserObject(__pyx_t_4cuda_5ccuda_CUgraph __pyx_v_graph, __pyx_t_4cuda_5ccuda_CUuserObject __pyx_v_object, unsigned int __pyx_v_count, unsigned int __pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphRetainUserObject", __pyx_f[0], 889, 1, __PYX_ERR(0, 889, __pyx_L1_error));

  /* "cuda/ccuda.pyx":890
 * 
 * cdef CUresult cuGraphRetainUserObject(CUgraph graph, CUuserObject object, unsigned int count, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphRetainUserObject(graph, object, count, flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphReleaseUserObject(CUgraph graph, CUuserObject object, unsigned int count) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphRetainUserObject(__pyx_v_graph, __pyx_v_object, __pyx_v_count, __pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 890, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":889
 *     return ccuda._cuUserObjectRelease(object, count)
 * 
 * cdef CUresult cuGraphRetainUserObject(CUgraph graph, CUuserObject object, unsigned int count, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphRetainUserObject(graph, object, count, flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphRetainUserObject", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":892
 *     return ccuda._cuGraphRetainUserObject(graph, object, count, flags)
 * 
 * cdef CUresult cuGraphReleaseUserObject(CUgraph graph, CUuserObject object, unsigned int count) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphReleaseUserObject(graph, object, count)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphReleaseUserObject(__pyx_t_4cuda_5ccuda_CUgraph __pyx_v_graph, __pyx_t_4cuda_5ccuda_CUuserObject __pyx_v_object, unsigned int __pyx_v_count) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphReleaseUserObject", __pyx_f[0], 892, 1, __PYX_ERR(0, 892, __pyx_L1_error));

  /* "cuda/ccuda.pyx":893
 * 
 * cdef CUresult cuGraphReleaseUserObject(CUgraph graph, CUuserObject object, unsigned int count) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphReleaseUserObject(graph, object, count)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuOccupancyMaxActiveBlocksPerMultiprocessor(int* numBlocks, CUfunction func, int blockSize, size_t dynamicSMemSize) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphReleaseUserObject(__pyx_v_graph, __pyx_v_object, __pyx_v_count); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 893, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":892
 *     return ccuda._cuGraphRetainUserObject(graph, object, count, flags)
 * 
 * cdef CUresult cuGraphReleaseUserObject(CUgraph graph, CUuserObject object, unsigned int count) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphReleaseUserObject(graph, object, count)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphReleaseUserObject", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":895
 *     return ccuda._cuGraphReleaseUserObject(graph, object, count)
 * 
 * cdef CUresult cuOccupancyMaxActiveBlocksPerMultiprocessor(int* numBlocks, CUfunction func, int blockSize, size_t dynamicSMemSize) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuOccupancyMaxActiveBlocksPerMultiprocessor(numBlocks, func, blockSize, dynamicSMemSize)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuOccupancyMaxActiveBlocksPerMultiprocessor(int *__pyx_v_numBlocks, __pyx_t_4cuda_5ccuda_CUfunction __pyx_v_func, int __pyx_v_blockSize, size_t __pyx_v_dynamicSMemSize) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuOccupancyMaxActiveBlocksPerMultiprocessor", __pyx_f[0], 895, 1, __PYX_ERR(0, 895, __pyx_L1_error));

  /* "cuda/ccuda.pyx":896
 * 
 * cdef CUresult cuOccupancyMaxActiveBlocksPerMultiprocessor(int* numBlocks, CUfunction func, int blockSize, size_t dynamicSMemSize) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuOccupancyMaxActiveBlocksPerMultiprocessor(numBlocks, func, blockSize, dynamicSMemSize)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int* numBlocks, CUfunction func, int blockSize, size_t dynamicSMemSize, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuOccupancyMaxActiveBlocksPerMultiprocessor(__pyx_v_numBlocks, __pyx_v_func, __pyx_v_blockSize, __pyx_v_dynamicSMemSize); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 896, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":895
 *     return ccuda._cuGraphReleaseUserObject(graph, object, count)
 * 
 * cdef CUresult cuOccupancyMaxActiveBlocksPerMultiprocessor(int* numBlocks, CUfunction func, int blockSize, size_t dynamicSMemSize) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuOccupancyMaxActiveBlocksPerMultiprocessor(numBlocks, func, blockSize, dynamicSMemSize)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuOccupancyMaxActiveBlocksPerMultiprocessor", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":898
 *     return ccuda._cuOccupancyMaxActiveBlocksPerMultiprocessor(numBlocks, func, blockSize, dynamicSMemSize)
 * 
 * cdef CUresult cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int* numBlocks, CUfunction func, int blockSize, size_t dynamicSMemSize, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(numBlocks, func, blockSize, dynamicSMemSize, flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int *__pyx_v_numBlocks, __pyx_t_4cuda_5ccuda_CUfunction __pyx_v_func, int __pyx_v_blockSize, size_t __pyx_v_dynamicSMemSize, unsigned int __pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags", __pyx_f[0], 898, 1, __PYX_ERR(0, 898, __pyx_L1_error));

  /* "cuda/ccuda.pyx":899
 * 
 * cdef CUresult cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int* numBlocks, CUfunction func, int blockSize, size_t dynamicSMemSize, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(numBlocks, func, blockSize, dynamicSMemSize, flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuOccupancyMaxPotentialBlockSize(int* minGridSize, int* blockSize, CUfunction func, CUoccupancyB2DSize blockSizeToDynamicSMemSize, size_t dynamicSMemSize, int blockSizeLimit) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(__pyx_v_numBlocks, __pyx_v_func, __pyx_v_blockSize, __pyx_v_dynamicSMemSize, __pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 899, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":898
 *     return ccuda._cuOccupancyMaxActiveBlocksPerMultiprocessor(numBlocks, func, blockSize, dynamicSMemSize)
 * 
 * cdef CUresult cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int* numBlocks, CUfunction func, int blockSize, size_t dynamicSMemSize, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(numBlocks, func, blockSize, dynamicSMemSize, flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":901
 *     return ccuda._cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(numBlocks, func, blockSize, dynamicSMemSize, flags)
 * 
 * cdef CUresult cuOccupancyMaxPotentialBlockSize(int* minGridSize, int* blockSize, CUfunction func, CUoccupancyB2DSize blockSizeToDynamicSMemSize, size_t dynamicSMemSize, int blockSizeLimit) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuOccupancyMaxPotentialBlockSize(minGridSize, blockSize, func, blockSizeToDynamicSMemSize, dynamicSMemSize, blockSizeLimit)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuOccupancyMaxPotentialBlockSize(int *__pyx_v_minGridSize, int *__pyx_v_blockSize, __pyx_t_4cuda_5ccuda_CUfunction __pyx_v_func, __pyx_t_4cuda_5ccuda_CUoccupancyB2DSize __pyx_v_blockSizeToDynamicSMemSize, size_t __pyx_v_dynamicSMemSize, int __pyx_v_blockSizeLimit) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuOccupancyMaxPotentialBlockSize", __pyx_f[0], 901, 1, __PYX_ERR(0, 901, __pyx_L1_error));

  /* "cuda/ccuda.pyx":902
 * 
 * cdef CUresult cuOccupancyMaxPotentialBlockSize(int* minGridSize, int* blockSize, CUfunction func, CUoccupancyB2DSize blockSizeToDynamicSMemSize, size_t dynamicSMemSize, int blockSizeLimit) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuOccupancyMaxPotentialBlockSize(minGridSize, blockSize, func, blockSizeToDynamicSMemSize, dynamicSMemSize, blockSizeLimit)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuOccupancyMaxPotentialBlockSizeWithFlags(int* minGridSize, int* blockSize, CUfunction func, CUoccupancyB2DSize blockSizeToDynamicSMemSize, size_t dynamicSMemSize, int blockSizeLimit, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuOccupancyMaxPotentialBlockSize(__pyx_v_minGridSize, __pyx_v_blockSize, __pyx_v_func, __pyx_v_blockSizeToDynamicSMemSize, __pyx_v_dynamicSMemSize, __pyx_v_blockSizeLimit); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 902, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":901
 *     return ccuda._cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(numBlocks, func, blockSize, dynamicSMemSize, flags)
 * 
 * cdef CUresult cuOccupancyMaxPotentialBlockSize(int* minGridSize, int* blockSize, CUfunction func, CUoccupancyB2DSize blockSizeToDynamicSMemSize, size_t dynamicSMemSize, int blockSizeLimit) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuOccupancyMaxPotentialBlockSize(minGridSize, blockSize, func, blockSizeToDynamicSMemSize, dynamicSMemSize, blockSizeLimit)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuOccupancyMaxPotentialBlockSize", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":904
 *     return ccuda._cuOccupancyMaxPotentialBlockSize(minGridSize, blockSize, func, blockSizeToDynamicSMemSize, dynamicSMemSize, blockSizeLimit)
 * 
 * cdef CUresult cuOccupancyMaxPotentialBlockSizeWithFlags(int* minGridSize, int* blockSize, CUfunction func, CUoccupancyB2DSize blockSizeToDynamicSMemSize, size_t dynamicSMemSize, int blockSizeLimit, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuOccupancyMaxPotentialBlockSizeWithFlags(minGridSize, blockSize, func, blockSizeToDynamicSMemSize, dynamicSMemSize, blockSizeLimit, flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuOccupancyMaxPotentialBlockSizeWithFlags(int *__pyx_v_minGridSize, int *__pyx_v_blockSize, __pyx_t_4cuda_5ccuda_CUfunction __pyx_v_func, __pyx_t_4cuda_5ccuda_CUoccupancyB2DSize __pyx_v_blockSizeToDynamicSMemSize, size_t __pyx_v_dynamicSMemSize, int __pyx_v_blockSizeLimit, unsigned int __pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuOccupancyMaxPotentialBlockSizeWithFlags", __pyx_f[0], 904, 1, __PYX_ERR(0, 904, __pyx_L1_error));

  /* "cuda/ccuda.pyx":905
 * 
 * cdef CUresult cuOccupancyMaxPotentialBlockSizeWithFlags(int* minGridSize, int* blockSize, CUfunction func, CUoccupancyB2DSize blockSizeToDynamicSMemSize, size_t dynamicSMemSize, int blockSizeLimit, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuOccupancyMaxPotentialBlockSizeWithFlags(minGridSize, blockSize, func, blockSizeToDynamicSMemSize, dynamicSMemSize, blockSizeLimit, flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuOccupancyAvailableDynamicSMemPerBlock(size_t* dynamicSmemSize, CUfunction func, int numBlocks, int blockSize) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuOccupancyMaxPotentialBlockSizeWithFlags(__pyx_v_minGridSize, __pyx_v_blockSize, __pyx_v_func, __pyx_v_blockSizeToDynamicSMemSize, __pyx_v_dynamicSMemSize, __pyx_v_blockSizeLimit, __pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 905, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":904
 *     return ccuda._cuOccupancyMaxPotentialBlockSize(minGridSize, blockSize, func, blockSizeToDynamicSMemSize, dynamicSMemSize, blockSizeLimit)
 * 
 * cdef CUresult cuOccupancyMaxPotentialBlockSizeWithFlags(int* minGridSize, int* blockSize, CUfunction func, CUoccupancyB2DSize blockSizeToDynamicSMemSize, size_t dynamicSMemSize, int blockSizeLimit, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuOccupancyMaxPotentialBlockSizeWithFlags(minGridSize, blockSize, func, blockSizeToDynamicSMemSize, dynamicSMemSize, blockSizeLimit, flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuOccupancyMaxPotentialBlockSizeWithFlags", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":907
 *     return ccuda._cuOccupancyMaxPotentialBlockSizeWithFlags(minGridSize, blockSize, func, blockSizeToDynamicSMemSize, dynamicSMemSize, blockSizeLimit, flags)
 * 
 * cdef CUresult cuOccupancyAvailableDynamicSMemPerBlock(size_t* dynamicSmemSize, CUfunction func, int numBlocks, int blockSize) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuOccupancyAvailableDynamicSMemPerBlock(dynamicSmemSize, func, numBlocks, blockSize)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuOccupancyAvailableDynamicSMemPerBlock(size_t *__pyx_v_dynamicSmemSize, __pyx_t_4cuda_5ccuda_CUfunction __pyx_v_func, int __pyx_v_numBlocks, int __pyx_v_blockSize) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuOccupancyAvailableDynamicSMemPerBlock", __pyx_f[0], 907, 1, __PYX_ERR(0, 907, __pyx_L1_error));

  /* "cuda/ccuda.pyx":908
 * 
 * cdef CUresult cuOccupancyAvailableDynamicSMemPerBlock(size_t* dynamicSmemSize, CUfunction func, int numBlocks, int blockSize) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuOccupancyAvailableDynamicSMemPerBlock(dynamicSmemSize, func, numBlocks, blockSize)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexRefSetArray(CUtexref hTexRef, CUarray hArray, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuOccupancyAvailableDynamicSMemPerBlock(__pyx_v_dynamicSmemSize, __pyx_v_func, __pyx_v_numBlocks, __pyx_v_blockSize); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 908, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":907
 *     return ccuda._cuOccupancyMaxPotentialBlockSizeWithFlags(minGridSize, blockSize, func, blockSizeToDynamicSMemSize, dynamicSMemSize, blockSizeLimit, flags)
 * 
 * cdef CUresult cuOccupancyAvailableDynamicSMemPerBlock(size_t* dynamicSmemSize, CUfunction func, int numBlocks, int blockSize) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuOccupancyAvailableDynamicSMemPerBlock(dynamicSmemSize, func, numBlocks, blockSize)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuOccupancyAvailableDynamicSMemPerBlock", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":910
 *     return ccuda._cuOccupancyAvailableDynamicSMemPerBlock(dynamicSmemSize, func, numBlocks, blockSize)
 * 
 * cdef CUresult cuTexRefSetArray(CUtexref hTexRef, CUarray hArray, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefSetArray(hTexRef, hArray, Flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexRefSetArray(__pyx_t_4cuda_5ccuda_CUtexref __pyx_v_hTexRef, __pyx_t_4cuda_5ccuda_CUarray __pyx_v_hArray, unsigned int __pyx_v_Flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexRefSetArray", __pyx_f[0], 910, 1, __PYX_ERR(0, 910, __pyx_L1_error));

  /* "cuda/ccuda.pyx":911
 * 
 * cdef CUresult cuTexRefSetArray(CUtexref hTexRef, CUarray hArray, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexRefSetArray(hTexRef, hArray, Flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexRefSetMipmappedArray(CUtexref hTexRef, CUmipmappedArray hMipmappedArray, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetArray(__pyx_v_hTexRef, __pyx_v_hArray, __pyx_v_Flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 911, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":910
 *     return ccuda._cuOccupancyAvailableDynamicSMemPerBlock(dynamicSmemSize, func, numBlocks, blockSize)
 * 
 * cdef CUresult cuTexRefSetArray(CUtexref hTexRef, CUarray hArray, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefSetArray(hTexRef, hArray, Flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexRefSetArray", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":913
 *     return ccuda._cuTexRefSetArray(hTexRef, hArray, Flags)
 * 
 * cdef CUresult cuTexRefSetMipmappedArray(CUtexref hTexRef, CUmipmappedArray hMipmappedArray, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefSetMipmappedArray(hTexRef, hMipmappedArray, Flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexRefSetMipmappedArray(__pyx_t_4cuda_5ccuda_CUtexref __pyx_v_hTexRef, __pyx_t_4cuda_5ccuda_CUmipmappedArray __pyx_v_hMipmappedArray, unsigned int __pyx_v_Flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexRefSetMipmappedArray", __pyx_f[0], 913, 1, __PYX_ERR(0, 913, __pyx_L1_error));

  /* "cuda/ccuda.pyx":914
 * 
 * cdef CUresult cuTexRefSetMipmappedArray(CUtexref hTexRef, CUmipmappedArray hMipmappedArray, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexRefSetMipmappedArray(hTexRef, hMipmappedArray, Flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexRefSetAddress(size_t* ByteOffset, CUtexref hTexRef, CUdeviceptr dptr, size_t numbytes) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetMipmappedArray(__pyx_v_hTexRef, __pyx_v_hMipmappedArray, __pyx_v_Flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 914, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":913
 *     return ccuda._cuTexRefSetArray(hTexRef, hArray, Flags)
 * 
 * cdef CUresult cuTexRefSetMipmappedArray(CUtexref hTexRef, CUmipmappedArray hMipmappedArray, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefSetMipmappedArray(hTexRef, hMipmappedArray, Flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexRefSetMipmappedArray", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":916
 *     return ccuda._cuTexRefSetMipmappedArray(hTexRef, hMipmappedArray, Flags)
 * 
 * cdef CUresult cuTexRefSetAddress(size_t* ByteOffset, CUtexref hTexRef, CUdeviceptr dptr, size_t numbytes) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefSetAddress_v2(ByteOffset, hTexRef, dptr, numbytes)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexRefSetAddress(size_t *__pyx_v_ByteOffset, __pyx_t_4cuda_5ccuda_CUtexref __pyx_v_hTexRef, __pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_dptr, size_t __pyx_v_numbytes) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexRefSetAddress", __pyx_f[0], 916, 1, __PYX_ERR(0, 916, __pyx_L1_error));

  /* "cuda/ccuda.pyx":917
 * 
 * cdef CUresult cuTexRefSetAddress(size_t* ByteOffset, CUtexref hTexRef, CUdeviceptr dptr, size_t numbytes) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexRefSetAddress_v2(ByteOffset, hTexRef, dptr, numbytes)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexRefSetAddress2D(CUtexref hTexRef, const CUDA_ARRAY_DESCRIPTOR* desc, CUdeviceptr dptr, size_t Pitch) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetAddress_v2(__pyx_v_ByteOffset, __pyx_v_hTexRef, __pyx_v_dptr, __pyx_v_numbytes); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 917, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":916
 *     return ccuda._cuTexRefSetMipmappedArray(hTexRef, hMipmappedArray, Flags)
 * 
 * cdef CUresult cuTexRefSetAddress(size_t* ByteOffset, CUtexref hTexRef, CUdeviceptr dptr, size_t numbytes) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefSetAddress_v2(ByteOffset, hTexRef, dptr, numbytes)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexRefSetAddress", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":919
 *     return ccuda._cuTexRefSetAddress_v2(ByteOffset, hTexRef, dptr, numbytes)
 * 
 * cdef CUresult cuTexRefSetAddress2D(CUtexref hTexRef, const CUDA_ARRAY_DESCRIPTOR* desc, CUdeviceptr dptr, size_t Pitch) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefSetAddress2D_v3(hTexRef, desc, dptr, Pitch)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexRefSetAddress2D(__pyx_t_4cuda_5ccuda_CUtexref __pyx_v_hTexRef, __pyx_t_4cuda_5ccuda_CUDA_ARRAY_DESCRIPTOR const *__pyx_v_desc, __pyx_t_4cuda_5ccuda_CUdeviceptr __pyx_v_dptr, size_t __pyx_v_Pitch) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexRefSetAddress2D", __pyx_f[0], 919, 1, __PYX_ERR(0, 919, __pyx_L1_error));

  /* "cuda/ccuda.pyx":920
 * 
 * cdef CUresult cuTexRefSetAddress2D(CUtexref hTexRef, const CUDA_ARRAY_DESCRIPTOR* desc, CUdeviceptr dptr, size_t Pitch) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexRefSetAddress2D_v3(hTexRef, desc, dptr, Pitch)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexRefSetFormat(CUtexref hTexRef, CUarray_format fmt, int NumPackedComponents) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetAddress2D_v3(__pyx_v_hTexRef, __pyx_v_desc, __pyx_v_dptr, __pyx_v_Pitch); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 920, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":919
 *     return ccuda._cuTexRefSetAddress_v2(ByteOffset, hTexRef, dptr, numbytes)
 * 
 * cdef CUresult cuTexRefSetAddress2D(CUtexref hTexRef, const CUDA_ARRAY_DESCRIPTOR* desc, CUdeviceptr dptr, size_t Pitch) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefSetAddress2D_v3(hTexRef, desc, dptr, Pitch)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexRefSetAddress2D", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":922
 *     return ccuda._cuTexRefSetAddress2D_v3(hTexRef, desc, dptr, Pitch)
 * 
 * cdef CUresult cuTexRefSetFormat(CUtexref hTexRef, CUarray_format fmt, int NumPackedComponents) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefSetFormat(hTexRef, fmt, NumPackedComponents)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexRefSetFormat(__pyx_t_4cuda_5ccuda_CUtexref __pyx_v_hTexRef, __pyx_t_4cuda_5ccuda_CUarray_format __pyx_v_fmt, int __pyx_v_NumPackedComponents) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexRefSetFormat", __pyx_f[0], 922, 1, __PYX_ERR(0, 922, __pyx_L1_error));

  /* "cuda/ccuda.pyx":923
 * 
 * cdef CUresult cuTexRefSetFormat(CUtexref hTexRef, CUarray_format fmt, int NumPackedComponents) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexRefSetFormat(hTexRef, fmt, NumPackedComponents)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexRefSetAddressMode(CUtexref hTexRef, int dim, CUaddress_mode am) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetFormat(__pyx_v_hTexRef, __pyx_v_fmt, __pyx_v_NumPackedComponents); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 923, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":922
 *     return ccuda._cuTexRefSetAddress2D_v3(hTexRef, desc, dptr, Pitch)
 * 
 * cdef CUresult cuTexRefSetFormat(CUtexref hTexRef, CUarray_format fmt, int NumPackedComponents) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefSetFormat(hTexRef, fmt, NumPackedComponents)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexRefSetFormat", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":925
 *     return ccuda._cuTexRefSetFormat(hTexRef, fmt, NumPackedComponents)
 * 
 * cdef CUresult cuTexRefSetAddressMode(CUtexref hTexRef, int dim, CUaddress_mode am) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefSetAddressMode(hTexRef, dim, am)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexRefSetAddressMode(__pyx_t_4cuda_5ccuda_CUtexref __pyx_v_hTexRef, int __pyx_v_dim, __pyx_t_4cuda_5ccuda_CUaddress_mode __pyx_v_am) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexRefSetAddressMode", __pyx_f[0], 925, 1, __PYX_ERR(0, 925, __pyx_L1_error));

  /* "cuda/ccuda.pyx":926
 * 
 * cdef CUresult cuTexRefSetAddressMode(CUtexref hTexRef, int dim, CUaddress_mode am) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexRefSetAddressMode(hTexRef, dim, am)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexRefSetFilterMode(CUtexref hTexRef, CUfilter_mode fm) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetAddressMode(__pyx_v_hTexRef, __pyx_v_dim, __pyx_v_am); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 926, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":925
 *     return ccuda._cuTexRefSetFormat(hTexRef, fmt, NumPackedComponents)
 * 
 * cdef CUresult cuTexRefSetAddressMode(CUtexref hTexRef, int dim, CUaddress_mode am) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefSetAddressMode(hTexRef, dim, am)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexRefSetAddressMode", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":928
 *     return ccuda._cuTexRefSetAddressMode(hTexRef, dim, am)
 * 
 * cdef CUresult cuTexRefSetFilterMode(CUtexref hTexRef, CUfilter_mode fm) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefSetFilterMode(hTexRef, fm)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexRefSetFilterMode(__pyx_t_4cuda_5ccuda_CUtexref __pyx_v_hTexRef, __pyx_t_4cuda_5ccuda_CUfilter_mode __pyx_v_fm) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexRefSetFilterMode", __pyx_f[0], 928, 1, __PYX_ERR(0, 928, __pyx_L1_error));

  /* "cuda/ccuda.pyx":929
 * 
 * cdef CUresult cuTexRefSetFilterMode(CUtexref hTexRef, CUfilter_mode fm) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexRefSetFilterMode(hTexRef, fm)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexRefSetMipmapFilterMode(CUtexref hTexRef, CUfilter_mode fm) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetFilterMode(__pyx_v_hTexRef, __pyx_v_fm); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 929, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":928
 *     return ccuda._cuTexRefSetAddressMode(hTexRef, dim, am)
 * 
 * cdef CUresult cuTexRefSetFilterMode(CUtexref hTexRef, CUfilter_mode fm) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefSetFilterMode(hTexRef, fm)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexRefSetFilterMode", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":931
 *     return ccuda._cuTexRefSetFilterMode(hTexRef, fm)
 * 
 * cdef CUresult cuTexRefSetMipmapFilterMode(CUtexref hTexRef, CUfilter_mode fm) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefSetMipmapFilterMode(hTexRef, fm)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexRefSetMipmapFilterMode(__pyx_t_4cuda_5ccuda_CUtexref __pyx_v_hTexRef, __pyx_t_4cuda_5ccuda_CUfilter_mode __pyx_v_fm) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexRefSetMipmapFilterMode", __pyx_f[0], 931, 1, __PYX_ERR(0, 931, __pyx_L1_error));

  /* "cuda/ccuda.pyx":932
 * 
 * cdef CUresult cuTexRefSetMipmapFilterMode(CUtexref hTexRef, CUfilter_mode fm) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexRefSetMipmapFilterMode(hTexRef, fm)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexRefSetMipmapLevelBias(CUtexref hTexRef, float bias) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetMipmapFilterMode(__pyx_v_hTexRef, __pyx_v_fm); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 932, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":931
 *     return ccuda._cuTexRefSetFilterMode(hTexRef, fm)
 * 
 * cdef CUresult cuTexRefSetMipmapFilterMode(CUtexref hTexRef, CUfilter_mode fm) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefSetMipmapFilterMode(hTexRef, fm)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexRefSetMipmapFilterMode", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":934
 *     return ccuda._cuTexRefSetMipmapFilterMode(hTexRef, fm)
 * 
 * cdef CUresult cuTexRefSetMipmapLevelBias(CUtexref hTexRef, float bias) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefSetMipmapLevelBias(hTexRef, bias)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexRefSetMipmapLevelBias(__pyx_t_4cuda_5ccuda_CUtexref __pyx_v_hTexRef, float __pyx_v_bias) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexRefSetMipmapLevelBias", __pyx_f[0], 934, 1, __PYX_ERR(0, 934, __pyx_L1_error));

  /* "cuda/ccuda.pyx":935
 * 
 * cdef CUresult cuTexRefSetMipmapLevelBias(CUtexref hTexRef, float bias) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexRefSetMipmapLevelBias(hTexRef, bias)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexRefSetMipmapLevelClamp(CUtexref hTexRef, float minMipmapLevelClamp, float maxMipmapLevelClamp) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetMipmapLevelBias(__pyx_v_hTexRef, __pyx_v_bias); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 935, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":934
 *     return ccuda._cuTexRefSetMipmapFilterMode(hTexRef, fm)
 * 
 * cdef CUresult cuTexRefSetMipmapLevelBias(CUtexref hTexRef, float bias) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefSetMipmapLevelBias(hTexRef, bias)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexRefSetMipmapLevelBias", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":937
 *     return ccuda._cuTexRefSetMipmapLevelBias(hTexRef, bias)
 * 
 * cdef CUresult cuTexRefSetMipmapLevelClamp(CUtexref hTexRef, float minMipmapLevelClamp, float maxMipmapLevelClamp) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefSetMipmapLevelClamp(hTexRef, minMipmapLevelClamp, maxMipmapLevelClamp)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexRefSetMipmapLevelClamp(__pyx_t_4cuda_5ccuda_CUtexref __pyx_v_hTexRef, float __pyx_v_minMipmapLevelClamp, float __pyx_v_maxMipmapLevelClamp) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexRefSetMipmapLevelClamp", __pyx_f[0], 937, 1, __PYX_ERR(0, 937, __pyx_L1_error));

  /* "cuda/ccuda.pyx":938
 * 
 * cdef CUresult cuTexRefSetMipmapLevelClamp(CUtexref hTexRef, float minMipmapLevelClamp, float maxMipmapLevelClamp) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexRefSetMipmapLevelClamp(hTexRef, minMipmapLevelClamp, maxMipmapLevelClamp)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexRefSetMaxAnisotropy(CUtexref hTexRef, unsigned int maxAniso) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetMipmapLevelClamp(__pyx_v_hTexRef, __pyx_v_minMipmapLevelClamp, __pyx_v_maxMipmapLevelClamp); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 938, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":937
 *     return ccuda._cuTexRefSetMipmapLevelBias(hTexRef, bias)
 * 
 * cdef CUresult cuTexRefSetMipmapLevelClamp(CUtexref hTexRef, float minMipmapLevelClamp, float maxMipmapLevelClamp) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefSetMipmapLevelClamp(hTexRef, minMipmapLevelClamp, maxMipmapLevelClamp)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexRefSetMipmapLevelClamp", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":940
 *     return ccuda._cuTexRefSetMipmapLevelClamp(hTexRef, minMipmapLevelClamp, maxMipmapLevelClamp)
 * 
 * cdef CUresult cuTexRefSetMaxAnisotropy(CUtexref hTexRef, unsigned int maxAniso) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefSetMaxAnisotropy(hTexRef, maxAniso)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexRefSetMaxAnisotropy(__pyx_t_4cuda_5ccuda_CUtexref __pyx_v_hTexRef, unsigned int __pyx_v_maxAniso) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexRefSetMaxAnisotropy", __pyx_f[0], 940, 1, __PYX_ERR(0, 940, __pyx_L1_error));

  /* "cuda/ccuda.pyx":941
 * 
 * cdef CUresult cuTexRefSetMaxAnisotropy(CUtexref hTexRef, unsigned int maxAniso) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexRefSetMaxAnisotropy(hTexRef, maxAniso)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexRefSetBorderColor(CUtexref hTexRef, float* pBorderColor) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetMaxAnisotropy(__pyx_v_hTexRef, __pyx_v_maxAniso); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 941, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":940
 *     return ccuda._cuTexRefSetMipmapLevelClamp(hTexRef, minMipmapLevelClamp, maxMipmapLevelClamp)
 * 
 * cdef CUresult cuTexRefSetMaxAnisotropy(CUtexref hTexRef, unsigned int maxAniso) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefSetMaxAnisotropy(hTexRef, maxAniso)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexRefSetMaxAnisotropy", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":943
 *     return ccuda._cuTexRefSetMaxAnisotropy(hTexRef, maxAniso)
 * 
 * cdef CUresult cuTexRefSetBorderColor(CUtexref hTexRef, float* pBorderColor) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefSetBorderColor(hTexRef, pBorderColor)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexRefSetBorderColor(__pyx_t_4cuda_5ccuda_CUtexref __pyx_v_hTexRef, float *__pyx_v_pBorderColor) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexRefSetBorderColor", __pyx_f[0], 943, 1, __PYX_ERR(0, 943, __pyx_L1_error));

  /* "cuda/ccuda.pyx":944
 * 
 * cdef CUresult cuTexRefSetBorderColor(CUtexref hTexRef, float* pBorderColor) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexRefSetBorderColor(hTexRef, pBorderColor)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexRefSetFlags(CUtexref hTexRef, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetBorderColor(__pyx_v_hTexRef, __pyx_v_pBorderColor); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 944, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":943
 *     return ccuda._cuTexRefSetMaxAnisotropy(hTexRef, maxAniso)
 * 
 * cdef CUresult cuTexRefSetBorderColor(CUtexref hTexRef, float* pBorderColor) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefSetBorderColor(hTexRef, pBorderColor)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexRefSetBorderColor", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":946
 *     return ccuda._cuTexRefSetBorderColor(hTexRef, pBorderColor)
 * 
 * cdef CUresult cuTexRefSetFlags(CUtexref hTexRef, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefSetFlags(hTexRef, Flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexRefSetFlags(__pyx_t_4cuda_5ccuda_CUtexref __pyx_v_hTexRef, unsigned int __pyx_v_Flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexRefSetFlags", __pyx_f[0], 946, 1, __PYX_ERR(0, 946, __pyx_L1_error));

  /* "cuda/ccuda.pyx":947
 * 
 * cdef CUresult cuTexRefSetFlags(CUtexref hTexRef, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexRefSetFlags(hTexRef, Flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexRefGetAddress(CUdeviceptr* pdptr, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetFlags(__pyx_v_hTexRef, __pyx_v_Flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 947, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":946
 *     return ccuda._cuTexRefSetBorderColor(hTexRef, pBorderColor)
 * 
 * cdef CUresult cuTexRefSetFlags(CUtexref hTexRef, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefSetFlags(hTexRef, Flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexRefSetFlags", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":949
 *     return ccuda._cuTexRefSetFlags(hTexRef, Flags)
 * 
 * cdef CUresult cuTexRefGetAddress(CUdeviceptr* pdptr, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefGetAddress_v2(pdptr, hTexRef)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexRefGetAddress(__pyx_t_4cuda_5ccuda_CUdeviceptr *__pyx_v_pdptr, __pyx_t_4cuda_5ccuda_CUtexref __pyx_v_hTexRef) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexRefGetAddress", __pyx_f[0], 949, 1, __PYX_ERR(0, 949, __pyx_L1_error));

  /* "cuda/ccuda.pyx":950
 * 
 * cdef CUresult cuTexRefGetAddress(CUdeviceptr* pdptr, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexRefGetAddress_v2(pdptr, hTexRef)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexRefGetArray(CUarray* phArray, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetAddress_v2(__pyx_v_pdptr, __pyx_v_hTexRef); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 950, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":949
 *     return ccuda._cuTexRefSetFlags(hTexRef, Flags)
 * 
 * cdef CUresult cuTexRefGetAddress(CUdeviceptr* pdptr, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefGetAddress_v2(pdptr, hTexRef)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexRefGetAddress", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":952
 *     return ccuda._cuTexRefGetAddress_v2(pdptr, hTexRef)
 * 
 * cdef CUresult cuTexRefGetArray(CUarray* phArray, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefGetArray(phArray, hTexRef)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexRefGetArray(__pyx_t_4cuda_5ccuda_CUarray *__pyx_v_phArray, __pyx_t_4cuda_5ccuda_CUtexref __pyx_v_hTexRef) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexRefGetArray", __pyx_f[0], 952, 1, __PYX_ERR(0, 952, __pyx_L1_error));

  /* "cuda/ccuda.pyx":953
 * 
 * cdef CUresult cuTexRefGetArray(CUarray* phArray, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexRefGetArray(phArray, hTexRef)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexRefGetMipmappedArray(CUmipmappedArray* phMipmappedArray, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetArray(__pyx_v_phArray, __pyx_v_hTexRef); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 953, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":952
 *     return ccuda._cuTexRefGetAddress_v2(pdptr, hTexRef)
 * 
 * cdef CUresult cuTexRefGetArray(CUarray* phArray, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefGetArray(phArray, hTexRef)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexRefGetArray", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":955
 *     return ccuda._cuTexRefGetArray(phArray, hTexRef)
 * 
 * cdef CUresult cuTexRefGetMipmappedArray(CUmipmappedArray* phMipmappedArray, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefGetMipmappedArray(phMipmappedArray, hTexRef)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexRefGetMipmappedArray(__pyx_t_4cuda_5ccuda_CUmipmappedArray *__pyx_v_phMipmappedArray, __pyx_t_4cuda_5ccuda_CUtexref __pyx_v_hTexRef) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexRefGetMipmappedArray", __pyx_f[0], 955, 1, __PYX_ERR(0, 955, __pyx_L1_error));

  /* "cuda/ccuda.pyx":956
 * 
 * cdef CUresult cuTexRefGetMipmappedArray(CUmipmappedArray* phMipmappedArray, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexRefGetMipmappedArray(phMipmappedArray, hTexRef)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexRefGetAddressMode(CUaddress_mode* pam, CUtexref hTexRef, int dim) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetMipmappedArray(__pyx_v_phMipmappedArray, __pyx_v_hTexRef); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 956, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":955
 *     return ccuda._cuTexRefGetArray(phArray, hTexRef)
 * 
 * cdef CUresult cuTexRefGetMipmappedArray(CUmipmappedArray* phMipmappedArray, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefGetMipmappedArray(phMipmappedArray, hTexRef)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexRefGetMipmappedArray", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":958
 *     return ccuda._cuTexRefGetMipmappedArray(phMipmappedArray, hTexRef)
 * 
 * cdef CUresult cuTexRefGetAddressMode(CUaddress_mode* pam, CUtexref hTexRef, int dim) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefGetAddressMode(pam, hTexRef, dim)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexRefGetAddressMode(__pyx_t_4cuda_5ccuda_CUaddress_mode *__pyx_v_pam, __pyx_t_4cuda_5ccuda_CUtexref __pyx_v_hTexRef, int __pyx_v_dim) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexRefGetAddressMode", __pyx_f[0], 958, 1, __PYX_ERR(0, 958, __pyx_L1_error));

  /* "cuda/ccuda.pyx":959
 * 
 * cdef CUresult cuTexRefGetAddressMode(CUaddress_mode* pam, CUtexref hTexRef, int dim) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexRefGetAddressMode(pam, hTexRef, dim)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexRefGetFilterMode(CUfilter_mode* pfm, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetAddressMode(__pyx_v_pam, __pyx_v_hTexRef, __pyx_v_dim); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 959, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":958
 *     return ccuda._cuTexRefGetMipmappedArray(phMipmappedArray, hTexRef)
 * 
 * cdef CUresult cuTexRefGetAddressMode(CUaddress_mode* pam, CUtexref hTexRef, int dim) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefGetAddressMode(pam, hTexRef, dim)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexRefGetAddressMode", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":961
 *     return ccuda._cuTexRefGetAddressMode(pam, hTexRef, dim)
 * 
 * cdef CUresult cuTexRefGetFilterMode(CUfilter_mode* pfm, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefGetFilterMode(pfm, hTexRef)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexRefGetFilterMode(__pyx_t_4cuda_5ccuda_CUfilter_mode *__pyx_v_pfm, __pyx_t_4cuda_5ccuda_CUtexref __pyx_v_hTexRef) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexRefGetFilterMode", __pyx_f[0], 961, 1, __PYX_ERR(0, 961, __pyx_L1_error));

  /* "cuda/ccuda.pyx":962
 * 
 * cdef CUresult cuTexRefGetFilterMode(CUfilter_mode* pfm, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexRefGetFilterMode(pfm, hTexRef)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexRefGetFormat(CUarray_format* pFormat, int* pNumChannels, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetFilterMode(__pyx_v_pfm, __pyx_v_hTexRef); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 962, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":961
 *     return ccuda._cuTexRefGetAddressMode(pam, hTexRef, dim)
 * 
 * cdef CUresult cuTexRefGetFilterMode(CUfilter_mode* pfm, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefGetFilterMode(pfm, hTexRef)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexRefGetFilterMode", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":964
 *     return ccuda._cuTexRefGetFilterMode(pfm, hTexRef)
 * 
 * cdef CUresult cuTexRefGetFormat(CUarray_format* pFormat, int* pNumChannels, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefGetFormat(pFormat, pNumChannels, hTexRef)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexRefGetFormat(__pyx_t_4cuda_5ccuda_CUarray_format *__pyx_v_pFormat, int *__pyx_v_pNumChannels, __pyx_t_4cuda_5ccuda_CUtexref __pyx_v_hTexRef) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexRefGetFormat", __pyx_f[0], 964, 1, __PYX_ERR(0, 964, __pyx_L1_error));

  /* "cuda/ccuda.pyx":965
 * 
 * cdef CUresult cuTexRefGetFormat(CUarray_format* pFormat, int* pNumChannels, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexRefGetFormat(pFormat, pNumChannels, hTexRef)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexRefGetMipmapFilterMode(CUfilter_mode* pfm, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetFormat(__pyx_v_pFormat, __pyx_v_pNumChannels, __pyx_v_hTexRef); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 965, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":964
 *     return ccuda._cuTexRefGetFilterMode(pfm, hTexRef)
 * 
 * cdef CUresult cuTexRefGetFormat(CUarray_format* pFormat, int* pNumChannels, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefGetFormat(pFormat, pNumChannels, hTexRef)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexRefGetFormat", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":967
 *     return ccuda._cuTexRefGetFormat(pFormat, pNumChannels, hTexRef)
 * 
 * cdef CUresult cuTexRefGetMipmapFilterMode(CUfilter_mode* pfm, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefGetMipmapFilterMode(pfm, hTexRef)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexRefGetMipmapFilterMode(__pyx_t_4cuda_5ccuda_CUfilter_mode *__pyx_v_pfm, __pyx_t_4cuda_5ccuda_CUtexref __pyx_v_hTexRef) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexRefGetMipmapFilterMode", __pyx_f[0], 967, 1, __PYX_ERR(0, 967, __pyx_L1_error));

  /* "cuda/ccuda.pyx":968
 * 
 * cdef CUresult cuTexRefGetMipmapFilterMode(CUfilter_mode* pfm, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexRefGetMipmapFilterMode(pfm, hTexRef)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexRefGetMipmapLevelBias(float* pbias, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetMipmapFilterMode(__pyx_v_pfm, __pyx_v_hTexRef); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 968, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":967
 *     return ccuda._cuTexRefGetFormat(pFormat, pNumChannels, hTexRef)
 * 
 * cdef CUresult cuTexRefGetMipmapFilterMode(CUfilter_mode* pfm, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefGetMipmapFilterMode(pfm, hTexRef)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexRefGetMipmapFilterMode", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":970
 *     return ccuda._cuTexRefGetMipmapFilterMode(pfm, hTexRef)
 * 
 * cdef CUresult cuTexRefGetMipmapLevelBias(float* pbias, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefGetMipmapLevelBias(pbias, hTexRef)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexRefGetMipmapLevelBias(float *__pyx_v_pbias, __pyx_t_4cuda_5ccuda_CUtexref __pyx_v_hTexRef) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexRefGetMipmapLevelBias", __pyx_f[0], 970, 1, __PYX_ERR(0, 970, __pyx_L1_error));

  /* "cuda/ccuda.pyx":971
 * 
 * cdef CUresult cuTexRefGetMipmapLevelBias(float* pbias, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexRefGetMipmapLevelBias(pbias, hTexRef)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexRefGetMipmapLevelClamp(float* pminMipmapLevelClamp, float* pmaxMipmapLevelClamp, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetMipmapLevelBias(__pyx_v_pbias, __pyx_v_hTexRef); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 971, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":970
 *     return ccuda._cuTexRefGetMipmapFilterMode(pfm, hTexRef)
 * 
 * cdef CUresult cuTexRefGetMipmapLevelBias(float* pbias, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefGetMipmapLevelBias(pbias, hTexRef)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexRefGetMipmapLevelBias", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":973
 *     return ccuda._cuTexRefGetMipmapLevelBias(pbias, hTexRef)
 * 
 * cdef CUresult cuTexRefGetMipmapLevelClamp(float* pminMipmapLevelClamp, float* pmaxMipmapLevelClamp, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefGetMipmapLevelClamp(pminMipmapLevelClamp, pmaxMipmapLevelClamp, hTexRef)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexRefGetMipmapLevelClamp(float *__pyx_v_pminMipmapLevelClamp, float *__pyx_v_pmaxMipmapLevelClamp, __pyx_t_4cuda_5ccuda_CUtexref __pyx_v_hTexRef) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexRefGetMipmapLevelClamp", __pyx_f[0], 973, 1, __PYX_ERR(0, 973, __pyx_L1_error));

  /* "cuda/ccuda.pyx":974
 * 
 * cdef CUresult cuTexRefGetMipmapLevelClamp(float* pminMipmapLevelClamp, float* pmaxMipmapLevelClamp, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexRefGetMipmapLevelClamp(pminMipmapLevelClamp, pmaxMipmapLevelClamp, hTexRef)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexRefGetMaxAnisotropy(int* pmaxAniso, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetMipmapLevelClamp(__pyx_v_pminMipmapLevelClamp, __pyx_v_pmaxMipmapLevelClamp, __pyx_v_hTexRef); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 974, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":973
 *     return ccuda._cuTexRefGetMipmapLevelBias(pbias, hTexRef)
 * 
 * cdef CUresult cuTexRefGetMipmapLevelClamp(float* pminMipmapLevelClamp, float* pmaxMipmapLevelClamp, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefGetMipmapLevelClamp(pminMipmapLevelClamp, pmaxMipmapLevelClamp, hTexRef)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexRefGetMipmapLevelClamp", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":976
 *     return ccuda._cuTexRefGetMipmapLevelClamp(pminMipmapLevelClamp, pmaxMipmapLevelClamp, hTexRef)
 * 
 * cdef CUresult cuTexRefGetMaxAnisotropy(int* pmaxAniso, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefGetMaxAnisotropy(pmaxAniso, hTexRef)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexRefGetMaxAnisotropy(int *__pyx_v_pmaxAniso, __pyx_t_4cuda_5ccuda_CUtexref __pyx_v_hTexRef) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexRefGetMaxAnisotropy", __pyx_f[0], 976, 1, __PYX_ERR(0, 976, __pyx_L1_error));

  /* "cuda/ccuda.pyx":977
 * 
 * cdef CUresult cuTexRefGetMaxAnisotropy(int* pmaxAniso, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexRefGetMaxAnisotropy(pmaxAniso, hTexRef)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexRefGetBorderColor(float* pBorderColor, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetMaxAnisotropy(__pyx_v_pmaxAniso, __pyx_v_hTexRef); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 977, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":976
 *     return ccuda._cuTexRefGetMipmapLevelClamp(pminMipmapLevelClamp, pmaxMipmapLevelClamp, hTexRef)
 * 
 * cdef CUresult cuTexRefGetMaxAnisotropy(int* pmaxAniso, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefGetMaxAnisotropy(pmaxAniso, hTexRef)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexRefGetMaxAnisotropy", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":979
 *     return ccuda._cuTexRefGetMaxAnisotropy(pmaxAniso, hTexRef)
 * 
 * cdef CUresult cuTexRefGetBorderColor(float* pBorderColor, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefGetBorderColor(pBorderColor, hTexRef)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexRefGetBorderColor(float *__pyx_v_pBorderColor, __pyx_t_4cuda_5ccuda_CUtexref __pyx_v_hTexRef) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexRefGetBorderColor", __pyx_f[0], 979, 1, __PYX_ERR(0, 979, __pyx_L1_error));

  /* "cuda/ccuda.pyx":980
 * 
 * cdef CUresult cuTexRefGetBorderColor(float* pBorderColor, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexRefGetBorderColor(pBorderColor, hTexRef)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexRefGetFlags(unsigned int* pFlags, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetBorderColor(__pyx_v_pBorderColor, __pyx_v_hTexRef); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 980, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":979
 *     return ccuda._cuTexRefGetMaxAnisotropy(pmaxAniso, hTexRef)
 * 
 * cdef CUresult cuTexRefGetBorderColor(float* pBorderColor, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefGetBorderColor(pBorderColor, hTexRef)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexRefGetBorderColor", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":982
 *     return ccuda._cuTexRefGetBorderColor(pBorderColor, hTexRef)
 * 
 * cdef CUresult cuTexRefGetFlags(unsigned int* pFlags, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefGetFlags(pFlags, hTexRef)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexRefGetFlags(unsigned int *__pyx_v_pFlags, __pyx_t_4cuda_5ccuda_CUtexref __pyx_v_hTexRef) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexRefGetFlags", __pyx_f[0], 982, 1, __PYX_ERR(0, 982, __pyx_L1_error));

  /* "cuda/ccuda.pyx":983
 * 
 * cdef CUresult cuTexRefGetFlags(unsigned int* pFlags, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexRefGetFlags(pFlags, hTexRef)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexRefCreate(CUtexref* pTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetFlags(__pyx_v_pFlags, __pyx_v_hTexRef); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 983, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":982
 *     return ccuda._cuTexRefGetBorderColor(pBorderColor, hTexRef)
 * 
 * cdef CUresult cuTexRefGetFlags(unsigned int* pFlags, CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefGetFlags(pFlags, hTexRef)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexRefGetFlags", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":985
 *     return ccuda._cuTexRefGetFlags(pFlags, hTexRef)
 * 
 * cdef CUresult cuTexRefCreate(CUtexref* pTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefCreate(pTexRef)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexRefCreate(__pyx_t_4cuda_5ccuda_CUtexref *__pyx_v_pTexRef) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexRefCreate", __pyx_f[0], 985, 1, __PYX_ERR(0, 985, __pyx_L1_error));

  /* "cuda/ccuda.pyx":986
 * 
 * cdef CUresult cuTexRefCreate(CUtexref* pTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexRefCreate(pTexRef)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexRefDestroy(CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexRefCreate(__pyx_v_pTexRef); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 986, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":985
 *     return ccuda._cuTexRefGetFlags(pFlags, hTexRef)
 * 
 * cdef CUresult cuTexRefCreate(CUtexref* pTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefCreate(pTexRef)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexRefCreate", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":988
 *     return ccuda._cuTexRefCreate(pTexRef)
 * 
 * cdef CUresult cuTexRefDestroy(CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefDestroy(hTexRef)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexRefDestroy(__pyx_t_4cuda_5ccuda_CUtexref __pyx_v_hTexRef) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexRefDestroy", __pyx_f[0], 988, 1, __PYX_ERR(0, 988, __pyx_L1_error));

  /* "cuda/ccuda.pyx":989
 * 
 * cdef CUresult cuTexRefDestroy(CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexRefDestroy(hTexRef)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuSurfRefSetArray(CUsurfref hSurfRef, CUarray hArray, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexRefDestroy(__pyx_v_hTexRef); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 989, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":988
 *     return ccuda._cuTexRefCreate(pTexRef)
 * 
 * cdef CUresult cuTexRefDestroy(CUtexref hTexRef) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexRefDestroy(hTexRef)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexRefDestroy", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":991
 *     return ccuda._cuTexRefDestroy(hTexRef)
 * 
 * cdef CUresult cuSurfRefSetArray(CUsurfref hSurfRef, CUarray hArray, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuSurfRefSetArray(hSurfRef, hArray, Flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuSurfRefSetArray(__pyx_t_4cuda_5ccuda_CUsurfref __pyx_v_hSurfRef, __pyx_t_4cuda_5ccuda_CUarray __pyx_v_hArray, unsigned int __pyx_v_Flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuSurfRefSetArray", __pyx_f[0], 991, 1, __PYX_ERR(0, 991, __pyx_L1_error));

  /* "cuda/ccuda.pyx":992
 * 
 * cdef CUresult cuSurfRefSetArray(CUsurfref hSurfRef, CUarray hArray, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuSurfRefSetArray(hSurfRef, hArray, Flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuSurfRefGetArray(CUarray* phArray, CUsurfref hSurfRef) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuSurfRefSetArray(__pyx_v_hSurfRef, __pyx_v_hArray, __pyx_v_Flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 992, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":991
 *     return ccuda._cuTexRefDestroy(hTexRef)
 * 
 * cdef CUresult cuSurfRefSetArray(CUsurfref hSurfRef, CUarray hArray, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuSurfRefSetArray(hSurfRef, hArray, Flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuSurfRefSetArray", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":994
 *     return ccuda._cuSurfRefSetArray(hSurfRef, hArray, Flags)
 * 
 * cdef CUresult cuSurfRefGetArray(CUarray* phArray, CUsurfref hSurfRef) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuSurfRefGetArray(phArray, hSurfRef)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuSurfRefGetArray(__pyx_t_4cuda_5ccuda_CUarray *__pyx_v_phArray, __pyx_t_4cuda_5ccuda_CUsurfref __pyx_v_hSurfRef) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuSurfRefGetArray", __pyx_f[0], 994, 1, __PYX_ERR(0, 994, __pyx_L1_error));

  /* "cuda/ccuda.pyx":995
 * 
 * cdef CUresult cuSurfRefGetArray(CUarray* phArray, CUsurfref hSurfRef) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuSurfRefGetArray(phArray, hSurfRef)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexObjectCreate(CUtexObject* pTexObject, const CUDA_RESOURCE_DESC* pResDesc, const CUDA_TEXTURE_DESC* pTexDesc, const CUDA_RESOURCE_VIEW_DESC* pResViewDesc) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuSurfRefGetArray(__pyx_v_phArray, __pyx_v_hSurfRef); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 995, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":994
 *     return ccuda._cuSurfRefSetArray(hSurfRef, hArray, Flags)
 * 
 * cdef CUresult cuSurfRefGetArray(CUarray* phArray, CUsurfref hSurfRef) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuSurfRefGetArray(phArray, hSurfRef)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuSurfRefGetArray", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":997
 *     return ccuda._cuSurfRefGetArray(phArray, hSurfRef)
 * 
 * cdef CUresult cuTexObjectCreate(CUtexObject* pTexObject, const CUDA_RESOURCE_DESC* pResDesc, const CUDA_TEXTURE_DESC* pTexDesc, const CUDA_RESOURCE_VIEW_DESC* pResViewDesc) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexObjectCreate(pTexObject, pResDesc, pTexDesc, pResViewDesc)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexObjectCreate(__pyx_t_4cuda_5ccuda_CUtexObject *__pyx_v_pTexObject, __pyx_t_4cuda_5ccuda_CUDA_RESOURCE_DESC const *__pyx_v_pResDesc, __pyx_t_4cuda_5ccuda_CUDA_TEXTURE_DESC const *__pyx_v_pTexDesc, __pyx_t_4cuda_5ccuda_CUDA_RESOURCE_VIEW_DESC const *__pyx_v_pResViewDesc) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexObjectCreate", __pyx_f[0], 997, 1, __PYX_ERR(0, 997, __pyx_L1_error));

  /* "cuda/ccuda.pyx":998
 * 
 * cdef CUresult cuTexObjectCreate(CUtexObject* pTexObject, const CUDA_RESOURCE_DESC* pResDesc, const CUDA_TEXTURE_DESC* pTexDesc, const CUDA_RESOURCE_VIEW_DESC* pResViewDesc) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexObjectCreate(pTexObject, pResDesc, pTexDesc, pResViewDesc)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexObjectDestroy(CUtexObject texObject) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexObjectCreate(__pyx_v_pTexObject, __pyx_v_pResDesc, __pyx_v_pTexDesc, __pyx_v_pResViewDesc); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 998, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":997
 *     return ccuda._cuSurfRefGetArray(phArray, hSurfRef)
 * 
 * cdef CUresult cuTexObjectCreate(CUtexObject* pTexObject, const CUDA_RESOURCE_DESC* pResDesc, const CUDA_TEXTURE_DESC* pTexDesc, const CUDA_RESOURCE_VIEW_DESC* pResViewDesc) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexObjectCreate(pTexObject, pResDesc, pTexDesc, pResViewDesc)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexObjectCreate", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":1000
 *     return ccuda._cuTexObjectCreate(pTexObject, pResDesc, pTexDesc, pResViewDesc)
 * 
 * cdef CUresult cuTexObjectDestroy(CUtexObject texObject) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexObjectDestroy(texObject)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexObjectDestroy(__pyx_t_4cuda_5ccuda_CUtexObject __pyx_v_texObject) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexObjectDestroy", __pyx_f[0], 1000, 1, __PYX_ERR(0, 1000, __pyx_L1_error));

  /* "cuda/ccuda.pyx":1001
 * 
 * cdef CUresult cuTexObjectDestroy(CUtexObject texObject) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexObjectDestroy(texObject)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexObjectGetResourceDesc(CUDA_RESOURCE_DESC* pResDesc, CUtexObject texObject) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexObjectDestroy(__pyx_v_texObject); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 1001, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":1000
 *     return ccuda._cuTexObjectCreate(pTexObject, pResDesc, pTexDesc, pResViewDesc)
 * 
 * cdef CUresult cuTexObjectDestroy(CUtexObject texObject) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexObjectDestroy(texObject)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexObjectDestroy", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":1003
 *     return ccuda._cuTexObjectDestroy(texObject)
 * 
 * cdef CUresult cuTexObjectGetResourceDesc(CUDA_RESOURCE_DESC* pResDesc, CUtexObject texObject) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexObjectGetResourceDesc(pResDesc, texObject)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexObjectGetResourceDesc(__pyx_t_4cuda_5ccuda_CUDA_RESOURCE_DESC *__pyx_v_pResDesc, __pyx_t_4cuda_5ccuda_CUtexObject __pyx_v_texObject) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexObjectGetResourceDesc", __pyx_f[0], 1003, 1, __PYX_ERR(0, 1003, __pyx_L1_error));

  /* "cuda/ccuda.pyx":1004
 * 
 * cdef CUresult cuTexObjectGetResourceDesc(CUDA_RESOURCE_DESC* pResDesc, CUtexObject texObject) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexObjectGetResourceDesc(pResDesc, texObject)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexObjectGetTextureDesc(CUDA_TEXTURE_DESC* pTexDesc, CUtexObject texObject) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexObjectGetResourceDesc(__pyx_v_pResDesc, __pyx_v_texObject); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 1004, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":1003
 *     return ccuda._cuTexObjectDestroy(texObject)
 * 
 * cdef CUresult cuTexObjectGetResourceDesc(CUDA_RESOURCE_DESC* pResDesc, CUtexObject texObject) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexObjectGetResourceDesc(pResDesc, texObject)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexObjectGetResourceDesc", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":1006
 *     return ccuda._cuTexObjectGetResourceDesc(pResDesc, texObject)
 * 
 * cdef CUresult cuTexObjectGetTextureDesc(CUDA_TEXTURE_DESC* pTexDesc, CUtexObject texObject) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexObjectGetTextureDesc(pTexDesc, texObject)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexObjectGetTextureDesc(__pyx_t_4cuda_5ccuda_CUDA_TEXTURE_DESC *__pyx_v_pTexDesc, __pyx_t_4cuda_5ccuda_CUtexObject __pyx_v_texObject) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexObjectGetTextureDesc", __pyx_f[0], 1006, 1, __PYX_ERR(0, 1006, __pyx_L1_error));

  /* "cuda/ccuda.pyx":1007
 * 
 * cdef CUresult cuTexObjectGetTextureDesc(CUDA_TEXTURE_DESC* pTexDesc, CUtexObject texObject) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexObjectGetTextureDesc(pTexDesc, texObject)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuTexObjectGetResourceViewDesc(CUDA_RESOURCE_VIEW_DESC* pResViewDesc, CUtexObject texObject) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexObjectGetTextureDesc(__pyx_v_pTexDesc, __pyx_v_texObject); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 1007, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":1006
 *     return ccuda._cuTexObjectGetResourceDesc(pResDesc, texObject)
 * 
 * cdef CUresult cuTexObjectGetTextureDesc(CUDA_TEXTURE_DESC* pTexDesc, CUtexObject texObject) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexObjectGetTextureDesc(pTexDesc, texObject)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexObjectGetTextureDesc", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":1009
 *     return ccuda._cuTexObjectGetTextureDesc(pTexDesc, texObject)
 * 
 * cdef CUresult cuTexObjectGetResourceViewDesc(CUDA_RESOURCE_VIEW_DESC* pResViewDesc, CUtexObject texObject) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexObjectGetResourceViewDesc(pResViewDesc, texObject)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuTexObjectGetResourceViewDesc(__pyx_t_4cuda_5ccuda_CUDA_RESOURCE_VIEW_DESC *__pyx_v_pResViewDesc, __pyx_t_4cuda_5ccuda_CUtexObject __pyx_v_texObject) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuTexObjectGetResourceViewDesc", __pyx_f[0], 1009, 1, __PYX_ERR(0, 1009, __pyx_L1_error));

  /* "cuda/ccuda.pyx":1010
 * 
 * cdef CUresult cuTexObjectGetResourceViewDesc(CUDA_RESOURCE_VIEW_DESC* pResViewDesc, CUtexObject texObject) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuTexObjectGetResourceViewDesc(pResViewDesc, texObject)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuSurfObjectCreate(CUsurfObject* pSurfObject, const CUDA_RESOURCE_DESC* pResDesc) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuTexObjectGetResourceViewDesc(__pyx_v_pResViewDesc, __pyx_v_texObject); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 1010, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":1009
 *     return ccuda._cuTexObjectGetTextureDesc(pTexDesc, texObject)
 * 
 * cdef CUresult cuTexObjectGetResourceViewDesc(CUDA_RESOURCE_VIEW_DESC* pResViewDesc, CUtexObject texObject) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuTexObjectGetResourceViewDesc(pResViewDesc, texObject)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuTexObjectGetResourceViewDesc", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":1012
 *     return ccuda._cuTexObjectGetResourceViewDesc(pResViewDesc, texObject)
 * 
 * cdef CUresult cuSurfObjectCreate(CUsurfObject* pSurfObject, const CUDA_RESOURCE_DESC* pResDesc) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuSurfObjectCreate(pSurfObject, pResDesc)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuSurfObjectCreate(__pyx_t_4cuda_5ccuda_CUsurfObject *__pyx_v_pSurfObject, __pyx_t_4cuda_5ccuda_CUDA_RESOURCE_DESC const *__pyx_v_pResDesc) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuSurfObjectCreate", __pyx_f[0], 1012, 1, __PYX_ERR(0, 1012, __pyx_L1_error));

  /* "cuda/ccuda.pyx":1013
 * 
 * cdef CUresult cuSurfObjectCreate(CUsurfObject* pSurfObject, const CUDA_RESOURCE_DESC* pResDesc) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuSurfObjectCreate(pSurfObject, pResDesc)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuSurfObjectDestroy(CUsurfObject surfObject) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuSurfObjectCreate(__pyx_v_pSurfObject, __pyx_v_pResDesc); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 1013, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":1012
 *     return ccuda._cuTexObjectGetResourceViewDesc(pResViewDesc, texObject)
 * 
 * cdef CUresult cuSurfObjectCreate(CUsurfObject* pSurfObject, const CUDA_RESOURCE_DESC* pResDesc) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuSurfObjectCreate(pSurfObject, pResDesc)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuSurfObjectCreate", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":1015
 *     return ccuda._cuSurfObjectCreate(pSurfObject, pResDesc)
 * 
 * cdef CUresult cuSurfObjectDestroy(CUsurfObject surfObject) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuSurfObjectDestroy(surfObject)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuSurfObjectDestroy(__pyx_t_4cuda_5ccuda_CUsurfObject __pyx_v_surfObject) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuSurfObjectDestroy", __pyx_f[0], 1015, 1, __PYX_ERR(0, 1015, __pyx_L1_error));

  /* "cuda/ccuda.pyx":1016
 * 
 * cdef CUresult cuSurfObjectDestroy(CUsurfObject surfObject) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuSurfObjectDestroy(surfObject)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuSurfObjectGetResourceDesc(CUDA_RESOURCE_DESC* pResDesc, CUsurfObject surfObject) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuSurfObjectDestroy(__pyx_v_surfObject); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 1016, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":1015
 *     return ccuda._cuSurfObjectCreate(pSurfObject, pResDesc)
 * 
 * cdef CUresult cuSurfObjectDestroy(CUsurfObject surfObject) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuSurfObjectDestroy(surfObject)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuSurfObjectDestroy", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":1018
 *     return ccuda._cuSurfObjectDestroy(surfObject)
 * 
 * cdef CUresult cuSurfObjectGetResourceDesc(CUDA_RESOURCE_DESC* pResDesc, CUsurfObject surfObject) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuSurfObjectGetResourceDesc(pResDesc, surfObject)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuSurfObjectGetResourceDesc(__pyx_t_4cuda_5ccuda_CUDA_RESOURCE_DESC *__pyx_v_pResDesc, __pyx_t_4cuda_5ccuda_CUsurfObject __pyx_v_surfObject) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuSurfObjectGetResourceDesc", __pyx_f[0], 1018, 1, __PYX_ERR(0, 1018, __pyx_L1_error));

  /* "cuda/ccuda.pyx":1019
 * 
 * cdef CUresult cuSurfObjectGetResourceDesc(CUDA_RESOURCE_DESC* pResDesc, CUsurfObject surfObject) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuSurfObjectGetResourceDesc(pResDesc, surfObject)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDeviceCanAccessPeer(int* canAccessPeer, CUdevice dev, CUdevice peerDev) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuSurfObjectGetResourceDesc(__pyx_v_pResDesc, __pyx_v_surfObject); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 1019, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":1018
 *     return ccuda._cuSurfObjectDestroy(surfObject)
 * 
 * cdef CUresult cuSurfObjectGetResourceDesc(CUDA_RESOURCE_DESC* pResDesc, CUsurfObject surfObject) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuSurfObjectGetResourceDesc(pResDesc, surfObject)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuSurfObjectGetResourceDesc", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":1021
 *     return ccuda._cuSurfObjectGetResourceDesc(pResDesc, surfObject)
 * 
 * cdef CUresult cuDeviceCanAccessPeer(int* canAccessPeer, CUdevice dev, CUdevice peerDev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceCanAccessPeer(canAccessPeer, dev, peerDev)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDeviceCanAccessPeer(int *__pyx_v_canAccessPeer, __pyx_t_4cuda_5ccuda_CUdevice __pyx_v_dev, __pyx_t_4cuda_5ccuda_CUdevice __pyx_v_peerDev) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDeviceCanAccessPeer", __pyx_f[0], 1021, 1, __PYX_ERR(0, 1021, __pyx_L1_error));

  /* "cuda/ccuda.pyx":1022
 * 
 * cdef CUresult cuDeviceCanAccessPeer(int* canAccessPeer, CUdevice dev, CUdevice peerDev) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDeviceCanAccessPeer(canAccessPeer, dev, peerDev)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuCtxEnablePeerAccess(CUcontext peerContext, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDeviceCanAccessPeer(__pyx_v_canAccessPeer, __pyx_v_dev, __pyx_v_peerDev); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 1022, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":1021
 *     return ccuda._cuSurfObjectGetResourceDesc(pResDesc, surfObject)
 * 
 * cdef CUresult cuDeviceCanAccessPeer(int* canAccessPeer, CUdevice dev, CUdevice peerDev) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceCanAccessPeer(canAccessPeer, dev, peerDev)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDeviceCanAccessPeer", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":1024
 *     return ccuda._cuDeviceCanAccessPeer(canAccessPeer, dev, peerDev)
 * 
 * cdef CUresult cuCtxEnablePeerAccess(CUcontext peerContext, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxEnablePeerAccess(peerContext, Flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuCtxEnablePeerAccess(__pyx_t_4cuda_5ccuda_CUcontext __pyx_v_peerContext, unsigned int __pyx_v_Flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuCtxEnablePeerAccess", __pyx_f[0], 1024, 1, __PYX_ERR(0, 1024, __pyx_L1_error));

  /* "cuda/ccuda.pyx":1025
 * 
 * cdef CUresult cuCtxEnablePeerAccess(CUcontext peerContext, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuCtxEnablePeerAccess(peerContext, Flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuCtxDisablePeerAccess(CUcontext peerContext) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuCtxEnablePeerAccess(__pyx_v_peerContext, __pyx_v_Flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 1025, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":1024
 *     return ccuda._cuDeviceCanAccessPeer(canAccessPeer, dev, peerDev)
 * 
 * cdef CUresult cuCtxEnablePeerAccess(CUcontext peerContext, unsigned int Flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxEnablePeerAccess(peerContext, Flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuCtxEnablePeerAccess", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":1027
 *     return ccuda._cuCtxEnablePeerAccess(peerContext, Flags)
 * 
 * cdef CUresult cuCtxDisablePeerAccess(CUcontext peerContext) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxDisablePeerAccess(peerContext)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuCtxDisablePeerAccess(__pyx_t_4cuda_5ccuda_CUcontext __pyx_v_peerContext) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuCtxDisablePeerAccess", __pyx_f[0], 1027, 1, __PYX_ERR(0, 1027, __pyx_L1_error));

  /* "cuda/ccuda.pyx":1028
 * 
 * cdef CUresult cuCtxDisablePeerAccess(CUcontext peerContext) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuCtxDisablePeerAccess(peerContext)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuDeviceGetP2PAttribute(int* value, CUdevice_P2PAttribute attrib, CUdevice srcDevice, CUdevice dstDevice) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuCtxDisablePeerAccess(__pyx_v_peerContext); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 1028, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":1027
 *     return ccuda._cuCtxEnablePeerAccess(peerContext, Flags)
 * 
 * cdef CUresult cuCtxDisablePeerAccess(CUcontext peerContext) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuCtxDisablePeerAccess(peerContext)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuCtxDisablePeerAccess", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":1030
 *     return ccuda._cuCtxDisablePeerAccess(peerContext)
 * 
 * cdef CUresult cuDeviceGetP2PAttribute(int* value, CUdevice_P2PAttribute attrib, CUdevice srcDevice, CUdevice dstDevice) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetP2PAttribute(value, attrib, srcDevice, dstDevice)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuDeviceGetP2PAttribute(int *__pyx_v_value, __pyx_t_4cuda_5ccuda_CUdevice_P2PAttribute __pyx_v_attrib, __pyx_t_4cuda_5ccuda_CUdevice __pyx_v_srcDevice, __pyx_t_4cuda_5ccuda_CUdevice __pyx_v_dstDevice) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuDeviceGetP2PAttribute", __pyx_f[0], 1030, 1, __PYX_ERR(0, 1030, __pyx_L1_error));

  /* "cuda/ccuda.pyx":1031
 * 
 * cdef CUresult cuDeviceGetP2PAttribute(int* value, CUdevice_P2PAttribute attrib, CUdevice srcDevice, CUdevice dstDevice) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuDeviceGetP2PAttribute(value, attrib, srcDevice, dstDevice)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphicsUnregisterResource(CUgraphicsResource resource) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetP2PAttribute(__pyx_v_value, __pyx_v_attrib, __pyx_v_srcDevice, __pyx_v_dstDevice); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 1031, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":1030
 *     return ccuda._cuCtxDisablePeerAccess(peerContext)
 * 
 * cdef CUresult cuDeviceGetP2PAttribute(int* value, CUdevice_P2PAttribute attrib, CUdevice srcDevice, CUdevice dstDevice) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuDeviceGetP2PAttribute(value, attrib, srcDevice, dstDevice)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuDeviceGetP2PAttribute", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":1033
 *     return ccuda._cuDeviceGetP2PAttribute(value, attrib, srcDevice, dstDevice)
 * 
 * cdef CUresult cuGraphicsUnregisterResource(CUgraphicsResource resource) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphicsUnregisterResource(resource)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphicsUnregisterResource(__pyx_t_4cuda_5ccuda_CUgraphicsResource __pyx_v_resource) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphicsUnregisterResource", __pyx_f[0], 1033, 1, __PYX_ERR(0, 1033, __pyx_L1_error));

  /* "cuda/ccuda.pyx":1034
 * 
 * cdef CUresult cuGraphicsUnregisterResource(CUgraphicsResource resource) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphicsUnregisterResource(resource)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphicsSubResourceGetMappedArray(CUarray* pArray, CUgraphicsResource resource, unsigned int arrayIndex, unsigned int mipLevel) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphicsUnregisterResource(__pyx_v_resource); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 1034, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":1033
 *     return ccuda._cuDeviceGetP2PAttribute(value, attrib, srcDevice, dstDevice)
 * 
 * cdef CUresult cuGraphicsUnregisterResource(CUgraphicsResource resource) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphicsUnregisterResource(resource)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphicsUnregisterResource", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":1036
 *     return ccuda._cuGraphicsUnregisterResource(resource)
 * 
 * cdef CUresult cuGraphicsSubResourceGetMappedArray(CUarray* pArray, CUgraphicsResource resource, unsigned int arrayIndex, unsigned int mipLevel) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphicsSubResourceGetMappedArray(pArray, resource, arrayIndex, mipLevel)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphicsSubResourceGetMappedArray(__pyx_t_4cuda_5ccuda_CUarray *__pyx_v_pArray, __pyx_t_4cuda_5ccuda_CUgraphicsResource __pyx_v_resource, unsigned int __pyx_v_arrayIndex, unsigned int __pyx_v_mipLevel) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphicsSubResourceGetMappedArray", __pyx_f[0], 1036, 1, __PYX_ERR(0, 1036, __pyx_L1_error));

  /* "cuda/ccuda.pyx":1037
 * 
 * cdef CUresult cuGraphicsSubResourceGetMappedArray(CUarray* pArray, CUgraphicsResource resource, unsigned int arrayIndex, unsigned int mipLevel) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphicsSubResourceGetMappedArray(pArray, resource, arrayIndex, mipLevel)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphicsResourceGetMappedMipmappedArray(CUmipmappedArray* pMipmappedArray, CUgraphicsResource resource) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphicsSubResourceGetMappedArray(__pyx_v_pArray, __pyx_v_resource, __pyx_v_arrayIndex, __pyx_v_mipLevel); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 1037, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":1036
 *     return ccuda._cuGraphicsUnregisterResource(resource)
 * 
 * cdef CUresult cuGraphicsSubResourceGetMappedArray(CUarray* pArray, CUgraphicsResource resource, unsigned int arrayIndex, unsigned int mipLevel) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphicsSubResourceGetMappedArray(pArray, resource, arrayIndex, mipLevel)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphicsSubResourceGetMappedArray", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":1039
 *     return ccuda._cuGraphicsSubResourceGetMappedArray(pArray, resource, arrayIndex, mipLevel)
 * 
 * cdef CUresult cuGraphicsResourceGetMappedMipmappedArray(CUmipmappedArray* pMipmappedArray, CUgraphicsResource resource) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphicsResourceGetMappedMipmappedArray(pMipmappedArray, resource)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphicsResourceGetMappedMipmappedArray(__pyx_t_4cuda_5ccuda_CUmipmappedArray *__pyx_v_pMipmappedArray, __pyx_t_4cuda_5ccuda_CUgraphicsResource __pyx_v_resource) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphicsResourceGetMappedMipmappedArray", __pyx_f[0], 1039, 1, __PYX_ERR(0, 1039, __pyx_L1_error));

  /* "cuda/ccuda.pyx":1040
 * 
 * cdef CUresult cuGraphicsResourceGetMappedMipmappedArray(CUmipmappedArray* pMipmappedArray, CUgraphicsResource resource) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphicsResourceGetMappedMipmappedArray(pMipmappedArray, resource)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphicsResourceGetMappedPointer(CUdeviceptr* pDevPtr, size_t* pSize, CUgraphicsResource resource) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphicsResourceGetMappedMipmappedArray(__pyx_v_pMipmappedArray, __pyx_v_resource); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 1040, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":1039
 *     return ccuda._cuGraphicsSubResourceGetMappedArray(pArray, resource, arrayIndex, mipLevel)
 * 
 * cdef CUresult cuGraphicsResourceGetMappedMipmappedArray(CUmipmappedArray* pMipmappedArray, CUgraphicsResource resource) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphicsResourceGetMappedMipmappedArray(pMipmappedArray, resource)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphicsResourceGetMappedMipmappedArray", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":1042
 *     return ccuda._cuGraphicsResourceGetMappedMipmappedArray(pMipmappedArray, resource)
 * 
 * cdef CUresult cuGraphicsResourceGetMappedPointer(CUdeviceptr* pDevPtr, size_t* pSize, CUgraphicsResource resource) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphicsResourceGetMappedPointer_v2(pDevPtr, pSize, resource)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphicsResourceGetMappedPointer(__pyx_t_4cuda_5ccuda_CUdeviceptr *__pyx_v_pDevPtr, size_t *__pyx_v_pSize, __pyx_t_4cuda_5ccuda_CUgraphicsResource __pyx_v_resource) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphicsResourceGetMappedPointer", __pyx_f[0], 1042, 1, __PYX_ERR(0, 1042, __pyx_L1_error));

  /* "cuda/ccuda.pyx":1043
 * 
 * cdef CUresult cuGraphicsResourceGetMappedPointer(CUdeviceptr* pDevPtr, size_t* pSize, CUgraphicsResource resource) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphicsResourceGetMappedPointer_v2(pDevPtr, pSize, resource)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphicsResourceSetMapFlags(CUgraphicsResource resource, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphicsResourceGetMappedPointer_v2(__pyx_v_pDevPtr, __pyx_v_pSize, __pyx_v_resource); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 1043, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":1042
 *     return ccuda._cuGraphicsResourceGetMappedMipmappedArray(pMipmappedArray, resource)
 * 
 * cdef CUresult cuGraphicsResourceGetMappedPointer(CUdeviceptr* pDevPtr, size_t* pSize, CUgraphicsResource resource) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphicsResourceGetMappedPointer_v2(pDevPtr, pSize, resource)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphicsResourceGetMappedPointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":1045
 *     return ccuda._cuGraphicsResourceGetMappedPointer_v2(pDevPtr, pSize, resource)
 * 
 * cdef CUresult cuGraphicsResourceSetMapFlags(CUgraphicsResource resource, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphicsResourceSetMapFlags_v2(resource, flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphicsResourceSetMapFlags(__pyx_t_4cuda_5ccuda_CUgraphicsResource __pyx_v_resource, unsigned int __pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphicsResourceSetMapFlags", __pyx_f[0], 1045, 1, __PYX_ERR(0, 1045, __pyx_L1_error));

  /* "cuda/ccuda.pyx":1046
 * 
 * cdef CUresult cuGraphicsResourceSetMapFlags(CUgraphicsResource resource, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphicsResourceSetMapFlags_v2(resource, flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphicsMapResources(unsigned int count, CUgraphicsResource* resources, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphicsResourceSetMapFlags_v2(__pyx_v_resource, __pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 1046, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":1045
 *     return ccuda._cuGraphicsResourceGetMappedPointer_v2(pDevPtr, pSize, resource)
 * 
 * cdef CUresult cuGraphicsResourceSetMapFlags(CUgraphicsResource resource, unsigned int flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphicsResourceSetMapFlags_v2(resource, flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphicsResourceSetMapFlags", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":1048
 *     return ccuda._cuGraphicsResourceSetMapFlags_v2(resource, flags)
 * 
 * cdef CUresult cuGraphicsMapResources(unsigned int count, CUgraphicsResource* resources, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphicsMapResources(count, resources, hStream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphicsMapResources(unsigned int __pyx_v_count, __pyx_t_4cuda_5ccuda_CUgraphicsResource *__pyx_v_resources, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphicsMapResources", __pyx_f[0], 1048, 1, __PYX_ERR(0, 1048, __pyx_L1_error));

  /* "cuda/ccuda.pyx":1049
 * 
 * cdef CUresult cuGraphicsMapResources(unsigned int count, CUgraphicsResource* resources, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphicsMapResources(count, resources, hStream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGraphicsUnmapResources(unsigned int count, CUgraphicsResource* resources, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphicsMapResources(__pyx_v_count, __pyx_v_resources, __pyx_v_hStream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 1049, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":1048
 *     return ccuda._cuGraphicsResourceSetMapFlags_v2(resource, flags)
 * 
 * cdef CUresult cuGraphicsMapResources(unsigned int count, CUgraphicsResource* resources, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphicsMapResources(count, resources, hStream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphicsMapResources", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":1051
 *     return ccuda._cuGraphicsMapResources(count, resources, hStream)
 * 
 * cdef CUresult cuGraphicsUnmapResources(unsigned int count, CUgraphicsResource* resources, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphicsUnmapResources(count, resources, hStream)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGraphicsUnmapResources(unsigned int __pyx_v_count, __pyx_t_4cuda_5ccuda_CUgraphicsResource *__pyx_v_resources, __pyx_t_4cuda_5ccuda_CUstream __pyx_v_hStream) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGraphicsUnmapResources", __pyx_f[0], 1051, 1, __PYX_ERR(0, 1051, __pyx_L1_error));

  /* "cuda/ccuda.pyx":1052
 * 
 * cdef CUresult cuGraphicsUnmapResources(unsigned int count, CUgraphicsResource* resources, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGraphicsUnmapResources(count, resources, hStream)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGetProcAddress(const char* symbol, void** pfn, int cudaVersion, cuuint64_t flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGraphicsUnmapResources(__pyx_v_count, __pyx_v_resources, __pyx_v_hStream); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 1052, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":1051
 *     return ccuda._cuGraphicsMapResources(count, resources, hStream)
 * 
 * cdef CUresult cuGraphicsUnmapResources(unsigned int count, CUgraphicsResource* resources, CUstream hStream) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGraphicsUnmapResources(count, resources, hStream)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGraphicsUnmapResources", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":1054
 *     return ccuda._cuGraphicsUnmapResources(count, resources, hStream)
 * 
 * cdef CUresult cuGetProcAddress(const char* symbol, void** pfn, int cudaVersion, cuuint64_t flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGetProcAddress(symbol, pfn, cudaVersion, flags)
 * 
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGetProcAddress(char const *__pyx_v_symbol, void **__pyx_v_pfn, int __pyx_v_cudaVersion, __pyx_t_4cuda_5ccuda_cuuint64_t __pyx_v_flags) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGetProcAddress", __pyx_f[0], 1054, 1, __PYX_ERR(0, 1054, __pyx_L1_error));

  /* "cuda/ccuda.pyx":1055
 * 
 * cdef CUresult cuGetProcAddress(const char* symbol, void** pfn, int cudaVersion, cuuint64_t flags) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGetProcAddress(symbol, pfn, cudaVersion, flags)             # <<<<<<<<<<<<<<
 * 
 * cdef CUresult cuGetExportTable(const void** ppExportTable, const CUuuid* pExportTableId) nogil except ?CUDA_ERROR_NOT_FOUND:
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGetProcAddress(__pyx_v_symbol, __pyx_v_pfn, __pyx_v_cudaVersion, __pyx_v_flags); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 1055, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":1054
 *     return ccuda._cuGraphicsUnmapResources(count, resources, hStream)
 * 
 * cdef CUresult cuGetProcAddress(const char* symbol, void** pfn, int cudaVersion, cuuint64_t flags) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGetProcAddress(symbol, pfn, cudaVersion, flags)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGetProcAddress", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

/* "cuda/ccuda.pyx":1057
 *     return ccuda._cuGetProcAddress(symbol, pfn, cudaVersion, flags)
 * 
 * cdef CUresult cuGetExportTable(const void** ppExportTable, const CUuuid* pExportTableId) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGetExportTable(ppExportTable, pExportTableId)
 */

static __pyx_t_4cuda_5ccuda_CUresult __pyx_f_4cuda_5ccuda_cuGetExportTable(void const **__pyx_v_ppExportTable, __pyx_t_4cuda_5ccuda_CUuuid const *__pyx_v_pExportTableId) {
  __pyx_t_4cuda_5ccuda_CUresult __pyx_r;
  __Pyx_TraceDeclarations
  __pyx_t_4cuda_5ccuda_CUresult __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceCall("cuGetExportTable", __pyx_f[0], 1057, 1, __PYX_ERR(0, 1057, __pyx_L1_error));

  /* "cuda/ccuda.pyx":1058
 * 
 * cdef CUresult cuGetExportTable(const void** ppExportTable, const CUuuid* pExportTableId) nogil except ?CUDA_ERROR_NOT_FOUND:
 *     return ccuda._cuGetExportTable(ppExportTable, pExportTableId)             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __pyx_f_4cuda_5_cuda_5ccuda__cuGetExportTable(__pyx_v_ppExportTable, __pyx_v_pExportTableId); if (unlikely(__pyx_t_1 == ((__pyx_t_4cuda_5ccuda_CUresult)__pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND) && __Pyx_ErrOccurredWithGIL())) __PYX_ERR(0, 1058, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cuda/ccuda.pyx":1057
 *     return ccuda._cuGetProcAddress(symbol, pfn, cudaVersion, flags)
 * 
 * cdef CUresult cuGetExportTable(const void** ppExportTable, const CUuuid* pExportTableId) nogil except ?CUDA_ERROR_NOT_FOUND:             # <<<<<<<<<<<<<<
 *     return ccuda._cuGetExportTable(ppExportTable, pExportTableId)
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("cuda.ccuda.cuGetExportTable", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = __pyx_e_4cuda_5ccuda_CUDA_ERROR_NOT_FOUND;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None, 1);
  return __pyx_r;
}

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_ccuda(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_ccuda},
  {0, NULL}
};
#endif

static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    "ccuda",
    0, /* m_doc */
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    0, /* m_size */
  #else
    -1, /* m_size */
  #endif
    __pyx_methods /* m_methods */,
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    __pyx_moduledef_slots, /* m_slots */
  #else
    NULL, /* m_reload */
  #endif
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {
  return 0;
}

static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);
  __Pyx_RefNannyFinishContext();
  return 0;
}

static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  if (__Pyx_ExportFunction("cuGetErrorString", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGetErrorString, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUresult, char const **)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGetErrorName", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGetErrorName, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUresult, char const **)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuInit", (void (*)(void))__pyx_f_4cuda_5ccuda_cuInit, "__pyx_t_4cuda_5ccuda_CUresult (unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDriverGetVersion", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDriverGetVersion, "__pyx_t_4cuda_5ccuda_CUresult (int *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDeviceGet", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDeviceGet, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdevice *, int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDeviceGetCount", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDeviceGetCount, "__pyx_t_4cuda_5ccuda_CUresult (int *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDeviceGetName", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDeviceGetName, "__pyx_t_4cuda_5ccuda_CUresult (char *, int, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDeviceGetUuid", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDeviceGetUuid, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUuuid *, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDeviceGetUuid_v2", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDeviceGetUuid_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUuuid *, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDeviceGetLuid", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDeviceGetLuid, "__pyx_t_4cuda_5ccuda_CUresult (char *, unsigned int *, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDeviceTotalMem", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDeviceTotalMem, "__pyx_t_4cuda_5ccuda_CUresult (size_t *, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDeviceGetTexture1DLinearMaxWidth", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDeviceGetTexture1DLinearMaxWidth, "__pyx_t_4cuda_5ccuda_CUresult (size_t *, __pyx_t_4cuda_5ccuda_CUarray_format, unsigned int, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDeviceGetAttribute", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDeviceGetAttribute, "__pyx_t_4cuda_5ccuda_CUresult (int *, __pyx_t_4cuda_5ccuda_CUdevice_attribute, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDeviceGetNvSciSyncAttributes", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDeviceGetNvSciSyncAttributes, "__pyx_t_4cuda_5ccuda_CUresult (void *, __pyx_t_4cuda_5ccuda_CUdevice, int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDeviceSetMemPool", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDeviceSetMemPool, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdevice, __pyx_t_4cuda_5ccuda_CUmemoryPool)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDeviceGetMemPool", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDeviceGetMemPool, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemoryPool *, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDeviceGetDefaultMemPool", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDeviceGetDefaultMemPool, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemoryPool *, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuFlushGPUDirectRDMAWrites", (void (*)(void))__pyx_f_4cuda_5ccuda_cuFlushGPUDirectRDMAWrites, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUflushGPUDirectRDMAWritesTarget, __pyx_t_4cuda_5ccuda_CUflushGPUDirectRDMAWritesScope)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDeviceGetProperties", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDeviceGetProperties, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdevprop *, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDeviceComputeCapability", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDeviceComputeCapability, "__pyx_t_4cuda_5ccuda_CUresult (int *, int *, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDevicePrimaryCtxRetain", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDevicePrimaryCtxRetain, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUcontext *, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDevicePrimaryCtxRelease", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDevicePrimaryCtxRelease, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDevicePrimaryCtxSetFlags", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDevicePrimaryCtxSetFlags, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdevice, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDevicePrimaryCtxGetState", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDevicePrimaryCtxGetState, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdevice, unsigned int *, int *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDevicePrimaryCtxReset", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDevicePrimaryCtxReset, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDeviceGetExecAffinitySupport", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDeviceGetExecAffinitySupport, "__pyx_t_4cuda_5ccuda_CUresult (int *, __pyx_t_4cuda_5ccuda_CUexecAffinityType, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuCtxCreate", (void (*)(void))__pyx_f_4cuda_5ccuda_cuCtxCreate, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUcontext *, unsigned int, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuCtxCreate_v3", (void (*)(void))__pyx_f_4cuda_5ccuda_cuCtxCreate_v3, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUcontext *, __pyx_t_4cuda_5ccuda_CUexecAffinityParam *, int, unsigned int, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuCtxDestroy", (void (*)(void))__pyx_f_4cuda_5ccuda_cuCtxDestroy, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUcontext)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuCtxPushCurrent", (void (*)(void))__pyx_f_4cuda_5ccuda_cuCtxPushCurrent, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUcontext)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuCtxPopCurrent", (void (*)(void))__pyx_f_4cuda_5ccuda_cuCtxPopCurrent, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUcontext *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuCtxSetCurrent", (void (*)(void))__pyx_f_4cuda_5ccuda_cuCtxSetCurrent, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUcontext)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuCtxGetCurrent", (void (*)(void))__pyx_f_4cuda_5ccuda_cuCtxGetCurrent, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUcontext *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuCtxGetDevice", (void (*)(void))__pyx_f_4cuda_5ccuda_cuCtxGetDevice, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdevice *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuCtxGetFlags", (void (*)(void))__pyx_f_4cuda_5ccuda_cuCtxGetFlags, "__pyx_t_4cuda_5ccuda_CUresult (unsigned int *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuCtxSynchronize", (void (*)(void))__pyx_f_4cuda_5ccuda_cuCtxSynchronize, "__pyx_t_4cuda_5ccuda_CUresult (void)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuCtxSetLimit", (void (*)(void))__pyx_f_4cuda_5ccuda_cuCtxSetLimit, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUlimit, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuCtxGetLimit", (void (*)(void))__pyx_f_4cuda_5ccuda_cuCtxGetLimit, "__pyx_t_4cuda_5ccuda_CUresult (size_t *, __pyx_t_4cuda_5ccuda_CUlimit)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuCtxGetCacheConfig", (void (*)(void))__pyx_f_4cuda_5ccuda_cuCtxGetCacheConfig, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunc_cache *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuCtxSetCacheConfig", (void (*)(void))__pyx_f_4cuda_5ccuda_cuCtxSetCacheConfig, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunc_cache)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuCtxGetSharedMemConfig", (void (*)(void))__pyx_f_4cuda_5ccuda_cuCtxGetSharedMemConfig, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUsharedconfig *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuCtxSetSharedMemConfig", (void (*)(void))__pyx_f_4cuda_5ccuda_cuCtxSetSharedMemConfig, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUsharedconfig)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuCtxGetApiVersion", (void (*)(void))__pyx_f_4cuda_5ccuda_cuCtxGetApiVersion, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUcontext, unsigned int *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuCtxGetStreamPriorityRange", (void (*)(void))__pyx_f_4cuda_5ccuda_cuCtxGetStreamPriorityRange, "__pyx_t_4cuda_5ccuda_CUresult (int *, int *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuCtxResetPersistingL2Cache", (void (*)(void))__pyx_f_4cuda_5ccuda_cuCtxResetPersistingL2Cache, "__pyx_t_4cuda_5ccuda_CUresult (void)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuCtxGetExecAffinity", (void (*)(void))__pyx_f_4cuda_5ccuda_cuCtxGetExecAffinity, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUexecAffinityParam *, __pyx_t_4cuda_5ccuda_CUexecAffinityType)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuCtxAttach", (void (*)(void))__pyx_f_4cuda_5ccuda_cuCtxAttach, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUcontext *, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuCtxDetach", (void (*)(void))__pyx_f_4cuda_5ccuda_cuCtxDetach, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUcontext)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuModuleLoad", (void (*)(void))__pyx_f_4cuda_5ccuda_cuModuleLoad, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmodule *, char const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuModuleLoadData", (void (*)(void))__pyx_f_4cuda_5ccuda_cuModuleLoadData, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmodule *, void const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuModuleLoadDataEx", (void (*)(void))__pyx_f_4cuda_5ccuda_cuModuleLoadDataEx, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmodule *, void const *, unsigned int, __pyx_t_4cuda_5ccuda_CUjit_option *, void **)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuModuleLoadFatBinary", (void (*)(void))__pyx_f_4cuda_5ccuda_cuModuleLoadFatBinary, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmodule *, void const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuModuleUnload", (void (*)(void))__pyx_f_4cuda_5ccuda_cuModuleUnload, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmodule)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuModuleGetFunction", (void (*)(void))__pyx_f_4cuda_5ccuda_cuModuleGetFunction, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction *, __pyx_t_4cuda_5ccuda_CUmodule, char const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuModuleGetGlobal", (void (*)(void))__pyx_f_4cuda_5ccuda_cuModuleGetGlobal, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr *, size_t *, __pyx_t_4cuda_5ccuda_CUmodule, char const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuModuleGetTexRef", (void (*)(void))__pyx_f_4cuda_5ccuda_cuModuleGetTexRef, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexref *, __pyx_t_4cuda_5ccuda_CUmodule, char const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuModuleGetSurfRef", (void (*)(void))__pyx_f_4cuda_5ccuda_cuModuleGetSurfRef, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUsurfref *, __pyx_t_4cuda_5ccuda_CUmodule, char const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuLinkCreate", (void (*)(void))__pyx_f_4cuda_5ccuda_cuLinkCreate, "__pyx_t_4cuda_5ccuda_CUresult (unsigned int, __pyx_t_4cuda_5ccuda_CUjit_option *, void **, __pyx_t_4cuda_5ccuda_CUlinkState *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuLinkAddData", (void (*)(void))__pyx_f_4cuda_5ccuda_cuLinkAddData, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUlinkState, __pyx_t_4cuda_5ccuda_CUjitInputType, void *, size_t, char const *, unsigned int, __pyx_t_4cuda_5ccuda_CUjit_option *, void **)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuLinkAddFile", (void (*)(void))__pyx_f_4cuda_5ccuda_cuLinkAddFile, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUlinkState, __pyx_t_4cuda_5ccuda_CUjitInputType, char const *, unsigned int, __pyx_t_4cuda_5ccuda_CUjit_option *, void **)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuLinkComplete", (void (*)(void))__pyx_f_4cuda_5ccuda_cuLinkComplete, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUlinkState, void **, size_t *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuLinkDestroy", (void (*)(void))__pyx_f_4cuda_5ccuda_cuLinkDestroy, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUlinkState)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemGetInfo", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemGetInfo, "__pyx_t_4cuda_5ccuda_CUresult (size_t *, size_t *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemAlloc", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemAlloc, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr *, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemAllocPitch", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemAllocPitch, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr *, size_t *, size_t, size_t, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemFree", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemFree, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemGetAddressRange", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemGetAddressRange, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr *, size_t *, __pyx_t_4cuda_5ccuda_CUdeviceptr)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemAllocHost", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemAllocHost, "__pyx_t_4cuda_5ccuda_CUresult (void **, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemFreeHost", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemFreeHost, "__pyx_t_4cuda_5ccuda_CUresult (void *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemHostAlloc", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemHostAlloc, "__pyx_t_4cuda_5ccuda_CUresult (void **, size_t, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemHostGetDevicePointer", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemHostGetDevicePointer, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr *, void *, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemHostGetFlags", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemHostGetFlags, "__pyx_t_4cuda_5ccuda_CUresult (unsigned int *, void *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemAllocManaged", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemAllocManaged, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr *, size_t, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDeviceGetByPCIBusId", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDeviceGetByPCIBusId, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdevice *, char const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDeviceGetPCIBusId", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDeviceGetPCIBusId, "__pyx_t_4cuda_5ccuda_CUresult (char *, int, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuIpcGetEventHandle", (void (*)(void))__pyx_f_4cuda_5ccuda_cuIpcGetEventHandle, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUipcEventHandle *, __pyx_t_4cuda_5ccuda_CUevent)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuIpcOpenEventHandle", (void (*)(void))__pyx_f_4cuda_5ccuda_cuIpcOpenEventHandle, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUevent *, __pyx_t_4cuda_5ccuda_CUipcEventHandle)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuIpcGetMemHandle", (void (*)(void))__pyx_f_4cuda_5ccuda_cuIpcGetMemHandle, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUipcMemHandle *, __pyx_t_4cuda_5ccuda_CUdeviceptr)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuIpcOpenMemHandle", (void (*)(void))__pyx_f_4cuda_5ccuda_cuIpcOpenMemHandle, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr *, __pyx_t_4cuda_5ccuda_CUipcMemHandle, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuIpcCloseMemHandle", (void (*)(void))__pyx_f_4cuda_5ccuda_cuIpcCloseMemHandle, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemHostRegister", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemHostRegister, "__pyx_t_4cuda_5ccuda_CUresult (void *, size_t, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemHostUnregister", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemHostUnregister, "__pyx_t_4cuda_5ccuda_CUresult (void *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemcpy", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemcpy, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemcpyPeer", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemcpyPeer, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_CUcontext, __pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_CUcontext, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemcpyHtoD", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemcpyHtoD, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, void const *, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemcpyDtoH", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemcpyDtoH, "__pyx_t_4cuda_5ccuda_CUresult (void *, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemcpyDtoD", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemcpyDtoD, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemcpyDtoA", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemcpyDtoA, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUarray, size_t, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemcpyAtoD", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemcpyAtoD, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_CUarray, size_t, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemcpyHtoA", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemcpyHtoA, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUarray, size_t, void const *, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemcpyAtoH", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemcpyAtoH, "__pyx_t_4cuda_5ccuda_CUresult (void *, __pyx_t_4cuda_5ccuda_CUarray, size_t, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemcpyAtoA", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemcpyAtoA, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUarray, size_t, __pyx_t_4cuda_5ccuda_CUarray, size_t, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemcpy2D", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemcpy2D, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_MEMCPY2D const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemcpy2DUnaligned", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemcpy2DUnaligned, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_MEMCPY2D const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemcpy3D", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemcpy3D, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemcpy3DPeer", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemcpy3DPeer, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D_PEER const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemcpyAsync", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemcpyAsync, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemcpyPeerAsync", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemcpyPeerAsync, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_CUcontext, __pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_CUcontext, size_t, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemcpyHtoDAsync", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemcpyHtoDAsync, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, void const *, size_t, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemcpyDtoHAsync", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemcpyDtoHAsync, "__pyx_t_4cuda_5ccuda_CUresult (void *, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemcpyDtoDAsync", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemcpyDtoDAsync, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemcpyHtoAAsync", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemcpyHtoAAsync, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUarray, size_t, void const *, size_t, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemcpyAtoHAsync", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemcpyAtoHAsync, "__pyx_t_4cuda_5ccuda_CUresult (void *, __pyx_t_4cuda_5ccuda_CUarray, size_t, size_t, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemcpy2DAsync", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemcpy2DAsync, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_MEMCPY2D const *, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemcpy3DAsync", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemcpy3DAsync, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D const *, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemcpy3DPeerAsync", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemcpy3DPeerAsync, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D_PEER const *, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemsetD8", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemsetD8, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, unsigned char, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemsetD16", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemsetD16, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, unsigned short, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemsetD32", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemsetD32, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, unsigned int, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemsetD2D8", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemsetD2D8, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, unsigned char, size_t, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemsetD2D16", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemsetD2D16, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, unsigned short, size_t, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemsetD2D32", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemsetD2D32, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, unsigned int, size_t, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemsetD8Async", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemsetD8Async, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, unsigned char, size_t, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemsetD16Async", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemsetD16Async, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, unsigned short, size_t, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemsetD32Async", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemsetD32Async, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, unsigned int, size_t, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemsetD2D8Async", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemsetD2D8Async, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, unsigned char, size_t, size_t, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemsetD2D16Async", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemsetD2D16Async, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, unsigned short, size_t, size_t, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemsetD2D32Async", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemsetD2D32Async, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, unsigned int, size_t, size_t, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuArrayCreate", (void (*)(void))__pyx_f_4cuda_5ccuda_cuArrayCreate, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUarray *, __pyx_t_4cuda_5ccuda_CUDA_ARRAY_DESCRIPTOR const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuArrayGetDescriptor", (void (*)(void))__pyx_f_4cuda_5ccuda_cuArrayGetDescriptor, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_ARRAY_DESCRIPTOR *, __pyx_t_4cuda_5ccuda_CUarray)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuArrayGetSparseProperties", (void (*)(void))__pyx_f_4cuda_5ccuda_cuArrayGetSparseProperties, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_ARRAY_SPARSE_PROPERTIES *, __pyx_t_4cuda_5ccuda_CUarray)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMipmappedArrayGetSparseProperties", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMipmappedArrayGetSparseProperties, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_ARRAY_SPARSE_PROPERTIES *, __pyx_t_4cuda_5ccuda_CUmipmappedArray)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuArrayGetPlane", (void (*)(void))__pyx_f_4cuda_5ccuda_cuArrayGetPlane, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUarray *, __pyx_t_4cuda_5ccuda_CUarray, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuArrayDestroy", (void (*)(void))__pyx_f_4cuda_5ccuda_cuArrayDestroy, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUarray)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuArray3DCreate", (void (*)(void))__pyx_f_4cuda_5ccuda_cuArray3DCreate, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUarray *, __pyx_t_4cuda_5ccuda_CUDA_ARRAY3D_DESCRIPTOR const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuArray3DGetDescriptor", (void (*)(void))__pyx_f_4cuda_5ccuda_cuArray3DGetDescriptor, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_ARRAY3D_DESCRIPTOR *, __pyx_t_4cuda_5ccuda_CUarray)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMipmappedArrayCreate", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMipmappedArrayCreate, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmipmappedArray *, __pyx_t_4cuda_5ccuda_CUDA_ARRAY3D_DESCRIPTOR const *, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMipmappedArrayGetLevel", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMipmappedArrayGetLevel, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUarray *, __pyx_t_4cuda_5ccuda_CUmipmappedArray, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMipmappedArrayDestroy", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMipmappedArrayDestroy, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmipmappedArray)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemAddressReserve", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemAddressReserve, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr *, size_t, size_t, __pyx_t_4cuda_5ccuda_CUdeviceptr, unsigned PY_LONG_LONG)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemAddressFree", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemAddressFree, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemCreate", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemCreate, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle *, size_t, __pyx_t_4cuda_5ccuda_CUmemAllocationProp const *, unsigned PY_LONG_LONG)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemRelease", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemRelease, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemMap", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemMap, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, size_t, __pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle, unsigned PY_LONG_LONG)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemMapArrayAsync", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemMapArrayAsync, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUarrayMapInfo *, unsigned int, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemUnmap", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemUnmap, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemSetAccess", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemSetAccess, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, __pyx_t_4cuda_5ccuda_CUmemAccessDesc const *, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemGetAccess", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemGetAccess, "__pyx_t_4cuda_5ccuda_CUresult (unsigned PY_LONG_LONG *, __pyx_t_4cuda_5ccuda_CUmemLocation const *, __pyx_t_4cuda_5ccuda_CUdeviceptr)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemExportToShareableHandle", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemExportToShareableHandle, "__pyx_t_4cuda_5ccuda_CUresult (void *, __pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle, __pyx_t_4cuda_5ccuda_CUmemAllocationHandleType, unsigned PY_LONG_LONG)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemImportFromShareableHandle", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemImportFromShareableHandle, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle *, void *, __pyx_t_4cuda_5ccuda_CUmemAllocationHandleType)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemGetAllocationGranularity", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemGetAllocationGranularity, "__pyx_t_4cuda_5ccuda_CUresult (size_t *, __pyx_t_4cuda_5ccuda_CUmemAllocationProp const *, __pyx_t_4cuda_5ccuda_CUmemAllocationGranularity_flags)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemGetAllocationPropertiesFromHandle", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemGetAllocationPropertiesFromHandle, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemAllocationProp *, __pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemRetainAllocationHandle", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemRetainAllocationHandle, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle *, void *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemFreeAsync", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemFreeAsync, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemAllocAsync", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemAllocAsync, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr *, size_t, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemPoolTrimTo", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemPoolTrimTo, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemoryPool, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemPoolSetAttribute", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemPoolSetAttribute, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemoryPool, __pyx_t_4cuda_5ccuda_CUmemPool_attribute, void *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemPoolGetAttribute", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemPoolGetAttribute, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemoryPool, __pyx_t_4cuda_5ccuda_CUmemPool_attribute, void *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemPoolSetAccess", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemPoolSetAccess, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemoryPool, __pyx_t_4cuda_5ccuda_CUmemAccessDesc const *, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemPoolGetAccess", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemPoolGetAccess, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemAccess_flags *, __pyx_t_4cuda_5ccuda_CUmemoryPool, __pyx_t_4cuda_5ccuda_CUmemLocation *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemPoolCreate", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemPoolCreate, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemoryPool *, __pyx_t_4cuda_5ccuda_CUmemPoolProps const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemPoolDestroy", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemPoolDestroy, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemoryPool)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemAllocFromPoolAsync", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemAllocFromPoolAsync, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr *, size_t, __pyx_t_4cuda_5ccuda_CUmemoryPool, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemPoolExportToShareableHandle", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemPoolExportToShareableHandle, "__pyx_t_4cuda_5ccuda_CUresult (void *, __pyx_t_4cuda_5ccuda_CUmemoryPool, __pyx_t_4cuda_5ccuda_CUmemAllocationHandleType, unsigned PY_LONG_LONG)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemPoolImportFromShareableHandle", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemPoolImportFromShareableHandle, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemoryPool *, void *, __pyx_t_4cuda_5ccuda_CUmemAllocationHandleType, unsigned PY_LONG_LONG)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemPoolExportPointer", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemPoolExportPointer, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemPoolPtrExportData *, __pyx_t_4cuda_5ccuda_CUdeviceptr)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemPoolImportPointer", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemPoolImportPointer, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr *, __pyx_t_4cuda_5ccuda_CUmemoryPool, __pyx_t_4cuda_5ccuda_CUmemPoolPtrExportData *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuPointerGetAttribute", (void (*)(void))__pyx_f_4cuda_5ccuda_cuPointerGetAttribute, "__pyx_t_4cuda_5ccuda_CUresult (void *, __pyx_t_4cuda_5ccuda_CUpointer_attribute, __pyx_t_4cuda_5ccuda_CUdeviceptr)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemPrefetchAsync", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemPrefetchAsync, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, __pyx_t_4cuda_5ccuda_CUdevice, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemAdvise", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemAdvise, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, __pyx_t_4cuda_5ccuda_CUmem_advise, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemRangeGetAttribute", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemRangeGetAttribute, "__pyx_t_4cuda_5ccuda_CUresult (void *, size_t, __pyx_t_4cuda_5ccuda_CUmem_range_attribute, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuMemRangeGetAttributes", (void (*)(void))__pyx_f_4cuda_5ccuda_cuMemRangeGetAttributes, "__pyx_t_4cuda_5ccuda_CUresult (void **, size_t *, __pyx_t_4cuda_5ccuda_CUmem_range_attribute *, size_t, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuPointerSetAttribute", (void (*)(void))__pyx_f_4cuda_5ccuda_cuPointerSetAttribute, "__pyx_t_4cuda_5ccuda_CUresult (void const *, __pyx_t_4cuda_5ccuda_CUpointer_attribute, __pyx_t_4cuda_5ccuda_CUdeviceptr)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuPointerGetAttributes", (void (*)(void))__pyx_f_4cuda_5ccuda_cuPointerGetAttributes, "__pyx_t_4cuda_5ccuda_CUresult (unsigned int, __pyx_t_4cuda_5ccuda_CUpointer_attribute *, void **, __pyx_t_4cuda_5ccuda_CUdeviceptr)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuStreamCreate", (void (*)(void))__pyx_f_4cuda_5ccuda_cuStreamCreate, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream *, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuStreamCreateWithPriority", (void (*)(void))__pyx_f_4cuda_5ccuda_cuStreamCreateWithPriority, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream *, unsigned int, int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuStreamGetPriority", (void (*)(void))__pyx_f_4cuda_5ccuda_cuStreamGetPriority, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, int *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuStreamGetFlags", (void (*)(void))__pyx_f_4cuda_5ccuda_cuStreamGetFlags, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, unsigned int *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuStreamGetCtx", (void (*)(void))__pyx_f_4cuda_5ccuda_cuStreamGetCtx, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUcontext *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuStreamWaitEvent", (void (*)(void))__pyx_f_4cuda_5ccuda_cuStreamWaitEvent, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUevent, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuStreamAddCallback", (void (*)(void))__pyx_f_4cuda_5ccuda_cuStreamAddCallback, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUstreamCallback, void *, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuStreamBeginCapture", (void (*)(void))__pyx_f_4cuda_5ccuda_cuStreamBeginCapture, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUstreamCaptureMode)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuThreadExchangeStreamCaptureMode", (void (*)(void))__pyx_f_4cuda_5ccuda_cuThreadExchangeStreamCaptureMode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstreamCaptureMode *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuStreamEndCapture", (void (*)(void))__pyx_f_4cuda_5ccuda_cuStreamEndCapture, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUgraph *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuStreamIsCapturing", (void (*)(void))__pyx_f_4cuda_5ccuda_cuStreamIsCapturing, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUstreamCaptureStatus *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuStreamGetCaptureInfo", (void (*)(void))__pyx_f_4cuda_5ccuda_cuStreamGetCaptureInfo, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUstreamCaptureStatus *, __pyx_t_4cuda_5ccuda_cuuint64_t *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuStreamGetCaptureInfo_v2", (void (*)(void))__pyx_f_4cuda_5ccuda_cuStreamGetCaptureInfo_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUstreamCaptureStatus *, __pyx_t_4cuda_5ccuda_cuuint64_t *, __pyx_t_4cuda_5ccuda_CUgraph *, __pyx_t_4cuda_5ccuda_CUgraphNode const **, size_t *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuStreamUpdateCaptureDependencies", (void (*)(void))__pyx_f_4cuda_5ccuda_cuStreamUpdateCaptureDependencies, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUgraphNode *, size_t, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuStreamAttachMemAsync", (void (*)(void))__pyx_f_4cuda_5ccuda_cuStreamAttachMemAsync, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuStreamQuery", (void (*)(void))__pyx_f_4cuda_5ccuda_cuStreamQuery, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuStreamSynchronize", (void (*)(void))__pyx_f_4cuda_5ccuda_cuStreamSynchronize, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuStreamDestroy", (void (*)(void))__pyx_f_4cuda_5ccuda_cuStreamDestroy, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuStreamCopyAttributes", (void (*)(void))__pyx_f_4cuda_5ccuda_cuStreamCopyAttributes, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuStreamGetAttribute", (void (*)(void))__pyx_f_4cuda_5ccuda_cuStreamGetAttribute, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUstreamAttrID, __pyx_t_4cuda_5ccuda_CUstreamAttrValue *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuStreamSetAttribute", (void (*)(void))__pyx_f_4cuda_5ccuda_cuStreamSetAttribute, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUstreamAttrID, __pyx_t_4cuda_5ccuda_CUstreamAttrValue const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuEventCreate", (void (*)(void))__pyx_f_4cuda_5ccuda_cuEventCreate, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUevent *, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuEventRecord", (void (*)(void))__pyx_f_4cuda_5ccuda_cuEventRecord, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUevent, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuEventRecordWithFlags", (void (*)(void))__pyx_f_4cuda_5ccuda_cuEventRecordWithFlags, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUevent, __pyx_t_4cuda_5ccuda_CUstream, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuEventQuery", (void (*)(void))__pyx_f_4cuda_5ccuda_cuEventQuery, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUevent)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuEventSynchronize", (void (*)(void))__pyx_f_4cuda_5ccuda_cuEventSynchronize, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUevent)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuEventDestroy", (void (*)(void))__pyx_f_4cuda_5ccuda_cuEventDestroy, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUevent)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuEventElapsedTime", (void (*)(void))__pyx_f_4cuda_5ccuda_cuEventElapsedTime, "__pyx_t_4cuda_5ccuda_CUresult (float *, __pyx_t_4cuda_5ccuda_CUevent, __pyx_t_4cuda_5ccuda_CUevent)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuImportExternalMemory", (void (*)(void))__pyx_f_4cuda_5ccuda_cuImportExternalMemory, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUexternalMemory *, __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_HANDLE_DESC const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuExternalMemoryGetMappedBuffer", (void (*)(void))__pyx_f_4cuda_5ccuda_cuExternalMemoryGetMappedBuffer, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr *, __pyx_t_4cuda_5ccuda_CUexternalMemory, __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_BUFFER_DESC const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuExternalMemoryGetMappedMipmappedArray", (void (*)(void))__pyx_f_4cuda_5ccuda_cuExternalMemoryGetMappedMipmappedArray, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmipmappedArray *, __pyx_t_4cuda_5ccuda_CUexternalMemory, __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDestroyExternalMemory", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDestroyExternalMemory, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUexternalMemory)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuImportExternalSemaphore", (void (*)(void))__pyx_f_4cuda_5ccuda_cuImportExternalSemaphore, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUexternalSemaphore *, __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuSignalExternalSemaphoresAsync", (void (*)(void))__pyx_f_4cuda_5ccuda_cuSignalExternalSemaphoresAsync, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUexternalSemaphore const *, __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS const *, unsigned int, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuWaitExternalSemaphoresAsync", (void (*)(void))__pyx_f_4cuda_5ccuda_cuWaitExternalSemaphoresAsync, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUexternalSemaphore const *, __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS const *, unsigned int, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDestroyExternalSemaphore", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDestroyExternalSemaphore, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUexternalSemaphore)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuStreamWaitValue32", (void (*)(void))__pyx_f_4cuda_5ccuda_cuStreamWaitValue32, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_cuuint32_t, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuStreamWaitValue64", (void (*)(void))__pyx_f_4cuda_5ccuda_cuStreamWaitValue64, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_cuuint64_t, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuStreamWriteValue32", (void (*)(void))__pyx_f_4cuda_5ccuda_cuStreamWriteValue32, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_cuuint32_t, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuStreamWriteValue64", (void (*)(void))__pyx_f_4cuda_5ccuda_cuStreamWriteValue64, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_cuuint64_t, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuStreamBatchMemOp", (void (*)(void))__pyx_f_4cuda_5ccuda_cuStreamBatchMemOp, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, unsigned int, __pyx_t_4cuda_5ccuda_CUstreamBatchMemOpParams *, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuFuncGetAttribute", (void (*)(void))__pyx_f_4cuda_5ccuda_cuFuncGetAttribute, "__pyx_t_4cuda_5ccuda_CUresult (int *, __pyx_t_4cuda_5ccuda_CUfunction_attribute, __pyx_t_4cuda_5ccuda_CUfunction)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuFuncSetAttribute", (void (*)(void))__pyx_f_4cuda_5ccuda_cuFuncSetAttribute, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction, __pyx_t_4cuda_5ccuda_CUfunction_attribute, int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuFuncSetCacheConfig", (void (*)(void))__pyx_f_4cuda_5ccuda_cuFuncSetCacheConfig, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction, __pyx_t_4cuda_5ccuda_CUfunc_cache)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuFuncSetSharedMemConfig", (void (*)(void))__pyx_f_4cuda_5ccuda_cuFuncSetSharedMemConfig, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction, __pyx_t_4cuda_5ccuda_CUsharedconfig)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuFuncGetModule", (void (*)(void))__pyx_f_4cuda_5ccuda_cuFuncGetModule, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmodule *, __pyx_t_4cuda_5ccuda_CUfunction)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuLaunchKernel", (void (*)(void))__pyx_f_4cuda_5ccuda_cuLaunchKernel, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, __pyx_t_4cuda_5ccuda_CUstream, void **, void **)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuLaunchCooperativeKernel", (void (*)(void))__pyx_f_4cuda_5ccuda_cuLaunchCooperativeKernel, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, __pyx_t_4cuda_5ccuda_CUstream, void **)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuLaunchCooperativeKernelMultiDevice", (void (*)(void))__pyx_f_4cuda_5ccuda_cuLaunchCooperativeKernelMultiDevice, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_LAUNCH_PARAMS *, unsigned int, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuLaunchHostFunc", (void (*)(void))__pyx_f_4cuda_5ccuda_cuLaunchHostFunc, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUhostFn, void *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuFuncSetBlockShape", (void (*)(void))__pyx_f_4cuda_5ccuda_cuFuncSetBlockShape, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction, int, int, int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuFuncSetSharedSize", (void (*)(void))__pyx_f_4cuda_5ccuda_cuFuncSetSharedSize, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuParamSetSize", (void (*)(void))__pyx_f_4cuda_5ccuda_cuParamSetSize, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuParamSeti", (void (*)(void))__pyx_f_4cuda_5ccuda_cuParamSeti, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction, int, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuParamSetf", (void (*)(void))__pyx_f_4cuda_5ccuda_cuParamSetf, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction, int, float)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuParamSetv", (void (*)(void))__pyx_f_4cuda_5ccuda_cuParamSetv, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction, int, void *, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuLaunch", (void (*)(void))__pyx_f_4cuda_5ccuda_cuLaunch, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuLaunchGrid", (void (*)(void))__pyx_f_4cuda_5ccuda_cuLaunchGrid, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction, int, int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuLaunchGridAsync", (void (*)(void))__pyx_f_4cuda_5ccuda_cuLaunchGridAsync, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction, int, int, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuParamSetTexRef", (void (*)(void))__pyx_f_4cuda_5ccuda_cuParamSetTexRef, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction, int, __pyx_t_4cuda_5ccuda_CUtexref)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphCreate", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphCreate, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraph *, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphAddKernelNode", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphAddKernelNode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUDA_KERNEL_NODE_PARAMS const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphKernelNodeGetParams", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphKernelNodeGetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_KERNEL_NODE_PARAMS *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphKernelNodeSetParams", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphKernelNodeSetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_KERNEL_NODE_PARAMS const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphAddMemcpyNode", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphAddMemcpyNode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D const *, __pyx_t_4cuda_5ccuda_CUcontext)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphMemcpyNodeGetParams", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphMemcpyNodeGetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphMemcpyNodeSetParams", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphMemcpyNodeSetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphAddMemsetNode", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphAddMemsetNode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUDA_MEMSET_NODE_PARAMS const *, __pyx_t_4cuda_5ccuda_CUcontext)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphMemsetNodeGetParams", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphMemsetNodeGetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_MEMSET_NODE_PARAMS *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphMemsetNodeSetParams", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphMemsetNodeSetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_MEMSET_NODE_PARAMS const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphAddHostNode", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphAddHostNode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUDA_HOST_NODE_PARAMS const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphHostNodeGetParams", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphHostNodeGetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_HOST_NODE_PARAMS *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphHostNodeSetParams", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphHostNodeSetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_HOST_NODE_PARAMS const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphAddChildGraphNode", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphAddChildGraphNode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUgraph)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphChildGraphNodeGetGraph", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphChildGraphNodeGetGraph, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUgraph *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphAddEmptyNode", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphAddEmptyNode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphAddEventRecordNode", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphAddEventRecordNode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUevent)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphEventRecordNodeGetEvent", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphEventRecordNodeGetEvent, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUevent *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphEventRecordNodeSetEvent", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphEventRecordNodeSetEvent, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUevent)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphAddEventWaitNode", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphAddEventWaitNode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUevent)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphEventWaitNodeGetEvent", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphEventWaitNodeGetEvent, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUevent *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphEventWaitNodeSetEvent", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphEventWaitNodeSetEvent, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUevent)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphAddExternalSemaphoresSignalNode", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphAddExternalSemaphoresSignalNode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_SIGNAL_NODE_PARAMS const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphExternalSemaphoresSignalNodeGetParams", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphExternalSemaphoresSignalNodeGetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_SIGNAL_NODE_PARAMS *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphExternalSemaphoresSignalNodeSetParams", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphExternalSemaphoresSignalNodeSetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_SIGNAL_NODE_PARAMS const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphAddExternalSemaphoresWaitNode", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphAddExternalSemaphoresWaitNode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_WAIT_NODE_PARAMS const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphExternalSemaphoresWaitNodeGetParams", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphExternalSemaphoresWaitNodeGetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_WAIT_NODE_PARAMS *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphExternalSemaphoresWaitNodeSetParams", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphExternalSemaphoresWaitNodeSetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_WAIT_NODE_PARAMS const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphAddMemAllocNode", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphAddMemAllocNode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUDA_MEM_ALLOC_NODE_PARAMS *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphMemAllocNodeGetParams", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphMemAllocNodeGetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_MEM_ALLOC_NODE_PARAMS *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphAddMemFreeNode", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphAddMemFreeNode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUdeviceptr)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphMemFreeNodeGetParams", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphMemFreeNodeGetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUdeviceptr *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDeviceGraphMemTrim", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDeviceGraphMemTrim, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDeviceGetGraphMemAttribute", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDeviceGetGraphMemAttribute, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdevice, __pyx_t_4cuda_5ccuda_CUgraphMem_attribute, void *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDeviceSetGraphMemAttribute", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDeviceSetGraphMemAttribute, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdevice, __pyx_t_4cuda_5ccuda_CUgraphMem_attribute, void *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphClone", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphClone, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraph *, __pyx_t_4cuda_5ccuda_CUgraph)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphNodeFindInClone", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphNodeFindInClone, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUgraph)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphNodeGetType", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphNodeGetType, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUgraphNodeType *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphGetNodes", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphGetNodes, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode *, size_t *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphGetRootNodes", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphGetRootNodes, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode *, size_t *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphGetEdges", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphGetEdges, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraphNode *, size_t *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphNodeGetDependencies", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphNodeGetDependencies, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUgraphNode *, size_t *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphNodeGetDependentNodes", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphNodeGetDependentNodes, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUgraphNode *, size_t *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphAddDependencies", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphAddDependencies, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphRemoveDependencies", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphRemoveDependencies, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphDestroyNode", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphDestroyNode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphInstantiate", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphInstantiate, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphExec *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode *, char *, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphInstantiateWithFlags", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphInstantiateWithFlags, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphExec *, __pyx_t_4cuda_5ccuda_CUgraph, unsigned PY_LONG_LONG)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphExecKernelNodeSetParams", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphExecKernelNodeSetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_KERNEL_NODE_PARAMS const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphExecMemcpyNodeSetParams", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphExecMemcpyNodeSetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D const *, __pyx_t_4cuda_5ccuda_CUcontext)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphExecMemsetNodeSetParams", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphExecMemsetNodeSetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_MEMSET_NODE_PARAMS const *, __pyx_t_4cuda_5ccuda_CUcontext)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphExecHostNodeSetParams", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphExecHostNodeSetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_HOST_NODE_PARAMS const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphExecChildGraphNodeSetParams", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphExecChildGraphNodeSetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUgraph)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphExecEventRecordNodeSetEvent", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphExecEventRecordNodeSetEvent, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUevent)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphExecEventWaitNodeSetEvent", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphExecEventWaitNodeSetEvent, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUevent)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphExecExternalSemaphoresSignalNodeSetParams", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphExecExternalSemaphoresSignalNodeSetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_SIGNAL_NODE_PARAMS const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphExecExternalSemaphoresWaitNodeSetParams", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphExecExternalSemaphoresWaitNodeSetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_WAIT_NODE_PARAMS const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphUpload", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphUpload, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphLaunch", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphLaunch, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphExecDestroy", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphExecDestroy, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphExec)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphDestroy", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphDestroy, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraph)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphExecUpdate", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphExecUpdate, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraphExecUpdateResult *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphKernelNodeCopyAttributes", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphKernelNodeCopyAttributes, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUgraphNode)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphKernelNodeGetAttribute", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphKernelNodeGetAttribute, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUkernelNodeAttrID, __pyx_t_4cuda_5ccuda_CUkernelNodeAttrValue *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphKernelNodeSetAttribute", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphKernelNodeSetAttribute, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUkernelNodeAttrID, __pyx_t_4cuda_5ccuda_CUkernelNodeAttrValue const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphDebugDotPrint", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphDebugDotPrint, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraph, char const *, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuUserObjectCreate", (void (*)(void))__pyx_f_4cuda_5ccuda_cuUserObjectCreate, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUuserObject *, void *, __pyx_t_4cuda_5ccuda_CUhostFn, unsigned int, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuUserObjectRetain", (void (*)(void))__pyx_f_4cuda_5ccuda_cuUserObjectRetain, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUuserObject, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuUserObjectRelease", (void (*)(void))__pyx_f_4cuda_5ccuda_cuUserObjectRelease, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUuserObject, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphRetainUserObject", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphRetainUserObject, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUuserObject, unsigned int, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphReleaseUserObject", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphReleaseUserObject, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUuserObject, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuOccupancyMaxActiveBlocksPerMultiprocessor", (void (*)(void))__pyx_f_4cuda_5ccuda_cuOccupancyMaxActiveBlocksPerMultiprocessor, "__pyx_t_4cuda_5ccuda_CUresult (int *, __pyx_t_4cuda_5ccuda_CUfunction, int, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags", (void (*)(void))__pyx_f_4cuda_5ccuda_cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags, "__pyx_t_4cuda_5ccuda_CUresult (int *, __pyx_t_4cuda_5ccuda_CUfunction, int, size_t, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuOccupancyMaxPotentialBlockSize", (void (*)(void))__pyx_f_4cuda_5ccuda_cuOccupancyMaxPotentialBlockSize, "__pyx_t_4cuda_5ccuda_CUresult (int *, int *, __pyx_t_4cuda_5ccuda_CUfunction, __pyx_t_4cuda_5ccuda_CUoccupancyB2DSize, size_t, int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuOccupancyMaxPotentialBlockSizeWithFlags", (void (*)(void))__pyx_f_4cuda_5ccuda_cuOccupancyMaxPotentialBlockSizeWithFlags, "__pyx_t_4cuda_5ccuda_CUresult (int *, int *, __pyx_t_4cuda_5ccuda_CUfunction, __pyx_t_4cuda_5ccuda_CUoccupancyB2DSize, size_t, int, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuOccupancyAvailableDynamicSMemPerBlock", (void (*)(void))__pyx_f_4cuda_5ccuda_cuOccupancyAvailableDynamicSMemPerBlock, "__pyx_t_4cuda_5ccuda_CUresult (size_t *, __pyx_t_4cuda_5ccuda_CUfunction, int, int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexRefSetArray", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexRefSetArray, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexref, __pyx_t_4cuda_5ccuda_CUarray, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexRefSetMipmappedArray", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexRefSetMipmappedArray, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexref, __pyx_t_4cuda_5ccuda_CUmipmappedArray, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexRefSetAddress", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexRefSetAddress, "__pyx_t_4cuda_5ccuda_CUresult (size_t *, __pyx_t_4cuda_5ccuda_CUtexref, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexRefSetAddress2D", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexRefSetAddress2D, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexref, __pyx_t_4cuda_5ccuda_CUDA_ARRAY_DESCRIPTOR const *, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexRefSetFormat", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexRefSetFormat, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexref, __pyx_t_4cuda_5ccuda_CUarray_format, int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexRefSetAddressMode", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexRefSetAddressMode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexref, int, __pyx_t_4cuda_5ccuda_CUaddress_mode)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexRefSetFilterMode", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexRefSetFilterMode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexref, __pyx_t_4cuda_5ccuda_CUfilter_mode)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexRefSetMipmapFilterMode", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexRefSetMipmapFilterMode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexref, __pyx_t_4cuda_5ccuda_CUfilter_mode)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexRefSetMipmapLevelBias", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexRefSetMipmapLevelBias, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexref, float)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexRefSetMipmapLevelClamp", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexRefSetMipmapLevelClamp, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexref, float, float)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexRefSetMaxAnisotropy", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexRefSetMaxAnisotropy, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexref, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexRefSetBorderColor", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexRefSetBorderColor, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexref, float *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexRefSetFlags", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexRefSetFlags, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexref, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexRefGetAddress", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexRefGetAddress, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr *, __pyx_t_4cuda_5ccuda_CUtexref)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexRefGetArray", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexRefGetArray, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUarray *, __pyx_t_4cuda_5ccuda_CUtexref)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexRefGetMipmappedArray", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexRefGetMipmappedArray, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmipmappedArray *, __pyx_t_4cuda_5ccuda_CUtexref)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexRefGetAddressMode", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexRefGetAddressMode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUaddress_mode *, __pyx_t_4cuda_5ccuda_CUtexref, int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexRefGetFilterMode", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexRefGetFilterMode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfilter_mode *, __pyx_t_4cuda_5ccuda_CUtexref)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexRefGetFormat", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexRefGetFormat, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUarray_format *, int *, __pyx_t_4cuda_5ccuda_CUtexref)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexRefGetMipmapFilterMode", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexRefGetMipmapFilterMode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfilter_mode *, __pyx_t_4cuda_5ccuda_CUtexref)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexRefGetMipmapLevelBias", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexRefGetMipmapLevelBias, "__pyx_t_4cuda_5ccuda_CUresult (float *, __pyx_t_4cuda_5ccuda_CUtexref)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexRefGetMipmapLevelClamp", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexRefGetMipmapLevelClamp, "__pyx_t_4cuda_5ccuda_CUresult (float *, float *, __pyx_t_4cuda_5ccuda_CUtexref)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexRefGetMaxAnisotropy", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexRefGetMaxAnisotropy, "__pyx_t_4cuda_5ccuda_CUresult (int *, __pyx_t_4cuda_5ccuda_CUtexref)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexRefGetBorderColor", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexRefGetBorderColor, "__pyx_t_4cuda_5ccuda_CUresult (float *, __pyx_t_4cuda_5ccuda_CUtexref)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexRefGetFlags", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexRefGetFlags, "__pyx_t_4cuda_5ccuda_CUresult (unsigned int *, __pyx_t_4cuda_5ccuda_CUtexref)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexRefCreate", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexRefCreate, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexref *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexRefDestroy", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexRefDestroy, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexref)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuSurfRefSetArray", (void (*)(void))__pyx_f_4cuda_5ccuda_cuSurfRefSetArray, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUsurfref, __pyx_t_4cuda_5ccuda_CUarray, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuSurfRefGetArray", (void (*)(void))__pyx_f_4cuda_5ccuda_cuSurfRefGetArray, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUarray *, __pyx_t_4cuda_5ccuda_CUsurfref)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexObjectCreate", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexObjectCreate, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexObject *, __pyx_t_4cuda_5ccuda_CUDA_RESOURCE_DESC const *, __pyx_t_4cuda_5ccuda_CUDA_TEXTURE_DESC const *, __pyx_t_4cuda_5ccuda_CUDA_RESOURCE_VIEW_DESC const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexObjectDestroy", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexObjectDestroy, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexObject)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexObjectGetResourceDesc", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexObjectGetResourceDesc, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_RESOURCE_DESC *, __pyx_t_4cuda_5ccuda_CUtexObject)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexObjectGetTextureDesc", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexObjectGetTextureDesc, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_TEXTURE_DESC *, __pyx_t_4cuda_5ccuda_CUtexObject)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuTexObjectGetResourceViewDesc", (void (*)(void))__pyx_f_4cuda_5ccuda_cuTexObjectGetResourceViewDesc, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_RESOURCE_VIEW_DESC *, __pyx_t_4cuda_5ccuda_CUtexObject)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuSurfObjectCreate", (void (*)(void))__pyx_f_4cuda_5ccuda_cuSurfObjectCreate, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUsurfObject *, __pyx_t_4cuda_5ccuda_CUDA_RESOURCE_DESC const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuSurfObjectDestroy", (void (*)(void))__pyx_f_4cuda_5ccuda_cuSurfObjectDestroy, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUsurfObject)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuSurfObjectGetResourceDesc", (void (*)(void))__pyx_f_4cuda_5ccuda_cuSurfObjectGetResourceDesc, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_RESOURCE_DESC *, __pyx_t_4cuda_5ccuda_CUsurfObject)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDeviceCanAccessPeer", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDeviceCanAccessPeer, "__pyx_t_4cuda_5ccuda_CUresult (int *, __pyx_t_4cuda_5ccuda_CUdevice, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuCtxEnablePeerAccess", (void (*)(void))__pyx_f_4cuda_5ccuda_cuCtxEnablePeerAccess, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUcontext, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuCtxDisablePeerAccess", (void (*)(void))__pyx_f_4cuda_5ccuda_cuCtxDisablePeerAccess, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUcontext)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuDeviceGetP2PAttribute", (void (*)(void))__pyx_f_4cuda_5ccuda_cuDeviceGetP2PAttribute, "__pyx_t_4cuda_5ccuda_CUresult (int *, __pyx_t_4cuda_5ccuda_CUdevice_P2PAttribute, __pyx_t_4cuda_5ccuda_CUdevice, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphicsUnregisterResource", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphicsUnregisterResource, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphicsResource)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphicsSubResourceGetMappedArray", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphicsSubResourceGetMappedArray, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUarray *, __pyx_t_4cuda_5ccuda_CUgraphicsResource, unsigned int, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphicsResourceGetMappedMipmappedArray", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphicsResourceGetMappedMipmappedArray, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmipmappedArray *, __pyx_t_4cuda_5ccuda_CUgraphicsResource)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphicsResourceGetMappedPointer", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphicsResourceGetMappedPointer, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr *, size_t *, __pyx_t_4cuda_5ccuda_CUgraphicsResource)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphicsResourceSetMapFlags", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphicsResourceSetMapFlags, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphicsResource, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphicsMapResources", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphicsMapResources, "__pyx_t_4cuda_5ccuda_CUresult (unsigned int, __pyx_t_4cuda_5ccuda_CUgraphicsResource *, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGraphicsUnmapResources", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGraphicsUnmapResources, "__pyx_t_4cuda_5ccuda_CUresult (unsigned int, __pyx_t_4cuda_5ccuda_CUgraphicsResource *, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGetProcAddress", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGetProcAddress, "__pyx_t_4cuda_5ccuda_CUresult (char const *, void **, int, __pyx_t_4cuda_5ccuda_cuuint64_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("cuGetExportTable", (void (*)(void))__pyx_f_4cuda_5ccuda_cuGetExportTable, "__pyx_t_4cuda_5ccuda_CUresult (void const **, __pyx_t_4cuda_5ccuda_CUuuid const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __pyx_t_1 = PyImport_ImportModule("cuda._cuda.ccuda"); if (!__pyx_t_1) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGetErrorString", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGetErrorString, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUresult, char const **)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGetErrorName", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGetErrorName, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUresult, char const **)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuInit", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuInit, "__pyx_t_4cuda_5ccuda_CUresult (unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDriverGetVersion", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDriverGetVersion, "__pyx_t_4cuda_5ccuda_CUresult (int *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDeviceGet", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGet, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdevice *, int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDeviceGetCount", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetCount, "__pyx_t_4cuda_5ccuda_CUresult (int *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDeviceGetName", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetName, "__pyx_t_4cuda_5ccuda_CUresult (char *, int, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDeviceGetUuid", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetUuid, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUuuid *, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDeviceGetUuid_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetUuid_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUuuid *, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDeviceGetLuid", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetLuid, "__pyx_t_4cuda_5ccuda_CUresult (char *, unsigned int *, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDeviceTotalMem_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceTotalMem_v2, "__pyx_t_4cuda_5ccuda_CUresult (size_t *, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDeviceGetTexture1DLinearMaxWidth", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetTexture1DLinearMaxWidth, "__pyx_t_4cuda_5ccuda_CUresult (size_t *, __pyx_t_4cuda_5ccuda_CUarray_format, unsigned int, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDeviceGetAttribute", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetAttribute, "__pyx_t_4cuda_5ccuda_CUresult (int *, __pyx_t_4cuda_5ccuda_CUdevice_attribute, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDeviceGetNvSciSyncAttributes", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetNvSciSyncAttributes, "__pyx_t_4cuda_5ccuda_CUresult (void *, __pyx_t_4cuda_5ccuda_CUdevice, int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDeviceSetMemPool", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceSetMemPool, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdevice, __pyx_t_4cuda_5ccuda_CUmemoryPool)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDeviceGetMemPool", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetMemPool, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemoryPool *, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDeviceGetDefaultMemPool", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetDefaultMemPool, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemoryPool *, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuFlushGPUDirectRDMAWrites", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuFlushGPUDirectRDMAWrites, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUflushGPUDirectRDMAWritesTarget, __pyx_t_4cuda_5ccuda_CUflushGPUDirectRDMAWritesScope)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDeviceGetProperties", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetProperties, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdevprop *, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDeviceComputeCapability", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceComputeCapability, "__pyx_t_4cuda_5ccuda_CUresult (int *, int *, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDevicePrimaryCtxRetain", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDevicePrimaryCtxRetain, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUcontext *, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDevicePrimaryCtxRelease_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDevicePrimaryCtxRelease_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDevicePrimaryCtxSetFlags_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDevicePrimaryCtxSetFlags_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdevice, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDevicePrimaryCtxGetState", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDevicePrimaryCtxGetState, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdevice, unsigned int *, int *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDevicePrimaryCtxReset_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDevicePrimaryCtxReset_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDeviceGetExecAffinitySupport", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetExecAffinitySupport, "__pyx_t_4cuda_5ccuda_CUresult (int *, __pyx_t_4cuda_5ccuda_CUexecAffinityType, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuCtxCreate_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuCtxCreate_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUcontext *, unsigned int, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuCtxCreate_v3", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuCtxCreate_v3, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUcontext *, __pyx_t_4cuda_5ccuda_CUexecAffinityParam *, int, unsigned int, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuCtxDestroy_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuCtxDestroy_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUcontext)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuCtxPushCurrent_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuCtxPushCurrent_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUcontext)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuCtxPopCurrent_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuCtxPopCurrent_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUcontext *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuCtxSetCurrent", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuCtxSetCurrent, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUcontext)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuCtxGetCurrent", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuCtxGetCurrent, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUcontext *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuCtxGetDevice", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuCtxGetDevice, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdevice *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuCtxGetFlags", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuCtxGetFlags, "__pyx_t_4cuda_5ccuda_CUresult (unsigned int *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuCtxSynchronize", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuCtxSynchronize, "__pyx_t_4cuda_5ccuda_CUresult (void)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuCtxSetLimit", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuCtxSetLimit, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUlimit, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuCtxGetLimit", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuCtxGetLimit, "__pyx_t_4cuda_5ccuda_CUresult (size_t *, __pyx_t_4cuda_5ccuda_CUlimit)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuCtxGetCacheConfig", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuCtxGetCacheConfig, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunc_cache *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuCtxSetCacheConfig", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuCtxSetCacheConfig, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunc_cache)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuCtxGetSharedMemConfig", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuCtxGetSharedMemConfig, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUsharedconfig *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuCtxSetSharedMemConfig", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuCtxSetSharedMemConfig, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUsharedconfig)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuCtxGetApiVersion", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuCtxGetApiVersion, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUcontext, unsigned int *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuCtxGetStreamPriorityRange", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuCtxGetStreamPriorityRange, "__pyx_t_4cuda_5ccuda_CUresult (int *, int *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuCtxResetPersistingL2Cache", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuCtxResetPersistingL2Cache, "__pyx_t_4cuda_5ccuda_CUresult (void)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuCtxGetExecAffinity", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuCtxGetExecAffinity, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUexecAffinityParam *, __pyx_t_4cuda_5ccuda_CUexecAffinityType)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuCtxAttach", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuCtxAttach, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUcontext *, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuCtxDetach", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuCtxDetach, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUcontext)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuModuleLoad", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuModuleLoad, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmodule *, char const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuModuleLoadData", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuModuleLoadData, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmodule *, void const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuModuleLoadDataEx", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuModuleLoadDataEx, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmodule *, void const *, unsigned int, __pyx_t_4cuda_5ccuda_CUjit_option *, void **)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuModuleLoadFatBinary", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuModuleLoadFatBinary, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmodule *, void const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuModuleUnload", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuModuleUnload, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmodule)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuModuleGetFunction", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuModuleGetFunction, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction *, __pyx_t_4cuda_5ccuda_CUmodule, char const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuModuleGetGlobal_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuModuleGetGlobal_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr *, size_t *, __pyx_t_4cuda_5ccuda_CUmodule, char const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuModuleGetTexRef", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuModuleGetTexRef, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexref *, __pyx_t_4cuda_5ccuda_CUmodule, char const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuModuleGetSurfRef", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuModuleGetSurfRef, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUsurfref *, __pyx_t_4cuda_5ccuda_CUmodule, char const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuLinkCreate_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuLinkCreate_v2, "__pyx_t_4cuda_5ccuda_CUresult (unsigned int, __pyx_t_4cuda_5ccuda_CUjit_option *, void **, __pyx_t_4cuda_5ccuda_CUlinkState *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuLinkAddData_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuLinkAddData_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUlinkState, __pyx_t_4cuda_5ccuda_CUjitInputType, void *, size_t, char const *, unsigned int, __pyx_t_4cuda_5ccuda_CUjit_option *, void **)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuLinkAddFile_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuLinkAddFile_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUlinkState, __pyx_t_4cuda_5ccuda_CUjitInputType, char const *, unsigned int, __pyx_t_4cuda_5ccuda_CUjit_option *, void **)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuLinkComplete", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuLinkComplete, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUlinkState, void **, size_t *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuLinkDestroy", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuLinkDestroy, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUlinkState)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemGetInfo_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemGetInfo_v2, "__pyx_t_4cuda_5ccuda_CUresult (size_t *, size_t *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemAlloc_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemAlloc_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr *, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemAllocPitch_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemAllocPitch_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr *, size_t *, size_t, size_t, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemFree_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemFree_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemGetAddressRange_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemGetAddressRange_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr *, size_t *, __pyx_t_4cuda_5ccuda_CUdeviceptr)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemAllocHost_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemAllocHost_v2, "__pyx_t_4cuda_5ccuda_CUresult (void **, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemFreeHost", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemFreeHost, "__pyx_t_4cuda_5ccuda_CUresult (void *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemHostAlloc", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemHostAlloc, "__pyx_t_4cuda_5ccuda_CUresult (void **, size_t, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemHostGetDevicePointer_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemHostGetDevicePointer_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr *, void *, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemHostGetFlags", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemHostGetFlags, "__pyx_t_4cuda_5ccuda_CUresult (unsigned int *, void *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemAllocManaged", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemAllocManaged, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr *, size_t, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDeviceGetByPCIBusId", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetByPCIBusId, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdevice *, char const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDeviceGetPCIBusId", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetPCIBusId, "__pyx_t_4cuda_5ccuda_CUresult (char *, int, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuIpcGetEventHandle", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuIpcGetEventHandle, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUipcEventHandle *, __pyx_t_4cuda_5ccuda_CUevent)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuIpcOpenEventHandle", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuIpcOpenEventHandle, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUevent *, __pyx_t_4cuda_5ccuda_CUipcEventHandle)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuIpcGetMemHandle", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuIpcGetMemHandle, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUipcMemHandle *, __pyx_t_4cuda_5ccuda_CUdeviceptr)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuIpcOpenMemHandle_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuIpcOpenMemHandle_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr *, __pyx_t_4cuda_5ccuda_CUipcMemHandle, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuIpcCloseMemHandle", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuIpcCloseMemHandle, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemHostRegister_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemHostRegister_v2, "__pyx_t_4cuda_5ccuda_CUresult (void *, size_t, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemHostUnregister", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemHostUnregister, "__pyx_t_4cuda_5ccuda_CUresult (void *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemcpy", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpy, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemcpyPeer", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyPeer, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_CUcontext, __pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_CUcontext, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemcpyHtoD_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyHtoD_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, void const *, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemcpyDtoH_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyDtoH_v2, "__pyx_t_4cuda_5ccuda_CUresult (void *, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemcpyDtoD_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyDtoD_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemcpyDtoA_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyDtoA_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUarray, size_t, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemcpyAtoD_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyAtoD_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_CUarray, size_t, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemcpyHtoA_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyHtoA_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUarray, size_t, void const *, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemcpyAtoH_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyAtoH_v2, "__pyx_t_4cuda_5ccuda_CUresult (void *, __pyx_t_4cuda_5ccuda_CUarray, size_t, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemcpyAtoA_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyAtoA_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUarray, size_t, __pyx_t_4cuda_5ccuda_CUarray, size_t, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemcpy2D_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpy2D_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_MEMCPY2D const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemcpy2DUnaligned_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpy2DUnaligned_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_MEMCPY2D const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemcpy3D_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpy3D_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemcpy3DPeer", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpy3DPeer, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D_PEER const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemcpyAsync", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyAsync, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemcpyPeerAsync", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyPeerAsync, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_CUcontext, __pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_CUcontext, size_t, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemcpyHtoDAsync_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyHtoDAsync_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, void const *, size_t, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemcpyDtoHAsync_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyDtoHAsync_v2, "__pyx_t_4cuda_5ccuda_CUresult (void *, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemcpyDtoDAsync_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyDtoDAsync_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemcpyHtoAAsync_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyHtoAAsync_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUarray, size_t, void const *, size_t, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemcpyAtoHAsync_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpyAtoHAsync_v2, "__pyx_t_4cuda_5ccuda_CUresult (void *, __pyx_t_4cuda_5ccuda_CUarray, size_t, size_t, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemcpy2DAsync_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpy2DAsync_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_MEMCPY2D const *, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemcpy3DAsync_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpy3DAsync_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D const *, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemcpy3DPeerAsync", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemcpy3DPeerAsync, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D_PEER const *, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemsetD8_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD8_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, unsigned char, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemsetD16_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD16_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, unsigned short, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemsetD32_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD32_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, unsigned int, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemsetD2D8_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD2D8_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, unsigned char, size_t, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemsetD2D16_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD2D16_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, unsigned short, size_t, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemsetD2D32_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD2D32_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, unsigned int, size_t, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemsetD8Async", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD8Async, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, unsigned char, size_t, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemsetD16Async", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD16Async, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, unsigned short, size_t, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemsetD32Async", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD32Async, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, unsigned int, size_t, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemsetD2D8Async", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD2D8Async, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, unsigned char, size_t, size_t, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemsetD2D16Async", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD2D16Async, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, unsigned short, size_t, size_t, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemsetD2D32Async", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemsetD2D32Async, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, unsigned int, size_t, size_t, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuArrayCreate_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuArrayCreate_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUarray *, __pyx_t_4cuda_5ccuda_CUDA_ARRAY_DESCRIPTOR const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuArrayGetDescriptor_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuArrayGetDescriptor_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_ARRAY_DESCRIPTOR *, __pyx_t_4cuda_5ccuda_CUarray)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuArrayGetSparseProperties", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuArrayGetSparseProperties, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_ARRAY_SPARSE_PROPERTIES *, __pyx_t_4cuda_5ccuda_CUarray)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMipmappedArrayGetSparseProperties", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMipmappedArrayGetSparseProperties, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_ARRAY_SPARSE_PROPERTIES *, __pyx_t_4cuda_5ccuda_CUmipmappedArray)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuArrayGetPlane", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuArrayGetPlane, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUarray *, __pyx_t_4cuda_5ccuda_CUarray, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuArrayDestroy", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuArrayDestroy, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUarray)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuArray3DCreate_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuArray3DCreate_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUarray *, __pyx_t_4cuda_5ccuda_CUDA_ARRAY3D_DESCRIPTOR const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuArray3DGetDescriptor_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuArray3DGetDescriptor_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_ARRAY3D_DESCRIPTOR *, __pyx_t_4cuda_5ccuda_CUarray)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMipmappedArrayCreate", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMipmappedArrayCreate, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmipmappedArray *, __pyx_t_4cuda_5ccuda_CUDA_ARRAY3D_DESCRIPTOR const *, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMipmappedArrayGetLevel", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMipmappedArrayGetLevel, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUarray *, __pyx_t_4cuda_5ccuda_CUmipmappedArray, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMipmappedArrayDestroy", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMipmappedArrayDestroy, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmipmappedArray)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemAddressReserve", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemAddressReserve, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr *, size_t, size_t, __pyx_t_4cuda_5ccuda_CUdeviceptr, unsigned PY_LONG_LONG)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemAddressFree", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemAddressFree, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemCreate", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemCreate, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle *, size_t, __pyx_t_4cuda_5ccuda_CUmemAllocationProp const *, unsigned PY_LONG_LONG)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemRelease", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemRelease, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemMap", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemMap, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, size_t, __pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle, unsigned PY_LONG_LONG)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemMapArrayAsync", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemMapArrayAsync, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUarrayMapInfo *, unsigned int, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemUnmap", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemUnmap, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemSetAccess", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemSetAccess, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, __pyx_t_4cuda_5ccuda_CUmemAccessDesc const *, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemGetAccess", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemGetAccess, "__pyx_t_4cuda_5ccuda_CUresult (unsigned PY_LONG_LONG *, __pyx_t_4cuda_5ccuda_CUmemLocation const *, __pyx_t_4cuda_5ccuda_CUdeviceptr)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemExportToShareableHandle", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemExportToShareableHandle, "__pyx_t_4cuda_5ccuda_CUresult (void *, __pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle, __pyx_t_4cuda_5ccuda_CUmemAllocationHandleType, unsigned PY_LONG_LONG)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemImportFromShareableHandle", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemImportFromShareableHandle, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle *, void *, __pyx_t_4cuda_5ccuda_CUmemAllocationHandleType)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemGetAllocationGranularity", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemGetAllocationGranularity, "__pyx_t_4cuda_5ccuda_CUresult (size_t *, __pyx_t_4cuda_5ccuda_CUmemAllocationProp const *, __pyx_t_4cuda_5ccuda_CUmemAllocationGranularity_flags)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemGetAllocationPropertiesFromHandle", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemGetAllocationPropertiesFromHandle, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemAllocationProp *, __pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemRetainAllocationHandle", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemRetainAllocationHandle, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemGenericAllocationHandle *, void *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemFreeAsync", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemFreeAsync, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemAllocAsync", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemAllocAsync, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr *, size_t, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemPoolTrimTo", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolTrimTo, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemoryPool, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemPoolSetAttribute", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolSetAttribute, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemoryPool, __pyx_t_4cuda_5ccuda_CUmemPool_attribute, void *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemPoolGetAttribute", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolGetAttribute, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemoryPool, __pyx_t_4cuda_5ccuda_CUmemPool_attribute, void *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemPoolSetAccess", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolSetAccess, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemoryPool, __pyx_t_4cuda_5ccuda_CUmemAccessDesc const *, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemPoolGetAccess", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolGetAccess, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemAccess_flags *, __pyx_t_4cuda_5ccuda_CUmemoryPool, __pyx_t_4cuda_5ccuda_CUmemLocation *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemPoolCreate", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolCreate, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemoryPool *, __pyx_t_4cuda_5ccuda_CUmemPoolProps const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemPoolDestroy", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolDestroy, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemoryPool)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemAllocFromPoolAsync", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemAllocFromPoolAsync, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr *, size_t, __pyx_t_4cuda_5ccuda_CUmemoryPool, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemPoolExportToShareableHandle", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolExportToShareableHandle, "__pyx_t_4cuda_5ccuda_CUresult (void *, __pyx_t_4cuda_5ccuda_CUmemoryPool, __pyx_t_4cuda_5ccuda_CUmemAllocationHandleType, unsigned PY_LONG_LONG)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemPoolImportFromShareableHandle", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolImportFromShareableHandle, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemoryPool *, void *, __pyx_t_4cuda_5ccuda_CUmemAllocationHandleType, unsigned PY_LONG_LONG)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemPoolExportPointer", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolExportPointer, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmemPoolPtrExportData *, __pyx_t_4cuda_5ccuda_CUdeviceptr)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemPoolImportPointer", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemPoolImportPointer, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr *, __pyx_t_4cuda_5ccuda_CUmemoryPool, __pyx_t_4cuda_5ccuda_CUmemPoolPtrExportData *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuPointerGetAttribute", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuPointerGetAttribute, "__pyx_t_4cuda_5ccuda_CUresult (void *, __pyx_t_4cuda_5ccuda_CUpointer_attribute, __pyx_t_4cuda_5ccuda_CUdeviceptr)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemPrefetchAsync", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemPrefetchAsync, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, __pyx_t_4cuda_5ccuda_CUdevice, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemAdvise", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemAdvise, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, __pyx_t_4cuda_5ccuda_CUmem_advise, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemRangeGetAttribute", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemRangeGetAttribute, "__pyx_t_4cuda_5ccuda_CUresult (void *, size_t, __pyx_t_4cuda_5ccuda_CUmem_range_attribute, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuMemRangeGetAttributes", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuMemRangeGetAttributes, "__pyx_t_4cuda_5ccuda_CUresult (void **, size_t *, __pyx_t_4cuda_5ccuda_CUmem_range_attribute *, size_t, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuPointerSetAttribute", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuPointerSetAttribute, "__pyx_t_4cuda_5ccuda_CUresult (void const *, __pyx_t_4cuda_5ccuda_CUpointer_attribute, __pyx_t_4cuda_5ccuda_CUdeviceptr)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuPointerGetAttributes", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuPointerGetAttributes, "__pyx_t_4cuda_5ccuda_CUresult (unsigned int, __pyx_t_4cuda_5ccuda_CUpointer_attribute *, void **, __pyx_t_4cuda_5ccuda_CUdeviceptr)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuStreamCreate", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuStreamCreate, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream *, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuStreamCreateWithPriority", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuStreamCreateWithPriority, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream *, unsigned int, int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuStreamGetPriority", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuStreamGetPriority, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, int *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuStreamGetFlags", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuStreamGetFlags, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, unsigned int *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuStreamGetCtx", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuStreamGetCtx, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUcontext *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuStreamWaitEvent", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuStreamWaitEvent, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUevent, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuStreamAddCallback", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuStreamAddCallback, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUstreamCallback, void *, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuStreamBeginCapture_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuStreamBeginCapture_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUstreamCaptureMode)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuThreadExchangeStreamCaptureMode", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuThreadExchangeStreamCaptureMode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstreamCaptureMode *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuStreamEndCapture", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuStreamEndCapture, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUgraph *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuStreamIsCapturing", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuStreamIsCapturing, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUstreamCaptureStatus *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuStreamGetCaptureInfo", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuStreamGetCaptureInfo, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUstreamCaptureStatus *, __pyx_t_4cuda_5ccuda_cuuint64_t *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuStreamGetCaptureInfo_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuStreamGetCaptureInfo_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUstreamCaptureStatus *, __pyx_t_4cuda_5ccuda_cuuint64_t *, __pyx_t_4cuda_5ccuda_CUgraph *, __pyx_t_4cuda_5ccuda_CUgraphNode const **, size_t *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuStreamUpdateCaptureDependencies", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuStreamUpdateCaptureDependencies, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUgraphNode *, size_t, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuStreamAttachMemAsync", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuStreamAttachMemAsync, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuStreamQuery", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuStreamQuery, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuStreamSynchronize", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuStreamSynchronize, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuStreamDestroy_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuStreamDestroy_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuStreamCopyAttributes", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuStreamCopyAttributes, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuStreamGetAttribute", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuStreamGetAttribute, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUstreamAttrID, __pyx_t_4cuda_5ccuda_CUstreamAttrValue *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuStreamSetAttribute", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuStreamSetAttribute, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUstreamAttrID, __pyx_t_4cuda_5ccuda_CUstreamAttrValue const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuEventCreate", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuEventCreate, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUevent *, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuEventRecord", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuEventRecord, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUevent, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuEventRecordWithFlags", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuEventRecordWithFlags, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUevent, __pyx_t_4cuda_5ccuda_CUstream, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuEventQuery", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuEventQuery, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUevent)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuEventSynchronize", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuEventSynchronize, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUevent)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuEventDestroy_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuEventDestroy_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUevent)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuEventElapsedTime", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuEventElapsedTime, "__pyx_t_4cuda_5ccuda_CUresult (float *, __pyx_t_4cuda_5ccuda_CUevent, __pyx_t_4cuda_5ccuda_CUevent)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuImportExternalMemory", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuImportExternalMemory, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUexternalMemory *, __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_HANDLE_DESC const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuExternalMemoryGetMappedBuffer", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuExternalMemoryGetMappedBuffer, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr *, __pyx_t_4cuda_5ccuda_CUexternalMemory, __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_BUFFER_DESC const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuExternalMemoryGetMappedMipmappedArray", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuExternalMemoryGetMappedMipmappedArray, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmipmappedArray *, __pyx_t_4cuda_5ccuda_CUexternalMemory, __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDestroyExternalMemory", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDestroyExternalMemory, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUexternalMemory)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuImportExternalSemaphore", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuImportExternalSemaphore, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUexternalSemaphore *, __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuSignalExternalSemaphoresAsync", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuSignalExternalSemaphoresAsync, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUexternalSemaphore const *, __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS const *, unsigned int, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuWaitExternalSemaphoresAsync", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuWaitExternalSemaphoresAsync, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUexternalSemaphore const *, __pyx_t_4cuda_5ccuda_CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS const *, unsigned int, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDestroyExternalSemaphore", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDestroyExternalSemaphore, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUexternalSemaphore)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuStreamWaitValue32", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuStreamWaitValue32, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_cuuint32_t, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuStreamWaitValue64", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuStreamWaitValue64, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_cuuint64_t, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuStreamWriteValue32", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuStreamWriteValue32, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_cuuint32_t, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuStreamWriteValue64", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuStreamWriteValue64, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUdeviceptr, __pyx_t_4cuda_5ccuda_cuuint64_t, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuStreamBatchMemOp", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuStreamBatchMemOp, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, unsigned int, __pyx_t_4cuda_5ccuda_CUstreamBatchMemOpParams *, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuFuncGetAttribute", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuFuncGetAttribute, "__pyx_t_4cuda_5ccuda_CUresult (int *, __pyx_t_4cuda_5ccuda_CUfunction_attribute, __pyx_t_4cuda_5ccuda_CUfunction)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuFuncSetAttribute", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuFuncSetAttribute, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction, __pyx_t_4cuda_5ccuda_CUfunction_attribute, int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuFuncSetCacheConfig", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuFuncSetCacheConfig, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction, __pyx_t_4cuda_5ccuda_CUfunc_cache)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuFuncSetSharedMemConfig", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuFuncSetSharedMemConfig, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction, __pyx_t_4cuda_5ccuda_CUsharedconfig)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuFuncGetModule", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuFuncGetModule, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmodule *, __pyx_t_4cuda_5ccuda_CUfunction)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuLaunchKernel", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuLaunchKernel, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, __pyx_t_4cuda_5ccuda_CUstream, void **, void **)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuLaunchCooperativeKernel", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuLaunchCooperativeKernel, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, __pyx_t_4cuda_5ccuda_CUstream, void **)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuLaunchCooperativeKernelMultiDevice", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuLaunchCooperativeKernelMultiDevice, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_LAUNCH_PARAMS *, unsigned int, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuLaunchHostFunc", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuLaunchHostFunc, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUstream, __pyx_t_4cuda_5ccuda_CUhostFn, void *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuFuncSetBlockShape", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuFuncSetBlockShape, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction, int, int, int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuFuncSetSharedSize", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuFuncSetSharedSize, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuParamSetSize", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuParamSetSize, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuParamSeti", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuParamSeti, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction, int, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuParamSetf", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuParamSetf, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction, int, float)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuParamSetv", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuParamSetv, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction, int, void *, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuLaunch", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuLaunch, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuLaunchGrid", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuLaunchGrid, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction, int, int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuLaunchGridAsync", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuLaunchGridAsync, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction, int, int, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuParamSetTexRef", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuParamSetTexRef, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfunction, int, __pyx_t_4cuda_5ccuda_CUtexref)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphCreate", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphCreate, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraph *, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphAddKernelNode", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddKernelNode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUDA_KERNEL_NODE_PARAMS const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphKernelNodeGetParams", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphKernelNodeGetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_KERNEL_NODE_PARAMS *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphKernelNodeSetParams", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphKernelNodeSetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_KERNEL_NODE_PARAMS const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphAddMemcpyNode", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddMemcpyNode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D const *, __pyx_t_4cuda_5ccuda_CUcontext)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphMemcpyNodeGetParams", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphMemcpyNodeGetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphMemcpyNodeSetParams", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphMemcpyNodeSetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphAddMemsetNode", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddMemsetNode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUDA_MEMSET_NODE_PARAMS const *, __pyx_t_4cuda_5ccuda_CUcontext)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphMemsetNodeGetParams", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphMemsetNodeGetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_MEMSET_NODE_PARAMS *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphMemsetNodeSetParams", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphMemsetNodeSetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_MEMSET_NODE_PARAMS const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphAddHostNode", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddHostNode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUDA_HOST_NODE_PARAMS const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphHostNodeGetParams", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphHostNodeGetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_HOST_NODE_PARAMS *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphHostNodeSetParams", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphHostNodeSetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_HOST_NODE_PARAMS const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphAddChildGraphNode", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddChildGraphNode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUgraph)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphChildGraphNodeGetGraph", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphChildGraphNodeGetGraph, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUgraph *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphAddEmptyNode", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddEmptyNode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphAddEventRecordNode", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddEventRecordNode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUevent)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphEventRecordNodeGetEvent", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphEventRecordNodeGetEvent, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUevent *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphEventRecordNodeSetEvent", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphEventRecordNodeSetEvent, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUevent)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphAddEventWaitNode", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddEventWaitNode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUevent)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphEventWaitNodeGetEvent", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphEventWaitNodeGetEvent, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUevent *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphEventWaitNodeSetEvent", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphEventWaitNodeSetEvent, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUevent)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphAddExternalSemaphoresSignalNode", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddExternalSemaphoresSignalNode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_SIGNAL_NODE_PARAMS const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphExternalSemaphoresSignalNodeGetParams", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphExternalSemaphoresSignalNodeGetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_SIGNAL_NODE_PARAMS *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphExternalSemaphoresSignalNodeSetParams", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphExternalSemaphoresSignalNodeSetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_SIGNAL_NODE_PARAMS const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphAddExternalSemaphoresWaitNode", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddExternalSemaphoresWaitNode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_WAIT_NODE_PARAMS const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphExternalSemaphoresWaitNodeGetParams", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphExternalSemaphoresWaitNodeGetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_WAIT_NODE_PARAMS *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphExternalSemaphoresWaitNodeSetParams", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphExternalSemaphoresWaitNodeSetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_WAIT_NODE_PARAMS const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphAddMemAllocNode", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddMemAllocNode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUDA_MEM_ALLOC_NODE_PARAMS *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphMemAllocNodeGetParams", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphMemAllocNodeGetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_MEM_ALLOC_NODE_PARAMS *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphAddMemFreeNode", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddMemFreeNode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t, __pyx_t_4cuda_5ccuda_CUdeviceptr)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphMemFreeNodeGetParams", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphMemFreeNodeGetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUdeviceptr *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDeviceGraphMemTrim", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGraphMemTrim, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDeviceGetGraphMemAttribute", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetGraphMemAttribute, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdevice, __pyx_t_4cuda_5ccuda_CUgraphMem_attribute, void *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDeviceSetGraphMemAttribute", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceSetGraphMemAttribute, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdevice, __pyx_t_4cuda_5ccuda_CUgraphMem_attribute, void *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphClone", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphClone, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraph *, __pyx_t_4cuda_5ccuda_CUgraph)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphNodeFindInClone", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphNodeFindInClone, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUgraph)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphNodeGetType", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphNodeGetType, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUgraphNodeType *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphGetNodes", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphGetNodes, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode *, size_t *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphGetRootNodes", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphGetRootNodes, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode *, size_t *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphGetEdges", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphGetEdges, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraphNode *, size_t *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphNodeGetDependencies", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphNodeGetDependencies, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUgraphNode *, size_t *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphNodeGetDependentNodes", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphNodeGetDependentNodes, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUgraphNode *, size_t *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphAddDependencies", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphAddDependencies, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphRemoveDependencies", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphRemoveDependencies, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode const *, __pyx_t_4cuda_5ccuda_CUgraphNode const *, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphDestroyNode", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphDestroyNode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphInstantiate_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphInstantiate_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphExec *, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode *, char *, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphInstantiateWithFlags", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphInstantiateWithFlags, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphExec *, __pyx_t_4cuda_5ccuda_CUgraph, unsigned PY_LONG_LONG)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphExecKernelNodeSetParams", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecKernelNodeSetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_KERNEL_NODE_PARAMS const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphExecMemcpyNodeSetParams", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecMemcpyNodeSetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_MEMCPY3D const *, __pyx_t_4cuda_5ccuda_CUcontext)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphExecMemsetNodeSetParams", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecMemsetNodeSetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_MEMSET_NODE_PARAMS const *, __pyx_t_4cuda_5ccuda_CUcontext)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphExecHostNodeSetParams", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecHostNodeSetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_HOST_NODE_PARAMS const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphExecChildGraphNodeSetParams", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecChildGraphNodeSetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUgraph)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphExecEventRecordNodeSetEvent", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecEventRecordNodeSetEvent, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUevent)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphExecEventWaitNodeSetEvent", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecEventWaitNodeSetEvent, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUevent)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphExecExternalSemaphoresSignalNodeSetParams", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecExternalSemaphoresSignalNodeSetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_SIGNAL_NODE_PARAMS const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphExecExternalSemaphoresWaitNodeSetParams", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecExternalSemaphoresWaitNodeSetParams, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUDA_EXT_SEM_WAIT_NODE_PARAMS const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphUpload", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphUpload, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphLaunch", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphLaunch, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphExecDestroy", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecDestroy, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphExec)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphDestroy", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphDestroy, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraph)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphExecUpdate", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphExecUpdate, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphExec, __pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUgraphNode *, __pyx_t_4cuda_5ccuda_CUgraphExecUpdateResult *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphKernelNodeCopyAttributes", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphKernelNodeCopyAttributes, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUgraphNode)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphKernelNodeGetAttribute", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphKernelNodeGetAttribute, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUkernelNodeAttrID, __pyx_t_4cuda_5ccuda_CUkernelNodeAttrValue *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphKernelNodeSetAttribute", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphKernelNodeSetAttribute, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphNode, __pyx_t_4cuda_5ccuda_CUkernelNodeAttrID, __pyx_t_4cuda_5ccuda_CUkernelNodeAttrValue const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphDebugDotPrint", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphDebugDotPrint, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraph, char const *, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuUserObjectCreate", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuUserObjectCreate, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUuserObject *, void *, __pyx_t_4cuda_5ccuda_CUhostFn, unsigned int, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuUserObjectRetain", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuUserObjectRetain, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUuserObject, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuUserObjectRelease", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuUserObjectRelease, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUuserObject, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphRetainUserObject", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphRetainUserObject, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUuserObject, unsigned int, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphReleaseUserObject", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphReleaseUserObject, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraph, __pyx_t_4cuda_5ccuda_CUuserObject, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuOccupancyMaxActiveBlocksPerMultiprocessor", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuOccupancyMaxActiveBlocksPerMultiprocessor, "__pyx_t_4cuda_5ccuda_CUresult (int *, __pyx_t_4cuda_5ccuda_CUfunction, int, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags, "__pyx_t_4cuda_5ccuda_CUresult (int *, __pyx_t_4cuda_5ccuda_CUfunction, int, size_t, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuOccupancyMaxPotentialBlockSize", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuOccupancyMaxPotentialBlockSize, "__pyx_t_4cuda_5ccuda_CUresult (int *, int *, __pyx_t_4cuda_5ccuda_CUfunction, __pyx_t_4cuda_5ccuda_CUoccupancyB2DSize, size_t, int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuOccupancyMaxPotentialBlockSizeWithFlags", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuOccupancyMaxPotentialBlockSizeWithFlags, "__pyx_t_4cuda_5ccuda_CUresult (int *, int *, __pyx_t_4cuda_5ccuda_CUfunction, __pyx_t_4cuda_5ccuda_CUoccupancyB2DSize, size_t, int, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuOccupancyAvailableDynamicSMemPerBlock", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuOccupancyAvailableDynamicSMemPerBlock, "__pyx_t_4cuda_5ccuda_CUresult (size_t *, __pyx_t_4cuda_5ccuda_CUfunction, int, int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexRefSetArray", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetArray, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexref, __pyx_t_4cuda_5ccuda_CUarray, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexRefSetMipmappedArray", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetMipmappedArray, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexref, __pyx_t_4cuda_5ccuda_CUmipmappedArray, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexRefSetAddress_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetAddress_v2, "__pyx_t_4cuda_5ccuda_CUresult (size_t *, __pyx_t_4cuda_5ccuda_CUtexref, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexRefSetAddress2D_v3", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetAddress2D_v3, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexref, __pyx_t_4cuda_5ccuda_CUDA_ARRAY_DESCRIPTOR const *, __pyx_t_4cuda_5ccuda_CUdeviceptr, size_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexRefSetFormat", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetFormat, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexref, __pyx_t_4cuda_5ccuda_CUarray_format, int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexRefSetAddressMode", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetAddressMode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexref, int, __pyx_t_4cuda_5ccuda_CUaddress_mode)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexRefSetFilterMode", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetFilterMode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexref, __pyx_t_4cuda_5ccuda_CUfilter_mode)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexRefSetMipmapFilterMode", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetMipmapFilterMode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexref, __pyx_t_4cuda_5ccuda_CUfilter_mode)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexRefSetMipmapLevelBias", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetMipmapLevelBias, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexref, float)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexRefSetMipmapLevelClamp", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetMipmapLevelClamp, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexref, float, float)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexRefSetMaxAnisotropy", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetMaxAnisotropy, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexref, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexRefSetBorderColor", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetBorderColor, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexref, float *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexRefSetFlags", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefSetFlags, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexref, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexRefGetAddress_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetAddress_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr *, __pyx_t_4cuda_5ccuda_CUtexref)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexRefGetArray", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetArray, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUarray *, __pyx_t_4cuda_5ccuda_CUtexref)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexRefGetMipmappedArray", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetMipmappedArray, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmipmappedArray *, __pyx_t_4cuda_5ccuda_CUtexref)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexRefGetAddressMode", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetAddressMode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUaddress_mode *, __pyx_t_4cuda_5ccuda_CUtexref, int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexRefGetFilterMode", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetFilterMode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfilter_mode *, __pyx_t_4cuda_5ccuda_CUtexref)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexRefGetFormat", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetFormat, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUarray_format *, int *, __pyx_t_4cuda_5ccuda_CUtexref)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexRefGetMipmapFilterMode", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetMipmapFilterMode, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUfilter_mode *, __pyx_t_4cuda_5ccuda_CUtexref)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexRefGetMipmapLevelBias", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetMipmapLevelBias, "__pyx_t_4cuda_5ccuda_CUresult (float *, __pyx_t_4cuda_5ccuda_CUtexref)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexRefGetMipmapLevelClamp", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetMipmapLevelClamp, "__pyx_t_4cuda_5ccuda_CUresult (float *, float *, __pyx_t_4cuda_5ccuda_CUtexref)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexRefGetMaxAnisotropy", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetMaxAnisotropy, "__pyx_t_4cuda_5ccuda_CUresult (int *, __pyx_t_4cuda_5ccuda_CUtexref)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexRefGetBorderColor", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetBorderColor, "__pyx_t_4cuda_5ccuda_CUresult (float *, __pyx_t_4cuda_5ccuda_CUtexref)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexRefGetFlags", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefGetFlags, "__pyx_t_4cuda_5ccuda_CUresult (unsigned int *, __pyx_t_4cuda_5ccuda_CUtexref)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexRefCreate", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefCreate, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexref *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexRefDestroy", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexRefDestroy, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexref)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuSurfRefSetArray", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuSurfRefSetArray, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUsurfref, __pyx_t_4cuda_5ccuda_CUarray, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuSurfRefGetArray", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuSurfRefGetArray, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUarray *, __pyx_t_4cuda_5ccuda_CUsurfref)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexObjectCreate", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexObjectCreate, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexObject *, __pyx_t_4cuda_5ccuda_CUDA_RESOURCE_DESC const *, __pyx_t_4cuda_5ccuda_CUDA_TEXTURE_DESC const *, __pyx_t_4cuda_5ccuda_CUDA_RESOURCE_VIEW_DESC const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexObjectDestroy", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexObjectDestroy, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUtexObject)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexObjectGetResourceDesc", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexObjectGetResourceDesc, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_RESOURCE_DESC *, __pyx_t_4cuda_5ccuda_CUtexObject)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexObjectGetTextureDesc", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexObjectGetTextureDesc, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_TEXTURE_DESC *, __pyx_t_4cuda_5ccuda_CUtexObject)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuTexObjectGetResourceViewDesc", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuTexObjectGetResourceViewDesc, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_RESOURCE_VIEW_DESC *, __pyx_t_4cuda_5ccuda_CUtexObject)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuSurfObjectCreate", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuSurfObjectCreate, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUsurfObject *, __pyx_t_4cuda_5ccuda_CUDA_RESOURCE_DESC const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuSurfObjectDestroy", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuSurfObjectDestroy, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUsurfObject)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuSurfObjectGetResourceDesc", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuSurfObjectGetResourceDesc, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUDA_RESOURCE_DESC *, __pyx_t_4cuda_5ccuda_CUsurfObject)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDeviceCanAccessPeer", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceCanAccessPeer, "__pyx_t_4cuda_5ccuda_CUresult (int *, __pyx_t_4cuda_5ccuda_CUdevice, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuCtxEnablePeerAccess", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuCtxEnablePeerAccess, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUcontext, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuCtxDisablePeerAccess", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuCtxDisablePeerAccess, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUcontext)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuDeviceGetP2PAttribute", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuDeviceGetP2PAttribute, "__pyx_t_4cuda_5ccuda_CUresult (int *, __pyx_t_4cuda_5ccuda_CUdevice_P2PAttribute, __pyx_t_4cuda_5ccuda_CUdevice, __pyx_t_4cuda_5ccuda_CUdevice)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphicsUnregisterResource", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphicsUnregisterResource, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphicsResource)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphicsSubResourceGetMappedArray", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphicsSubResourceGetMappedArray, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUarray *, __pyx_t_4cuda_5ccuda_CUgraphicsResource, unsigned int, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphicsResourceGetMappedMipmappedArray", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphicsResourceGetMappedMipmappedArray, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUmipmappedArray *, __pyx_t_4cuda_5ccuda_CUgraphicsResource)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphicsResourceGetMappedPointer_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphicsResourceGetMappedPointer_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUdeviceptr *, size_t *, __pyx_t_4cuda_5ccuda_CUgraphicsResource)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphicsResourceSetMapFlags_v2", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphicsResourceSetMapFlags_v2, "__pyx_t_4cuda_5ccuda_CUresult (__pyx_t_4cuda_5ccuda_CUgraphicsResource, unsigned int)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphicsMapResources", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphicsMapResources, "__pyx_t_4cuda_5ccuda_CUresult (unsigned int, __pyx_t_4cuda_5ccuda_CUgraphicsResource *, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGraphicsUnmapResources", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGraphicsUnmapResources, "__pyx_t_4cuda_5ccuda_CUresult (unsigned int, __pyx_t_4cuda_5ccuda_CUgraphicsResource *, __pyx_t_4cuda_5ccuda_CUstream)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGetProcAddress", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGetProcAddress, "__pyx_t_4cuda_5ccuda_CUresult (char const *, void **, int, __pyx_t_4cuda_5ccuda_cuuint64_t)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "_cuGetExportTable", (void (**)(void))&__pyx_f_4cuda_5_cuda_5ccuda__cuGetExportTable, "__pyx_t_4cuda_5ccuda_CUresult (void const **, __pyx_t_4cuda_5ccuda_CUuuid const *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_RefNannyFinishContext();
  return -1;
}


#ifndef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#elif PY_MAJOR_VERSION < 3
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" void
#else
#define __Pyx_PyMODINIT_FUNC void
#endif
#else
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyObject *
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC initccuda(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC initccuda(void)
#else
__Pyx_PyMODINIT_FUNC PyInit_ccuda(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit_ccuda(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    #if PY_VERSION_HEX >= 0x030700A1
    static PY_INT64_T main_interpreter_id = -1;
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return (unlikely(current_id == -1)) ? -1 : 0;
    } else if (unlikely(main_interpreter_id != current_id))
    #else
    static PyInterpreterState *main_interpreter = NULL;
    PyInterpreterState *current_interpreter = PyThreadState_Get()->interp;
    if (!main_interpreter) {
        main_interpreter = current_interpreter;
    } else if (unlikely(main_interpreter != current_interpreter))
    #endif
    {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none) {
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
            result = PyDict_SetItemString(moddict, to_name, value);
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, CYTHON_UNUSED PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    if (__Pyx_check_single_interpreter())
        return NULL;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec_ccuda(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  __Pyx_TraceDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module 'ccuda' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #elif PY_MAJOR_VERSION >= 3
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit_ccuda(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(WITH_THREAD) && PY_VERSION_HEX < 0x030700F0 && defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  PyEval_InitThreads();
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("ccuda", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_b);
  __pyx_cython_runtime = PyImport_AddModule((char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_cython_runtime);
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_cuda__ccuda) {
    if (PyObject_SetAttr(__pyx_m, __pyx_n_s_name, __pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "cuda.ccuda")) {
      if (unlikely(PyDict_SetItemString(modules, "cuda.ccuda", __pyx_m) < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code();
  (void)__Pyx_modinit_variable_export_code();
  if (unlikely(__Pyx_modinit_function_export_code() < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
  (void)__Pyx_modinit_type_init_code();
  (void)__Pyx_modinit_type_import_code();
  (void)__Pyx_modinit_variable_import_code();
  if (unlikely(__Pyx_modinit_function_import_code() < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  __Pyx_TraceCall("__Pyx_PyMODINIT_FUNC PyInit_ccuda(void)", __pyx_f[0], 1, 0, __PYX_ERR(0, 1, __pyx_L1_error));

  /* "cuda/ccuda.pyx":1
 * # Copyright 2021 NVIDIA Corporation.  All rights reserved.             # <<<<<<<<<<<<<<
 * #
 * # Please refer to the NVIDIA end user license agreement (EULA) associated
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_TraceReturn(Py_None, 0);

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init cuda.ccuda", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_CLEAR(__pyx_m);
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init cuda.ccuda");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* Profile */
#if CYTHON_PROFILE
static int __Pyx_TraceSetupAndCall(PyCodeObject** code,
                                   PyFrameObject** frame,
                                   PyThreadState* tstate,
                                   const char *funcname,
                                   const char *srcfile,
                                   int firstlineno) {
    PyObject *type, *value, *traceback;
    int retval;
    if (*frame == NULL || !CYTHON_PROFILE_REUSE_FRAME) {
        if (*code == NULL) {
            *code = __Pyx_createFrameCodeObject(funcname, srcfile, firstlineno);
            if (*code == NULL) return 0;
        }
        *frame = PyFrame_New(
            tstate,                          /*PyThreadState *tstate*/
            *code,                           /*PyCodeObject *code*/
            __pyx_d,                  /*PyObject *globals*/
            0                                /*PyObject *locals*/
        );
        if (*frame == NULL) return 0;
        if (CYTHON_TRACE && (*frame)->f_trace == NULL) {
            Py_INCREF(Py_None);
            (*frame)->f_trace = Py_None;
        }
#if PY_VERSION_HEX < 0x030400B1
    } else {
        (*frame)->f_tstate = tstate;
#endif
    }
    __Pyx_PyFrame_SetLineNumber(*frame, firstlineno);
    retval = 1;
    tstate->tracing++;
    __Pyx_SetTracing(tstate, 0);
    __Pyx_ErrFetchInState(tstate, &type, &value, &traceback);
    #if CYTHON_TRACE
    if (tstate->c_tracefunc)
        retval = tstate->c_tracefunc(tstate->c_traceobj, *frame, PyTrace_CALL, NULL) == 0;
    if (retval && tstate->c_profilefunc)
    #endif
        retval = tstate->c_profilefunc(tstate->c_profileobj, *frame, PyTrace_CALL, NULL) == 0;
    __Pyx_SetTracing(tstate, (tstate->c_profilefunc || (CYTHON_TRACE && tstate->c_tracefunc)));
    tstate->tracing--;
    if (retval) {
        __Pyx_ErrRestoreInState(tstate, type, value, traceback);
        return __Pyx_IsTracing(tstate, 0, 0) && retval;
    } else {
        Py_XDECREF(type);
        Py_XDECREF(value);
        Py_XDECREF(traceback);
        return -1;
    }
}
static PyCodeObject *__Pyx_createFrameCodeObject(const char *funcname, const char *srcfile, int firstlineno) {
    PyCodeObject *py_code = 0;
#if PY_MAJOR_VERSION >= 3
    py_code = PyCode_NewEmpty(srcfile, funcname, firstlineno);
    if (likely(py_code)) {
        py_code->co_flags |= CO_OPTIMIZED | CO_NEWLOCALS;
    }
#else
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    py_funcname = PyString_FromString(funcname);
    if (unlikely(!py_funcname)) goto bad;
    py_srcfile = PyString_FromString(srcfile);
    if (unlikely(!py_srcfile)) goto bad;
    py_code = PyCode_New(
        0,
        0,
        0,
        CO_OPTIMIZED | CO_NEWLOCALS,
        __pyx_empty_bytes,     /*PyObject *code,*/
        __pyx_empty_tuple,     /*PyObject *consts,*/
        __pyx_empty_tuple,     /*PyObject *names,*/
        __pyx_empty_tuple,     /*PyObject *varnames,*/
        __pyx_empty_tuple,     /*PyObject *freevars,*/
        __pyx_empty_tuple,     /*PyObject *cellvars,*/
        py_srcfile,       /*PyObject *filename,*/
        py_funcname,      /*PyObject *name,*/
        firstlineno,
        __pyx_empty_bytes      /*PyObject *lnotab*/
    );
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
#endif
    return py_code;
}
#endif

/* PyDictVersioning */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {
    PyObject **dictptr = NULL;
    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;
    if (offset) {
#if CYTHON_COMPILING_IN_CPYTHON
        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);
#else
        dictptr = _PyObject_GetDictPtr(obj);
#endif
    }
    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;
}
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))
        return 0;
    return obj_dict_version == __Pyx_get_object_dict_version(obj);
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* CLineInTraceback */
#ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(CYTHON_NCP_UNUSED PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback))
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, ((size_t)new_max) * sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

/* AddTraceback */
#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

/* None */
static CYTHON_INLINE int __Pyx_ErrOccurredWithGIL(void) {
  int err;
  #ifdef WITH_THREAD
  PyGILState_STATE _save = PyGILState_Ensure();
  #endif
  err = !!PyErr_Occurred();
  #ifdef WITH_THREAD
  PyGILState_Release(_save);
  #endif
  return err;
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* CIntFromPyVerify */
#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* CIntFromPy */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* CIntFromPy */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* FastTypeChecks */
#if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = a->tp_base;
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    int res = exc_type1 ? __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type1) : 0;
    if (!res) {
        res = __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
    return res;
}
#endif
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        #if PY_MAJOR_VERSION < 3
        if (likely(exc_type == t)) return 1;
        #endif
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* CheckBinaryVersion */
static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* FunctionExport */
static int __Pyx_ExportFunction(const char *name, void (*f)(void), const char *sig) {
    PyObject *d = 0;
    PyObject *cobj = 0;
    union {
        void (*fp)(void);
        void *p;
    } tmp;
    d = PyObject_GetAttrString(__pyx_m, (char *)"__pyx_capi__");
    if (!d) {
        PyErr_Clear();
        d = PyDict_New();
        if (!d)
            goto bad;
        Py_INCREF(d);
        if (PyModule_AddObject(__pyx_m, (char *)"__pyx_capi__", d) < 0)
            goto bad;
    }
    tmp.fp = f;
#if PY_VERSION_HEX >= 0x02070000
    cobj = PyCapsule_New(tmp.p, sig, 0);
#else
    cobj = PyCObject_FromVoidPtrAndDesc(tmp.p, (void *)sig, 0);
#endif
    if (!cobj)
        goto bad;
    if (PyDict_SetItemString(d, name, cobj) < 0)
        goto bad;
    Py_DECREF(cobj);
    Py_DECREF(d);
    return 0;
bad:
    Py_XDECREF(cobj);
    Py_XDECREF(d);
    return -1;
}

/* FunctionImport */
#ifndef __PYX_HAVE_RT_ImportFunction
#define __PYX_HAVE_RT_ImportFunction
static int __Pyx_ImportFunction(PyObject *module, const char *funcname, void (**f)(void), const char *sig) {
    PyObject *d = 0;
    PyObject *cobj = 0;
    union {
        void (*fp)(void);
        void *p;
    } tmp;
    d = PyObject_GetAttrString(module, (char *)"__pyx_capi__");
    if (!d)
        goto bad;
    cobj = PyDict_GetItemString(d, funcname);
    if (!cobj) {
        PyErr_Format(PyExc_ImportError,
            "%.200s does not export expected C function %.200s",
                PyModule_GetName(module), funcname);
        goto bad;
    }
#if PY_VERSION_HEX >= 0x02070000
    if (!PyCapsule_IsValid(cobj, sig)) {
        PyErr_Format(PyExc_TypeError,
            "C function %.200s.%.200s has wrong signature (expected %.500s, got %.500s)",
             PyModule_GetName(module), funcname, sig, PyCapsule_GetName(cobj));
        goto bad;
    }
    tmp.p = PyCapsule_GetPointer(cobj, sig);
#else
    {const char *desc, *s1, *s2;
    desc = (const char *)PyCObject_GetDesc(cobj);
    if (!desc)
        goto bad;
    s1 = desc; s2 = sig;
    while (*s1 != '\0' && *s1 == *s2) { s1++; s2++; }
    if (*s1 != *s2) {
        PyErr_Format(PyExc_TypeError,
            "C function %.200s.%.200s has wrong signature (expected %.500s, got %.500s)",
             PyModule_GetName(module), funcname, sig, desc);
        goto bad;
    }
    tmp.p = PyCObject_AsVoidPtr(cobj);}
#endif
    *f = tmp.fp;
    if (!(*f))
        goto bad;
    Py_DECREF(d);
    return 0;
bad:
    Py_XDECREF(d);
    return -1;
}
#endif

/* InitStrings */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type %.200s).  "
                "The ability to return an instance of a strict subclass of int "
                "is deprecated, and may be removed in a future version of Python.",
                Py_TYPE(result)->tp_name)) {
            Py_DECREF(result);
            return NULL;
        }
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type %.200s)",
                 type_name, type_name, Py_TYPE(result)->tp_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(b);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
